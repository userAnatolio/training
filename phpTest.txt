PHP начало

1. Создайте переменную $a и присвойте ей значение 3. Выведите значение этой переменной на экран.

<?php

$a = 3;
echo $a;

?>
Нравится
*********
*********
********* 1 июн 2018 в 21:15
2. Создайте переменные $a=10 и $b=2. Выведите на экран их сумму, разность, произведение и частное (результат деления).

<?php

$a = 10;
$b = 2;
echo $a + $b . '<br>';
echo $a * $b . '<br>';
echo $a / $b . '<br>';
echo $a - $b . '<br>';

?>
Нравится
*********
*********
********* 1 июн 2018 в 21:17
3. Создайте переменные $c=15 и $d=2. Просуммируйте их, а результат присвойте переменной $result. Выведите на экран значение переменной $result.

<?php

$c = 15;
$d = 2;
$result = $c + $d;
echo $result . '<br>';


?>
Нравится
*********
*********
********* 1 июн 2018 в 21:21
4. Создайте переменные $a=10, $b=2 и $c=5. Выведите на экран их сумму.

<?php

$a = 10;
$b = 2;
$c = 5;
echo $a + $b + $c . '<br>';


?>
Нравится
*********
*********
********* 1 июн 2018 в 21:24
5. Создайте переменные $a=17 и $b=10. Отнимите от $a переменную $b и результат присвойте переменной $c. Затем создайте переменную $d, присвойте ей значение 7. Сложите переменные $c и $d, а результат запишите в переменную $result. Выведите на экран значение переменной $result.
<?php

$a = 17;
$b = 10;
$c = $a - $b;
$d = 7;

$result = $c + $d;
echo $result;

?>
Нравится
*********
*********
********* 1 июн 2018 в 21:25
Работа со строками
6. Создайте переменную $text и присвойте ей значение 'Привет, Мир!'. Выведите значение этой переменной на экран.

<?php

$text = 'привет мир!';
echo $text;

?>
Нравится
*********
*********
********* 1 июн 2018 в 21:27
7. Создайте переменные $text1='Привет, ' и $text2='Мир!'. С помощью этих переменных и операции сложения строк выведите на экран фразу 'Привет, Мир!'.

<?php

$text1 = 'привет';
$text2 = ' мир!';
echo $text1 . $text2;

?>
Нравится
*********
*********
********* 1 июн 2018 в 21:28
8. Создайте переменную $name и присвойте ей ваше имя. Выведите на экран фразу 'Привет, %Имя%!'. Вместо %Имя% должно стоять ваше имя.

<?php

$name = 'Толя';
echo 'привет ' . $name . '!';

?>
Нравится
*********
*********
********* 1 июн 2018 в 21:30
9. Создайте переменную $age и присвойте ей ваш возраст. Выведите на экран 'Мне %Возраст% лет!'.

<?php

$age = 30;
echo 'Мне ' . $age . 'лет !';

?>
Нравится
*********
*********
********* 1 июн 2018 в 21:32
Обращение к символам строки
10. Создайте переменную $text и присвойте ей значение 'abcde'. Обращаясь к отдельным символам этой строки выведите на экран символ 'a', символ 'c', символ 'e'.

<?php

$text = 'abcde';
echo $text[0];
echo $text[2];
echo $text[4];

?>
Нравится
*********
*********
********* 1 июн 2018 в 21:34
11. Дана произвольная строка, например, 'abcde'. Поменяйте первую букву (то есть букву 'a') этой строки на '!'.

<?php

$text = 'abcde';
$text[0] = '!';
echo $text;

?>
Нравится
*********
*********
********* 1 июн 2018 в 21:36
12. Создайте переменную $num и присвойте ей значение '12345'. Найдите сумму цифр этого числа

<?php

$num = '12345';
$result = $num[0] + $num[1] + $num[2] + $num[3] + $num[4];
echo $result;
?>
Нравится
*********
*********
********* 1 июн 2018 в 21:38
Практика
13. Напишите скрипт, который считает количество секунд в часе, в сутках, в месяце.

<?php
echo 60 * 60;
echo 60 * 60 * 24;
echo 60 * 60 * 24 * 31;
?>
Нравится
*********
*********
********* 1 июн 2018 в 21:41
14. Создайте три переменные - час, минута, секунда. С их помощью выведите текущее время в формате 'час:минута:секунда'.

<?php
$hour = '02';
$minute = "20";
$second = '20';
echo $hour . ':' . $minute . ':' . $second;
?>
Нравится
*********
*********
********* 1 июн 2018 в 21:43
15. Создайте переменную, присвойте ей число. Возведите это число в квадрат (это значит нужно умножить его само на себя). Выведите его на экран.

<?php
$num = 2;
echo $num * $num;
?>
Нравится
*********
*********
********* 1 июн 2018 в 21:45
Работа с присваиванием и декрементами
16. Переделайте этот код так, чтобы в нем использовались операции +=, -=, *=, /=. Количество строк кода при этом не должно измениться.

<?php
$var = 47;
$var += 7;
$var -= 18;
$var *= 10;
$var /= 20;
echo $var;
?>
Нравится
*********
*********
********* 1 июн 2018 в 21:46
17. Переделайте этот код так, чтобы в нем использовалась операция .=. Количество строк кода при этом не должно измениться.

<?php
$text .= 'Я';
$text .= ' хочу';
$text .= ' знать';
$text .= ' PHP!';
echo $text;
?>
Нравится
*********
*********
********* 1 июн 2018 в 21:49
18. Переделайте этот код так, чтобы в нем использовались операции ++ и —. Количество строк кода при этом не должно измениться.

$var = 10;
$var++;
$var++;
$var--;
echo $var;
Нравится
*********
*********
********* 1 июн 2018 в 21:52
19. Переделайте этот код так, чтобы в нем использовались операции ++, — , +=, -=, *=, /=. Количество строк кода при этом не должно измениться.

<?php
$var = 10;
$var += 7;
$var++;
$var--;
$var += 12;
$var *= 7;
$var -= 15;
echo $var;
?>
Нравится
*********
*********
********* 1 июн 2018 в 21:53
Задачи на основы работы с массивами в PHP

Работа с массивами
Нравится
*********
*********
********* 2 июн 2018 в 23:12
1. Создайте массив $arr=['a', 'b', 'c']. Выведите значение массива на экран с помощью функции var_dump().

var_dump($arr);
Нравится
*********
*********
********* 2 июн 2018 в 23:16
2. С помощью массива $arr из предыдущего номера выведите на экран содержимое первого, второго и третьего элементов.

$arr=['a', 'b', 'c'];
echo $arr[0];
echo $arr[1];
echo $arr[2];
Нравится
*********
*********
********* 2 июн 2018 в 23:18
3. Создайте массив $arr=['a', 'b', 'c', 'd'] и с его помощью выведите на экран строку 'a+b, c+d'.

$arr=['a', 'b', 'c', 'd'];
echo $arr[0] . '+' . $arr[1] . ', ' . $arr[2] . '+' . $arr[3];
Нравится
*********
*********
********* 2 июн 2018 в 23:21
4. Создайте массив $arr с элементами 2, 5, 3, 9. Умножьте первый элемент массива на второй, а третий элемент на четвертый. Результаты сложите, присвойте переменной $result. Выведите на экран значение этой переменной.

$arr = [2, 5, 3, 9];
$result = ($arr[0] * $arr[1]) + ($arr[2] * $arr[3]);
echo $result;
Нравится
*********
*********
********* 2 июн 2018 в 23:24
5. Заполните массив $arr числами от 1 до 5. Не объявляйте массив, а просто заполните его присваиванием $arr[] = новое значение.

$arr[] = 1;
$arr[] = 2;
$arr[] = 3;
$arr[] = 4;
$arr[] = 5;
var_dump($arr);
Нравится
*********
*********
********* 2 июн 2018 в 23:27
Ассоциативные массивы
6. Создайте массив $arr. Выведите на экран элемент с ключом 'c'.

$arr = ['a' => 'Яблоко', 'b' => 'Апельсин', 'c' => 'Банан'];
echo $arr['c'];
Нравится
*********
*********
********* 2 июн 2018 в 23:29
7. Создайте массив $arr. Найдите сумму элементов этого массива.

$arr = [1, 2, 3,];
echo $arr[0] + $arr[1] + $arr[2];
Нравится
*********
*********
********* 2 июн 2018 в 23:30
8. Создайте массив заработных плат $arr. Выведите на экран зарплату Пети и Коли.

$arr = ['Петя' => 1000, 'Коля' => 2000];
echo $arr['Петя'];
echo $arr['Коля'];
Нравится
*********
*********
********* 2 июн 2018 в 23:35
9. Создайте ассоциативный массив дней недели. Ключами в нем должны служить номера дней от начала недели (понедельник - должен иметь ключ 1, вторник - 2 и т.д.). Выведите на экран текущий день недели.

$arr = [1=> 'Пн', 2 => 'Вт', 3 => 'Ср', 4 => 'Чт', 5 => 'Пт', 6 => 'Сб', 7 => 'Вс'];
$arr[6];
Нравится
*********
*********
********* 2 июн 2018 в 23:44
10. Пусть теперь номер дня недели хранится в переменной $day, например там лежит число 3. Выведите день недели, соответствующий значению переменной $day.
$arr = [1=> 'Пн', 2 => 'Вт', 3 => 'Ср', 4 => 'Чт', 5 => 'Пт', 6 => 'Сб', 7 => 'Вс'];
$arr[6];
$day = 3;
echo $arr[$day];
Нравится
*********
*********
********* 2 июн 2018 в 23:49
Многомерные массивы
11. Создайте многомерный массив $arr. С его помощью выведите на экран слова 'joomla', 'drupal', 'зеленый', 'красный'.

$arr = [
'cms'=>['joomla', 'wordpress', 'drupal'],
'colors'=>['blue'=>'голубой', 'red'=>'красный', 'green'=>'зеленый']
];

echo $arr['cms'][0];
echo $arr['cms'][2];
echo $arr['colors']['green'];
echo $arr['colors']['red'];
Нравится
*********
*********
********* 2 июн 2018 в 23:53
12. Создайте двухмерный массив. Первые два ключа - это 'ru' и 'en'. Пусть первый ключ содержит элемент, являющийся массивом названий дней недели по-русски, а второй - по-английски. Выведите с помощью этого массива понедельник по-русски и среду по английски (пусть понедельник - это первый день).

$arr = [
'ru' => [1=>'пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс' ],
'en' => [1=>'mn', 'ts', 'wd', 'th', 'fr', 'st', 'sn' ]
];
echo $arr['ru'][1];
echo $arr['en'][3];
Нравится
*********
*********
********* 2 июн 2018 в 23:55
13. Пусть теперь в переменной $lang хранится язык (она принимает одно из значений или 'ru', или 'en' - либо то, либо то), а в переменной $day - номер дня. Выведите словом день недели, соответствующий переменным $lang и $day. То есть: если, к примеру, $lang = 'ru' и $day = 3 - то выведем 'среда'.

$lang = 'ru';
$day = '1';
echo $arr[$lang][$day];
Нравится
*********
*********
********* 2 июн 2018 в 23:55
Задачи на конструкции if-else, switch-case в PHP
Нравится
*********
Дмитрий Трепачёв
Дмитрий Трепачёв 5 июн 2018 в 9:07
Толя, +
Нравится
*********
Ответить
*********
********* 6 июн 2018 в 0:32
1. Если переменная $a равна нулю, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 0, -3.

$a = 1;
if($a == 0) {
echo 'Верно!';
else {
echo 'Неверно!';
};
Нравится
*********
*********
********* 6 июн 2018 в 0:34
2. Если переменная $a больше нуля, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 0, -3.

$a = 1;
if($a > 0) {
echo 'верно';
else {
echo 'неверно';
}
Нравится
*********
*********
********* 6 июн 2018 в 0:35
3. Если переменная $a меньше нуля, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 0, -3.

if(a < 0) {
echo 'верно';
}
else {
echo 'неверно';
}
Нравится
*********
*********
********* 6 июн 2018 в 0:36
4. Если переменная $a больше или равна нулю, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 0, -3.

if($a >= 0) {
echo 'верно';
}
else {
echo 'неверно';
}
Нравится
*********
*********
********* 6 июн 2018 в 0:38
5. Если переменная $a меньше или равна нулю, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 0, -3.
if($a <= 0) {
echo 'верно';
}
else {
echo 'неверно';
}
Нравится
*********
*********
********* 6 июн 2018 в 0:39
6. Если переменная $a не равна нулю, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 0, -3.

if($a != 0) {
echo 'верно';
}
else {
echo 'неверно';
}
Нравится
*********
*********
********* 6 июн 2018 в 0:40
7. Если переменная $a равна 'test', то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 'test', 'тест', 3.

if($a == 'test') {
echo 'верно';
}
else {
echo 'неверно';
}
Нравится
*********
*********
********* 6 июн 2018 в 0:41
8. Если переменная $a равна '1' и по значению и по типу, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном '1', 1, 3.

if($a === '1') {
echo 'верно';
}
else {
echo 'неверно';
}
Нравится
*********
*********
********* 6 июн 2018 в 0:45
Работа с empty и isset
9. Если переменная $a пустая, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 3, -3, 0, null, true, '', '0'.

if(empty($a)) {
echo 'верно';
}
else {
echo 'неверно';
}
Нравится
*********
*********
********* 6 июн 2018 в 0:46
10. Если переменная $a НЕ пустая, то выведите 'Верно', иначе выведите 'Неверно'.
if(!empty($a)) {
echo 'верно';
}
else {
echo 'неверно';
}
Нравится
*********
*********
********* 6 июн 2018 в 0:49
11. Если переменная $a существует, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 3 и null.

if(isset($a)) {
echo 'верно';
}
else {
echo 'неверно';
}
Нравится
*********
*********
********* 6 июн 2018 в 0:50
12. Если переменная $a НЕ существует, то выведите 'Верно', иначе выведите 'Неверно'.

if(!isset($a)) {
echo 'верно';
}
else {
echo 'неверно';
}
Нравится
*********
*********
********* 6 июн 2018 в 2:01
Работа с логическими переменными
13. Если переменная $var равна true, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $var, равном true, false. Напишите два варианта скрипта - с короткой записью и с длинной.

$var = true;
if($var == true) {
echo 'верно';
}
else {
echo 'неверно';
}

if($var) echo 'верно';
else echo 'неверно';
Нравится
*********
*********
********* 6 июн 2018 в 2:03
14. Если переменная $var НЕ равна true, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $var, равном true, false. Напишите два варианта скрипта - с короткой записью и с длинной.

if(!$var) {
echo 'верно';
}
else {
echo 'неверно';
}
if(!$var) echo 'верно';
else echo 'неверно';
Нравится
*********
*********
********* 6 июн 2018 в 2:05
Работа с OR и AND
15. Если переменная $a больше нуля и меньше 5-ти, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 5, 0, -3, 2.
$a = 5;
if($a > 0 and $a < 5) {
echo 'верно';
}
else {
echo 'неверно';
}
Нравится
*********
*********
********* 6 июн 2018 в 2:07
16. Если переменная $a равна нулю или равна двум, то прибавьте к ней 7, иначе поделите ее на 10. Выведите новое значение переменной на экран. Проверьте работу скрипта при $a, равном 5, 0, -3, 2.
$a = 5;
if($a == 0 or $a == 2) {
$a += 7;
}
else {
$a /= 10;
}
echo $a;
Нравится
*********
*********
********* 6 июн 2018 в 2:09
17. Если переменная $a равна или меньше 1, а переменная $b больше или равна 3, то выведите сумму этих переменных, иначе выведите их разность (результат вычитания). Проверьте работу скрипта при $a и $b, равном 1 и 3, 0 и 6, 3 и 5.

if($a <= 1 and $b >= 3) {
echo $a + $b;
}
else {
$a - $b;
}
Нравится
*********
*********
********* 6 июн 2018 в 2:11
18. Если переменная $a больше 2-х и меньше 11-ти, или переменная $b больше или равна 6-ти и меньше 14-ти, то выведите 'Верно', в противном случае выведите 'Неверно'.

if($a > 2 and $a < 11 or $b >= 6 and $b < 14) {
echo 'верно';
}
else {
echo 'Верно';
}
Нравится
*********
*********
********* 6 июн 2018 в 2:19
На switch-case
19. Переменная $num может принимать одно из значений: 1, 2, 3 или 4. Если она имеет значение '1', то в переменную $result запишем 'зима', если имеет значение '2' – 'лето' и так далее. Решите задачу через switch-case.
$result='';
$num = 1;
switch($num) {
case 1:
$result = 'зима';
break;
case 2:
$result = 'лето';
break;
case 3:
$result = 'лето';
break;
case 4:
$result = 'осень';
break;
}
echo $result;
Нравится
*********
*********
********* 6 июн 2018 в 2:24
20. В переменной $day лежит какое-то число из интервала от 1 до 31. Определите в какую декаду месяца попадает это число (в первую, вторую или третью).

$day = 30;
if($day >=1 and $day <= 10) {
echo 'первая';
}
if($day >=11 and $day <= 20) {
echo 'Вторая';
}
if($day >= 21 and $day <= 31) {
echo 'третья';
}
Нравится
*********
*********
********* 6 июн 2018 в 2:31
21. В переменной $month лежит какое-то число из интервала от 1 до 12. Определите в какую пору года попадает этот месяц (зима, лето, весна, осень).

$month = 10;
if($month == 12 or $month == 1 and $month == 2) {
echo 'зима';
}
if($month >= 3 and $month <=5) {
echo 'весна';
}
if($month >=6 and $month <=8) {
echo 'лето';
}
if($month >= 9 and $month <= 11) {
echo 'осень';
}
Нравится
*********
*********
********* 6 июн 2018 в 2:35
22. В переменной $year хранится год. Определите, является ли он високосным (в таком году есть 29 февраля). Год будет високосным в двух случаях: либо он делится на 4, но при этом не делится на 100, либо делится на 400. Так, годы 1700, 1800 и 1900 не являются високосными, так как они делятся на 100 и не делятся на 400. Годы 1600 и 2000 - високосные, так как они делятся на 400.

$year = 1600;
if($year % 4 == 0 and $year % 100 != 0 or $year % 400 == 0) {
echo 'висосный';
}
else {
echo 'невисокосный';
}
Нравится
*********
*********
********* 6 июн 2018 в 2:37
23. Дана строка с символами, например, 'abcde'. Проверьте, что первым символом этой строки является буква 'a'. Если это так - выведите 'да', в противном случае выведите 'нет'.

$str = 'abcde';
if($str[0] == 'a') {
echo 'Да';
}
else {
echo 'нет';
}
Нравится
*********
*********
********* 6 июн 2018 в 2:39
24. Дана строка с цифрами, например, '12345'. Проверьте, что первым символом этой строки является цифра 1, 2 или 3. Если это так - выведите 'да', в противном случае выведите 'нет'.

$str = '12345';
if($str[0] == 1 or $str[0] == 2 or $str[0] ==3) {

echo 'да';
}
else {
echo 'нет';
}
Нравится
*********
*********
********* 6 июн 2018 в 2:41
25. Дана строка из 3-х цифр. Найдите сумму этих цифр. То есть сложите как числа первый символ строки, второй и третий.

$str = '344';
echo $str[0] + $str[1] + $str[2];
Нравится
*********
*********
********* 6 июн 2018 в 2:42
26. Дана строка из 6-ти цифр. Проверьте, что сумма первых трех цифр равняется сумме вторых трех цифр. Если это так - выведите 'да', в противном случае выведите 'нет'.

$str = '345355';
if($str[0] + $str[1] + $str[2] == $str[3] + $str[4] + $str[5]) {
echo 'Да';
}
else {
echo 'нет';
}
Нравится
*********
*********
********* 6 июн 2018 в 2:42
Задачи на циклы foreach, while, for в PHP
Нравится
*********
*********
********* 10 июн 2018 в 23:49
1. Дан массив с элементами 'html', 'css', 'php', 'js', 'jq'. С помощью цикла foreach выведите эти слова в столбик

<?php
$arr = ['html', 'css', 'php', 'js', 'jq'];
foreach($arr as $elem) {
echo $elem.'<br>';
}
?>
Нравится
*********
*********
********* 10 июн 2018 в 23:59
2. Дан массив с элементами 1, 2, 3, 4, 5. С помощью цикла foreach найдите сумму элементов этого массива. Запишите ее в переменную $result.

<?php
$result = 0;
$arr = [ '1', 2, 3, 4, 5];
foreach($arr as $elem) {
$num = (int) $elem;
$result += $num;
}
echo $result;
?>
Нравится
*********
*********
********* 11 июн 2018 в 0:40
3. Дан массив с элементами 1, 2, 3, 4, 5. С помощью цикла foreach найдите сумму квадратов элементов этого массива. Результат запишите переменную $result.

<?php
$result = 0;
$arr = [ '1', 2, 3, 4, 5];
foreach($arr as $elem) {
$num = (int) $elem;
$result += $num*$num;
}
echo $result;
?>
Нравится
*********
*********
********* 11 июн 2018 в 0:44
Работа с ключами
4. Дан массив $arr. С помощью цикла foreach выведите на экран столбец ключей и элементов в формате 'green - зеленый'.

<?php

$arr = [ 'green'=>'зеленый', 'red'=>'красный'];
foreach($arr as $key=>$elem) {
echo $key.'-'.$elem.'<br>';
}
?>
Нравится
*********
*********
********* 11 июн 2018 в 0:46
5. Дан массив $arr с ключами 'Коля', 'Вася', 'Петя' и с элементами '200', '300', '400'. С помощью цикла foreach выведите на экран столбец строк такого формата: 'Коля - зарплата 200 долларов.'.

<?php

$arr = ['Коля'=>'200', 'Вася'=>'300','Петя'=>'400'];
foreach($arr as $key=>$elem) {
echo $key.' зарплата: '.$elem.'<br>';
}
?>
Нравится
*********
*********
********* 11 июн 2018 в 0:50
Циклы while и for

Решите эти задачи сначала через цикл while, а затем через цикл for.

6. Выведите столбец чисел от 1 до 100.

$i = 1;
while($i<=100) {
echo $i.'<br>';
$i++;
}

for($i=1; $i<=100; $i++) {
echo $i.'<br>';
}
Нравится
*********
*********
********* 11 июн 2018 в 0:51
7. Выведите столбец чисел от 11 до 33.

$i = 11;
while($i<=33) {
echo $i.'<br>';
$i++;
}

<?php

for($i=11; $i<=33; $i++) {
echo $i.'<br>';
}
?>
Нравится
*********
*********
********* 11 июн 2018 в 0:54
8. Выведите столбец четных чисел в промежутке от 0 до 100.

<?php

$i = 0;
while($i<=100) {
echo $i.'<br>';
$i+=2;
}
?>

<?php

for($i=0; $i<=100; $i+=2) {
echo $i.'<br>';
}
?>
Нравится
*********
*********
********* 11 июн 2018 в 0:57
9. С помощью цикла найдите сумму чисел от 1 до 100.
<?php
$result = 0;
$i = 1;
while($i<=100) {
$result += $i;
$i++;
}
echo $result;
?>

<?php
$result = 0;
for($i=1; $i<=100; $i++) {
$result+=$i;
}
echo $result;
?>
Нравится
*********
*********
********* 11 июн 2018 в 1:00
Задачи

10. Дан массив с элементами 2, 5, 9, 15, 0, 4. С помощью цикла foreach и оператора if выведите на экран столбец тех элементов массива, которые больше 3-х, но меньше 10.

<?php
$arr = [2, 5, 9, 15, 0, 4];
foreach($arr as $elem) {
if($elem > 3 and $elem < 10) {
echo $elem;
}
}
?>
Нравится
*********
*********
********* 11 июн 2018 в 1:02
11. Дан массив с числами. Числа могут быть положительными и отрицательными. Найдите сумму положительных элементов этого массива.

<?php
$result = 0;
$arr = [2, 5, -9, -15, 0, 4];
foreach($arr as $elem) {
if($elem > 0) {
$result += $elem;
}
}
echo $result;
?>
Нравится
*********
*********
********* 11 июн 2018 в 1:05
12. Дан массив с элементами 1, 2, 5, 9, 4, 13, 4, 10. С помощью цикла foreach и оператора if проверьте есть ли в массиве элемент со значением, равным 4. Если есть - выведите на экран 'Есть!' и выйдите из цикла. Если нет - ничего делать не надо.

<?php
$arr = [1, 2, 5, 9, 4, 13, 4, 10];
foreach($arr as $elem) {
if($elem == 4) {
echo 'есть';
break;
}
}
?>
Нравится
*********
*********
********* 11 июн 2018 в 1:08
13. Дан массив числами, например: ['10', '20', '30', '50', '235', '3000']. Выведите на экран только те числа из массива, которые начинаются на цифру 1, 2 или 5.
<?php
$arr = ['10', '20', '30', '50', '235', '3000'];
foreach($arr as $elem) {
if( $elem[0] == 1 or$elem[0] == 2 or$elem[0] == 5 ) {
echo $elem.'<br>';
}
}
?>
Нравится
*********
*********
********* 11 июн 2018 в 1:16
14. Дан массив с элементами 1, 2, 3, 4, 5, 6, 7, 8, 9. С помощью цикла foreach создайте строку '-1-2-3-4-5-6-7-8-9-'.

$str = '-';
$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
foreach($arr as $elem) {
$str = $str . $elem.'-';
}
echo $str;
?>
Нравится
*********
*********
********* 11 июн 2018 в 1:21
15. Составьте массив дней недели. С помощью цикла foreach выведите все дни недели, а выходные дни выведите жирным.

<?php

$arr = ['пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'];
foreach($arr as $key => $elem) {
if($key == 5 or $key == 6) {
echo '<b>'.$elem.'</b> ';
}
else {
echo $elem.' ';
}
}

?>
Нравится
*********
*********
********* 11 июн 2018 в 1:24
16. Составьте массив дней недели. С помощью цикла foreach выведите все дни недели, а текущий день выведите курсивом. Текущий день должен храниться в переменной $day.

<?php
$day = 0;
$arr = ['пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'];
foreach($arr as $key => $elem) {
if($key == $day) {
echo '<i>'.$elem.'</i> ';
}
else {
echo $elem.' ';
}
}

?>
Нравится
*********
*********
********* 11 июн 2018 в 1:27
Задачи посложнее

17. С помощью цикла for заполните массив числами от 1 до 100. То есть у вас должен получится массив [1, 2, 3... 100].

<?php
$arr = [];
for($i=1; $i<=100;$i++) {
$arr[$i] =$i;
}
var_dump($arr);

?>
Нравится
*********
*********
********* 11 июн 2018 в 1:32
18. Дан массив $arr. С помощью цикла foreach запишите английские названия в массив $en, а русские - в массив $ru.

<?php
$ru =[];
$en =[];
$i = 0;
$arr = ['green'=>'зеленый', 'red'=>'красный', 'blue'=>'голубой'];
foreach($arr as $key => $elem) {
$ru[$i]=$elem;
$en[$i]=$key;
$i++;
}
var_dump($ru);
var_dump($en);
?>
Нравится
*********
*********
********* 11 июн 2018 в 1:42
19. Дано число $num=1000. Делите его на 2 столько раз, пока результат деления не станет меньше 50. Какое число получится? Посчитайте количество итераций, необходимых для этого (итерация - это проход цикла). Решите задачу сначала через цикл while, а потом через цикл for.

<?php
$num=1000;
$i=0;
while($num > 50) {
$num /= 2;
$i++;
}
echo $num.'<br>';
echo $i;
?>

<?php
$num = 1000;
$j = 0;
for($i=1000; $i > 50; $i/=2) {
$j++;
}
echo $i.'<br>';
echo $j;
?>
Нравится
*********
*********
********* 11 июн 2018 в 1:42
Задачи на математические функции PHP
Нравится
*********
Дмитрий Трепачёв
Дмитрий Трепачёв 12 июн 2018 в 12:59
Толя, +
Нравится
*********
Ответить
*********
********* 17 июн 2018 в 13:39
Работа с %
1. Даны переменные $a=10 и $b=3. Найдите остаток от деления $a на $b.
echo

$a = 10;
$b = 3;
echo $a % $b;
?>
Нравится
*********
*********
********* 17 июн 2018 в 13:40
2. Даны переменные $a и $b. Проверьте, что $a делится без остатка на $b. Если это так - выведите 'Делится' и результат деления, иначе выведите 'Делится с остатком' и остаток от деления.

<?php

$a = 10;
$b = 3;
if($a%$b == 0) {
echo 'Делится';
}
else {
echo 'не делится';
}
?>
Нравится
*********
*********
********* 17 июн 2018 в 13:43
Работа со степенью и корнем
3. Возведите 2 в 10 степень. Результат запишите в переменную $st.

<?php

echo pow(2,10);
?>
Нравится
*********
*********
********* 17 июн 2018 в 13:44
4. Найдите квадратный корень из 245.
<?php

echo sqrt(245);
?>
Нравится
*********
*********
********* 17 июн 2018 в 13:49
5. Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите корень из суммы квадратов его элементов. Для решения воспользуйтесь циклом foreach.
<?php

$result = 0;
$arr = [4, 2, 5, 19, 13, 0, 10];
foreach($arr as $elem) {
$result+=pow($elem, 2);
}
echo sqrt($result);
?>
Нравится
*********
*********
********* 17 июн 2018 в 13:53
6. Работа с функциями округления

Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых.

<?php

$a = sqrt(379);
echo round($a, 1);
?>
Нравится
*********
*********
********* 17 июн 2018 в 13:59
7. Найдите квадратный корень из 587. Округлите результат в большую и меньшую сторону, запишите результаты округления в ассоциативный массив с ключами 'floor' и 'ceil'.

<?php

$a = sqrt(587);
$floor = floor($a);
$ceil = ceil($a);
$arr = [floor=>$floor, ceil=>$ceil ];
var_dump($arr);
?>
Нравится
*********
*********
********* 17 июн 2018 в 14:01
8. Работа с min и max

Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число.

<?php

$min = min( 4, -2, 5, 19, -130, 0, 10);
$max = max( 4, -2, 5, 19, -130, 0, 10);
echo $min;
echo $max;
?>
Нравится
*********
*********
********* 17 июн 2018 в 14:03
9. Работа с рандомом
Выведите на экран случайное число от 1 до 100.

<?php
echo mt_rand(1,10);
?>
Нравится
*********
*********
********* 17 июн 2018 в 14:07
10. Заполните массив 10-ю случайными числами.

<?php
$arr = [];
for($i = 0; $i <= 10; $i++) {
$arr[$i] = mt_rand(1,100);
}
var_dump($arr);
?>
Нравится
*********
*********
********* 17 июн 2018 в 14:11
Работа с модулем
11. Даны переменные $a и $b. Найдите найдите модуль разности $a и $b. Проверьте работу скрипта самостоятельно для различных $a и $b.
<?php
$a = 7;
$b = 2;
$result = abs($b-$a);
echo $result;
?>
Нравится
*********
*********
********* 17 июн 2018 в 14:14
12. Дан массив в числами, к примеру [1, 2, -1, -2, 3, -3]. Создайте из него новый массив так, чтобы отрицательные числа стали положительными, то есть у нас должен получиться такой массив: [1, 2, 1, 2, 3, 3].

<?php
$newArr = [];
$arr = [1, 2, -1, -2, 3, -3];
foreach($arr as $elem) {
$newArr[] = abs($elem);
}
var_dump($newArr);
?>
Нравится
*********
*********
********* 17 июн 2018 в 14:20
13. Дано число, например 30. У этого числа есть делители - числа, на которое оно делится без остатка. Делители числа 30 - это 1, 2, 3, 5, 6, 10, 15, 30. Задача: сделайте массив делителей нашего числа. Число может быть любым, не обязательно, 30.

<?php
$a = 30;
$arr = [];
for($i=1; $i<=$a; $i++) {
if($a % $i == 0) {
$arr[$i] = $elem;
}

}
var_dump($arr);
?>
Нравится
*********
*********
********* 17 июн 2018 в 14:28
14. Дан массив [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. Узнайте, сколько первых элементов массива нужно сложить, чтобы сумма получилась больше 10.

<?php
$result = 0;
$i = 0;
$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
foreach($arr as $elem) {
$i++;
$result += $elem;
if($result > 10) {
break;
}

}
echo $i;
?>
Нравится
*********
*********
********* 17 июн 2018 в 14:31
15. Даны ящики. Длина каждого ящика 1.5 метра. Узнайте, сколько ящиков может поместиться вдоль стены длиной 20 метров. Ответом должно быть целое число.

<?php
$a = 1.5;
$b = 20;
$result = floor($b/$a);
echo $result;
?>
Нравится
*********
*********
********* 17 июн 2018 в 14:31
Задачи на функции работы со строками в PHP
Нравится
*********
Дмитрий Трепачёв
Дмитрий Трепачёв 18 июн 2018 в 15:24
Толя, +
Нравится
*********
Ответить
*********
********* 8 июл 2018 в 3:57
1. Дана строка 'php'. Сделайте из нее строку 'PHP'.
<?php
echo strtoupper(php);

?>
Нравится
*********
*********
********* 8 июл 2018 в 3:57
2. Дана строка 'PHP'. Сделайте из нее строку 'php'.

<?php
echo strtolower('PHP');

?>
Нравится
*********
*********
********* 8 июл 2018 в 3:58
3. Дана строка 'london'. Сделайте из нее строку 'London'.

<?php
echo ucfirst('london');

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:11
4. Дана строка 'London'. Сделайте из нее строку 'london'.

<?php
echo lcfirst('London');

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:11
5. Дана строка 'london is the capital of great britain'. Сделайте из нее строку 'London Is The Capital Of Great Britain'.

<?php
$str = 'london is the capital of great britain';
echo ucwords($str);

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:11
6. Дана строка 'LONDON'. Сделайте из нее строку 'London'.

<?php
$str = 'london is the capital of great britain';
echo ucfirst(strtolower('LONDON'));

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:12
Работа с регистром символов
Работа с регистром символов
7. Дана строка 'html css php'. Найдите количество символов в этой строке.

echo strlen('html css php');
Нравится
*********
*********
********* 8 июл 2018 в 4:12
8. Дана переменная $password, в которой хранится пароль пользователя. Если количество символов пароля больше 5-ти и меньше 10-ти, то выведите пользователю сообщение о том, что пароль подходит, иначе сообщение о том, что нужно придумать другой пароль.

<?php

$password = 'пароль';

if(strlen($password) > 5 and strlen($password < 10)) {

echo 'пароль подходит';

}

else {

echo 'не подходит';
}

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:12
Работа с substr

9. Дана строка 'html css php'. Вырежьте из нее и выведите на экран слово 'html', слово 'css' и слово 'php'.

<?php

$str = 'html css php';

echo substr($str, 0, 5);
echo substr($str, 5, 4);
echo substr($str, 8, 4);

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:12
10. Дана строка. Вырежите и выведите на экран последние 3 символа этой строки.

<?php

$str = 'html css php';

echo substr($str, -3, 3);


?>
Нравится
*********
*********
********* 8 июл 2018 в 4:12
11. Дана строка. Проверьте, что она начинается на 'http://'. Если это так, выведите 'да', если не так - 'нет'.
<?php

$str = 'http://html_css_php';

if(substr($str, 0, 7) == 'http://') {

echo 'да';
}
else {
echo 'нет';
}

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:12
12. Дана строка. Проверьте, что она начинается на 'http://' или на 'https://'. Если это так, выведите 'да', если не так - 'нет'.

<?php

$str = 'http://html_css_php';

if(substr($str, 0, 7) == 'http://' or substr($str, 0, 8) == 'https://' ) {

echo 'да';
}
else {
echo 'нет';
}

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:13
13. Дана строка. Проверьте, что она заканчивается на '.png'. Если это так, выведите 'да', если не так - 'нет'.

<?php

$str = 'http://html_css_php.png';

if(substr($str, -4, 4) == '.png') {

echo 'да';
}
else {
echo 'нет';
}

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:13
14. Дана строка. Проверьте, что она заканчивается на '.png' или на '.jpg'. Если это так, выведите 'да', если не так - 'нет'.

<?php

$str = 'http://html_css_php.jpg';

if(substr($str, -4, 4) == '.png' or substr($str, -4, 4) == '.jpg') {

echo 'да';
}
else {
echo 'нет';
}

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:13
15. Дана строка. Если в этой строке более 5-ти символов - вырежите из нее первые 5 символов, добавьте троеточие в конец и выведите на экран. Если же в этой строке 5 и менее символов - просто выведите эту строку на экран.

<?php

$str = 'http://html_css_php.jpg';

if(strlen($str) > 5) {

echo substr($str, 0, 5) . '...';
}
else {
echo $str;
}

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:14
Работа с strtr
19. Дана строка $str. Замените в ней все буквы 'a' на цифру 1, буквы 'b' - на 2, а буквы 'c' - на 3. Решите задачу двумя способами работы с функцией strtr (массив замен и две строки замен).

<?php

$str = 'aaabbbccc';

echo strtr($str, [a => 1, b => 2, c => 3]);
echo strtr($str, 'abc', '123');

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:15
Работа с substr_replace
20. Дана строка $str. Вырежите из нее подстроку с 3-го символа (отсчет с нуля), 5 штук и вместо нее вставьте '!!!'.

<?php

$str = 'aaabbbccc';

echo substr_replace($str, '!!!', 3, 5);

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:15
Работа с strpos, strrpos

21. Дана строка 'abc abc abc'. Определите позицию первой буквы 'b'.

<?php
echo strpos('abc abc abc', 'b');
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:15
22. Дана строка 'abc abc abc'. Определите позицию последней буквы 'b'.

<?php
echo strrpos('abc abc abc', 'b');
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:15
23. Дана строка 'abc abc abc'. Определите позицию первой найденной буквы 'b', если начать поиск не с начала строки, а с позиции 3.

<?php
echo strpos('abc abc abc', 'b', 3);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:15
24. Дана строка 'aaa aaa aaa aaa aaa'. Определите позицию второго пробела.

<?php
$num = strpos('aaa aaa aaa aaa aaa', ' ');
echo strpos('aaa aaa aaa aaa aaa', ' ', $num + 1);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:15
25. Проверьте, что в строке есть две точки подряд. Если это так - выведите 'есть', если не так - 'нет'.

<?php
$str = 'aaa. aaa.. aaa aaa. aaa';
if(strpos($str, '..') == true) {
echo 'да';
}
else {
echo 'нет';
}

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:15
26. Проверьте, что строка начинается на 'http://'. Если это так - выведите 'да', если не так - 'нет'.

<?php
$str = 'http://anatolio87test.ru/php/test.php';
if(strpos($str, 'http://') == 0) {
echo 'да';
}
else {
echo 'нет';
}

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:15
Работа с explode, implode

27. Дана строка 'html css php'. С помощью функции explode запишите каждое слово этой строки в отдельный элемент массива.

<?php
$str = 'html css php';
$arr = explode(' ', $str);
var_dump($arr);

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:16
28. Дан массив с элементами 'html', 'css', 'php'. С помощью функции implode создайте строку из этих элементов, разделенных запятыми.

<?php
$arr = ['html', 'css', 'php'];
$str = implode(',', $arr);
echo $str;
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:16
29. В переменной $date лежит дата в формате '2013-12-31'. Преобразуйте эту дату в формат '31.12.2013'.

<?php
$date = '2013-12-31';
$arr = explode('-', $date);
$date = $arr[2] . '.'. $arr[1] .'.'. $arr[0];
echo $date;
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:16
Работа с str_split
30. Дана строка '1234567890'. Разбейте ее на массив с элементами '12', '34', '56', '78', '90'.


<?php
$str = '1234567890';
$arr = str_split($str, 2);
var_dump($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:16
31. Дана строка '1234567890'. Разбейте ее на массив с элементами '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'.

<?php
$str = '1234567890';
$arr = str_split($str);
var_dump($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:16
32. Дана строка '1234567890'. Сделайте из нее строку '12-34-56-78-90' не используя цикл.

<?php
$str = '1234567890';
$arr = str_split($str, 2);
$str = implode('-', $arr);
echo $str;
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:16
Работа с trim, ltrim, rtrim

33. Дана строка. Очистите ее от концевых пробелов.


<?php
$str = ' 123s45s678s9f0 ';
echo trim($str);

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:16
34. Дана строка '/php/'. Сделайте из нее строку 'php', удалив концевые слеши.

<?php
$str = '/php/';
echo trim($str, '/');

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:16
35. Дана строка 'слова слова слова.'. В конце этой строки может быть точка, а может и не быть. Сделайте так, чтобы в конце этой строки гарантировано стояла точка. То есть: если этой точки нет - ее надо добавить, а если есть - ничего не делать. Задачу решите через rtrim без всяких ифов.

<?php
$str = 'слова слова слова';
echo trim($str, '.') . '.';

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:16
Работа с strrev
36. Дана строка '12345'. Сделайте из нее строку '54321'.

<?php
$str = '12345';
echo strrev($str);

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:17
37. Проверьте, является ли слово палиндромом (одинаково читается во всех направлениях, примеры таких слов: madam, otto, kayak, nun, level).

<?php
$str = 'madam';
if( $str == strrev($str)) {
echo 'да';
}

else {
echo 'нет';
}

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:17
Работа с str_shuffle

38. Дана строка. Перемешайте символы этой строки в случайном порядке.

<?php
$str = 'madam';
echo str_shuffle($str);

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:17
39. Создайте строку из 6-ти случайных маленьких латинских букв так, чтобы буквы не повторялись. Нужно сделать так, чтобы в нашей строке могла быть любая латинская буква, а не ограниченный набор.

<?php
$str = 'abcdefghijklmnopqrstuvwxyz';
$str2 = str_shuffle($str);
echo substr($str2, 0, 6);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:17
Работа с number_format

40. Дана строка '12345678'. Сделайте из нее строку '12 345 678'.

<?php
$str = '12345678';
echo number_format($str, 0, '', ' ')
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:17
Работа с str_repeat

41. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с помощью одного цикла и функции str_repeat.

<?php
$str = 'x';
for($i = 1; $i < 10; $i++) {
echo str_repeat($str, $i) . '<br>';
}

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:17
42. Нарисуйте пирамиду, как показано на рисунке. Решите задачу с помощью одного цикла и функции str_repeat.

<?php

for($i = 1; $i < 10; $i++) {
$str = $i;
echo str_repeat($str, $i) . '<br>';
}

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:17
Работа с strip_tags и htmlspecialchars
43. Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки.

<?php

$str = 'html, <b>php</b>, js';
echo strip_tags($str);

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:17
44. Дана строка $str. Удалите все теги из этой строки, кроме тегов <b> и <i>.

<?php
$str = '<br><p>html</p>, <b><i>php</i></b>, js';
echo strip_tags($str, '<b><i>');
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:18
45. Дана строка 'html, <b>php</b>, js'. Выведите ее на экран 'как есть': то есть браузер не должен преобразовать <b> в жирный.

<?php
$str = 'html, <b>php</b>, js';
echo htmlspecialchars($str);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:18
Работа с chr и ord

46. Узнайте код символов 'a', 'b', 'c', пробела.

<?php
echo ord('a') . '<br>';
echo ord('b') . '<br>';
echo ord('c') . '<br>';
echo ord(' ') . '<br>';
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:18
47. Изучите таблицу ASCII. Определите границы, в которых располагаются буквы английского алфавита.

Ладно...

48. Выведите на экран символ с кодом 33.

<?php
echo chr(33);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:18
49. Запишите в переменную $str случайный символ - большую букву латинского алфавита. Подсказка: с помощью таблицы ASCII определите какие целые числа соответствуют большим буквам латинского алфавита.

<?php
echo chr(mt_rand(65, 90));
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:18
50. Запишите в переменную $str случайную строку $len длиной, состоящую из маленьких букв латинского алфавита. Подсказка: воспользуйтесь циклом for или while.

<?php
$len = 6;
$str = '';
for($i = 0; $i < 6; $i++ ) {
$str .= chr(mt_rand(97, 122));
}
echo $str;
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:18
51. Дана буква английского алфавита. Узнайте, она маленькая или большая.

<?php
$str = 'A';
if(ord($str) >= 65 and ord($str) <= 90) {
echo 'большая';
}
if(ord($str) >= 97 && ord($str) <= 122) {
echo 'маленькая';
}
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:18
Работа с strchr, strrchr

52. Дана строка 'ab-cd-ef'. С помощью функции strchr выведите на экран строку '-cd-ef'.

<?php
$str = 'ab-cd-ef';
echo strchr($str, '-');
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:18
53. Дана строка 'ab-cd-ef'. С помощью функции strrchr выведите на экран строку '-ef'

<?php
$str = 'ab-cd-ef';
echo strrchr($str, '-');
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:19
Работа с strstr
54. Дана строка 'ab--cd--ef'. С помощью функции strstr выведите на экран строку '--cd--ef'.
<?php
$str = 'ab--cd--ef';
echo strstr($str, '-');
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:19
Задачи
55. Преобразуйте строку 'var_test_text' в 'varTestText'. Скрипт, конечно же, должен работать с любыми аналогичными строками.

<?php
$str = 'var_test_text';
$arr = explode('_', $str);
$str = implode(' ', $arr);
$str = ucwords($str);
$arr = explode(' ', $str);
$str = implode('', $arr);
echo $str;
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:19
56. Дана строка следующего вида: 5 цифр, затем пробел, затем еще 5 цифр. Например, дана такая строка '12345 67890'. Сделайте из нее строку '54321 09876'.

<?php
$str = '12345 67890';
$str1 = '';
$arr = explode(' ', $str);
foreach($arr as $elem) {
$str1 .= strrev($elem) . ' ';
}
echo $str1;
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:19
57. Дан массив с числами. Выведите на экран все числа, в которых есть цифра 3.

<?php
$arr = [1,2,3,43,5,6,3,7,8,39,0];
foreach($arr as $elem) {
if(strpos($elem, '3') !== false) {
echo $elem . '<br>';
}
}

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:19
58. Дан массив с числами. Посчитайте суммарное количество цифр 3 в этих числах.

<?php
$sum = 0;
$arr = [1,2,3,43,5,6,3,7,8,39,0];
foreach($arr as $elem) {
if(strpos($elem, '3') !== false) {
$sum++;
}
}
echo $sum;

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:21
Задачи на функции работы с массивами в PHP

1. Дан массив $arr. Подсчитайте количество элементов этого массива.

<?php
$arr = ['a', 'b', 'c', 'd'];
echo count($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:21
2. Дан массив $arr. С помощью функции count выведите последний элемент данного массива.

<?php
$arr = ['a', 'b', 'c', 'd'];
echo $arr[count($arr) - 1];
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:21
Работа с in_array

3. Дан массив с числами. Проверьте, что в нем есть элемент со значением 3.

<?php
$arr = ['a', 'b', 'c', 'd', 3];
echo in_array(3, $arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:22
Работа с array_sum и array_product

4. Дан массив [1, 2, 3, 4, 5]. Найдите сумму элементов данного массива.

<?php
$arr = [1, 2, 3, 4, 5];
echo array_sum($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:22
5. Дан массив [1, 2, 3, 4, 5]. Найдите произведение (умножение) элементов данного массива.

<?php
$arr = [1, 2, 3, 4, 5];
echo array_product($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:22
6. Дан массив $arr. С помощью функций array_sum и count найдите среднее арифметическое элементов (сумма элементов делить на их количество) данного массива.

<?php
$arr = [1, 2, 3, 4, 5];
echo array_sum($arr) / count($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:22
7. Создайте массив, заполненный числами от 1 до 100.

<?php
$arr = range(1,100);
var_dump($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:22
8. Создайте массив, заполненный буквами от 'a' до 'z'.

<?php
$arr = range(a,z);
var_dump($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:23
9. Создайте строку '1-2-3-4-5-6-7-8-9' не используя цикл.

<?php
$arr = range(1,9);
$str = implode('-', $arr);
echo $str;
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:23
10. Найдите сумму чисел от 1 до 100 не используя цикл.

<?php
$arr = range(1,100);
echo array_sum($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:23
11. Найдите произведение чисел от 1 до 10 не используя цикл.

<?php
$arr = range(1,100);
echo array_product($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:23
Работа с array_merge

12. Даны два массива: первый с элементами 1, 2, 3, второй с элементами 'a', 'b', 'c'. Сделайте из них массив с элементами 1, 2, 3, 'a', 'b', 'c'.

<?php
$arr = [1, 2, 3];
$arr2 = ['a', 'b', 'c'];
$arr3 = array_merge($arr, $arr2);
var_dump($arr3);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:23
Работа с array_slice

13. Дан массив с элементами 1, 2, 3, 4, 5. С помощью функции array_slice создайте из него массив $result с элементами 2, 3, 4.

<?php
$arr = [1, 2, 3, 4, 5];
$result = array_slice($arr, 1, 3);
var_dump($result);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:23
Работа с array_splice

14. Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice преобразуйте массив в [1, 4, 5]

<?php
$arr = [1, 2, 3, 4, 5];
array_splice($arr, 1, 2);
var_dump($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:23
15. Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice запишите в новый массив элементы [2, 3, 4].

<?php
$arr = [1, 2, 3, 4, 5];
$newArr = array_splice($arr, 1, 3);
var_dump($newArr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:23
16. Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5].

<?php
$arr = [1, 2, 3, 4, 5];
array_splice($arr, 3, 0, [a, b, c]);
var_dump($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:24
17. Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].

<?php
$arr = [1, 2, 3, 4, 5];
array_splice($arr, 1, 0, [a, b]);
array_splice($arr, 6, 0, [c]);
array_splice($arr, 8, 0, [e]);
var_dump($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:24
18. Работа с array_keys, array_values, array_combine

Дан массив 'a'=>1, 'b'=>2, 'c'=>3'. Запишите в массив $keys ключи из этого массива, а в $values – значения.

<?php
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
$key = array_keys($arr);
$value = array_values($arr);
var_dump($key);
var_dump($value);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:24
19. Даны два массива: ['a', 'b', 'c'] и [1, 2, 3]. Создайте с их помощью массив 'a'=>1, 'b'=>2, 'c'=>3'.

<?php
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
$key = array_keys($arr);
$value = array_values($arr);
$newArr = array_combine($key, $value);
var_dump($newArr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:24
20. Работа с array_flip, array_reverse

Дан массив 'a'=>1, 'b'=>2, 'c'=>3. Поменяйте в нем местами ключи и значения.

<?php
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
var_dump(array_flip($arr));
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:24
21. Дан массив с элементами 1, 2, 3, 4, 5. Сделайте из него массив с элементами 5, 4, 3, 2, 1.

<?php
$arr = [1, 2, 3, 4, 5];
var_dump(array_reverse($arr));

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:24
Работа с array_search

22. Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-'.

<?php
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
echo array_search('-', $arr);

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:24
23. Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-' и удалите его с помощью функции array_splice.

<?php
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
array_splice($arr, array_search('-', $arr), 1);
var_dump($arr);


?>
Нравится
*********
*********
********* 8 июл 2018 в 4:24
Работа с array_replace

24. Дан массив ['a', 'b', 'c', 'd', 'e']. Поменяйте элемент с ключом 0 на '!', а элемент с ключом 3 - на '!!'.

<?php
$arr = ['a', 'b', 'c', 'd', 'e'];
var_dump(array_replace($arr, [0=>'!', 3=>'!!']));


?>
Нравится
*********
*********
********* 8 июл 2018 в 4:25
Работа с сортировку

25. Дан массив '3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'. Попробуйте на нем различные типы сортировок.

<?php
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
sort($arr);
var_dump($arr);

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:25
<?php
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
rsort($arr);
var_dump($arr);

?>

<?php
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
asort($arr);
var_dump($arr);

?>

<?php
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
arsort($arr);
var_dump($arr);

?>

<?php
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
ksort($arr);
var_dump($arr);

?>

<?php
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
krsort($arr);
var_dump($arr);

?>

<?php
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
natsort($arr);
var_dump($arr);

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:25
Работа с array_rand

26. Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный ключ из данного массива.

<?php
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
var_dump(array_rand($arr));

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:25
27. Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный элемент данного массива.

<?php
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
$key = array_rand($arr);
echo $arr[$key];

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:25
Работа с shuffle

28. Дан массив $arr. Перемешайте его элементы в случайном порядке

<?php
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
shuffle($arr);
var_dump($arr);

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:25
29. Заполните массив числами от 1 до 25 с помощью range, а затем перемешайте его элементы в случайном порядке.

<?php
$arr = range(1, 25);
shuffle($arr);
var_dump($arr);

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:25
30. Создайте массив, заполненный буквами от 'a' до 'z' так, чтобы буквы шли в случайном порядке и не повторялись.

<?php
$arr = range(a, z);
shuffle($arr);
var_dump($arr);

?>
Нравится
*********
*********
********* 8 июл 2018 в 4:26
31. Сделайте строку длиной 6 символов, состоящую из маленьких английских букв, расположенных в случайном порядке. Буквы не должны повторяться.

<?php
$arr = range(a, z);
shuffle($arr);
$str = implode(array_slice($arr, 0, 6));
echo $str;
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:26
Работа с array_unique

32. Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Удалите из него повторяющиеся элементы.

<?php
$arr = ['a', 'b', 'c', 'b', 'a'];
$arr = array_unique($arr);
var_dump($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:26
Работа с array_shift, array_pop, array_unshift, array_push

33. Дан массив с элементами 1, 2, 3, 4, 5. Выведите на экран его первый и последний элемент, причем так, чтобы в исходном массиве они исчезли.

<?php
$arr = [1, 2, 3, 4, 5];
$result = array_shift($arr);
echo $result;
var_dump($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:26
34. Дан массив с элементами 1, 2, 3, 4, 5. Добавьте ему в начало элемент 0, а в конец - элемент 6.

<?php
$arr = [1, 2, 3, 4, 5];
array_unshift($arr, 0);
array_push($arr, 6);
var_dump($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:26
35. Дан массив с элементами 1, 2, 3, 4, 5, 6, 7, 8. С помощью цикла и функций array_shift и array_pop выведите на экран его элементы в следующем порядке: 18273645.


<?php
$arr = [1, 2, 3, 4, 5, 6, 7, 8];
$str='';
foreach($arr as $elem) {
$str .= array_shift($arr);
$str .= array_pop($arr);
}
echo $str;
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:26
Работа с array_pad, array_fill, array_fill_keys, array_chunk

36. Дан массив с элементами 'a', 'b', 'c'. Сделайте из него массив с элементами 'a', 'b', 'c', '-', '-', '-'.

<?php
$arr = ['a', 'b', 'c'];
$arr = array_pad($arr, 6, '-');
var_dump($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:26
37. Заполните массив 10-ю буквами 'x'

<?php
$arr = array_fill(0, 10, 'x');
var_dump($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:26
38. Создайте массив, заполненный целыми числами от 1 до 20. С помощью функции array_chunk разбейте этот массив на 5 подмассивов ([1, 2, 3, 4]; [5, 6, 7, 8] и т.д.).

<?php
$arr = range(1, 20);
$arr = array_chunk($arr, 5);
var_dump($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:27
Работа с array_count_values

39. Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Подсчитайте сколько раз встречается каждая из букв.

<?php
$arr = ['a', 'b', 'c', 'b', 'a'];
$result = array_count_values($arr);
var_dump($result);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:27
Работа с array_map

40. Дан массив с элементами 1, 2, 3, 4, 5. Создайте новый массив, в котором будут лежать квадратные корни данных элементов.

<?php
$arr = [1, 2, 3, 4, 5];
$result = array_map('sqrt', $arr);
var_dump($result);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:27
41. Дан массив с элементами '<b>php</b>', '<i>html</i>'. Создайте новый массив, в котором из элементов будут удалены теги

<?php
$arr = ['<b>php</b>', '<i>html</i>'];
$result = array_map('strip_tags', $arr);
var_dump($result);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:27
42. Дан массив с элементами ' a ', ' b ', ' с '. Создайте новый массив, в котором будут данные элементы без концевых пробелов.

<?php
$arr = [' a ', ' b ', ' с '];
$result = array_map('trim', $arr);
var_dump($result);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:27
Работа с array_intersect, array_diff

43. Дан массив с элементами 1, 2, 3, 4, 5 и массив с элементами 3, 4, 5, 6, 7. Запишите в новый массив элементы, которые есть и в том, и в другом массиве.

<?php
$arr1 = [1, 2, 3, 4, 5];
$arr2 = [3, 4, 5, 6, 7];
$result = array_intersect($arr1, $arr2);
var_dump($result);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:27
44. Дан массив с элементами 1, 2, 3, 4, 5 и массив с элементами 3, 4, 5, 6, 7. Запишите в новый массив элементы, которые не присутствуют в обоих массивах одновременно.

<?php
$arr1 = [1, 2, 3, 4, 5];
$arr2 = [3, 4, 5, 6, 7];
$result = array_diff($arr1, $arr2);
var_dump($result);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:27
Задачи

45. Дана строка '1234567890'. Найдите сумму цифр из этой строки не используя цикл.

<?php
$str = '1234567890';
$arr = str_split($str);
echo array_sum($arr);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:27
46. Создайте массив ['a'=>1, 'b'=2... 'z'=>26] не используя цикл.

<?php
$arr1 = range(a, z);
$arr2 = range(1, 26);
$arrResult = array_combine($arr1, $arr2);
var_dump($arrResult);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:28
47. Создайте массив вида [[1, 2, 3], [4, 5, 6], [7, 8, 9]] не используя цикл.

<?php
$arr = range(1,9);
$result = array_chunk($arr, 3);
var_dump($result);
?>
Нравится
*********
*********
********* 8 июл 2018 в 4:28
48. Дан массив с элементами 1, 2, 4, 5, 5. Найдите второй по величине элемент. В нашем случае это будет 4.
<?php
$arr = [1, 2, 4, 5, 5];
$newArr = array_unique($arr);
rsort($newArr);
echo $newArr[1];
?>
Нравится
*********
Дмитрий Трепачёв
Дмитрий Трепачёв 9 июл 2018 в 16:01
Толя, +
1
Нравится
*********
Ответить
*********
********* 14 июл 2018 в 1:46
Практика на комбинации функций
1. Дан массив с числами. Найдите среднее арифметическое его элементов (сумма элементов делить на количество) не используя цикл.

<?php
$arr = [1, 2, 4, 5, 5];

echo array_sum($arr) / count($arr);

?>
Нравится
*********
*********
********* 14 июл 2018 в 1:48
2. Найдите сумму чисел от 1 до 100 не используя цикл.

<?php
echo array_sum(range(1,100));

?>
Нравится
*********
*********
********* 14 июл 2018 в 1:51
3. Выведите столбец чисел от 1 до 100 не используя цикл.

<?php
$arr = range(1,100);
echo implode('<br>', $arr);
?>
Нравится
*********
*********
********* 14 июл 2018 в 1:53
4. Заполните массив 10-ю иксами не используя цикл.

<?php
$arr = array_fill(0,10,'x');
var_dump($arr);
?>
Нравится
*********
*********
********* 14 июл 2018 в 2:03
5. Заполните массив 10-ю случайными числами от 1 до 10 так, чтобы они не повторялись. Цикл использовать нельзя.

<?php
$arr = range(1,10);
shuffle($arr);
var_dump($arr);
?>
Нравится
*********
*********
********* 14 июл 2018 в 10:40
6. Найдите факториал заданного числа не используя цикл. Факториал - это произведение чисел от 1 до заданного числа включительно.

<?php
$arr = range(1,10);
$result = array_product($arr);
var_dump($result);
?>
Нравится
*********
*********
********* 14 июл 2018 в 10:45
7. Дано число. Найдите сумму цифр этого числа не используя цикл.

<?php
$arr = range(1,10);
$result = array_sum($arr);
var_dump($result);
?>
Нравится
*********
*********
********* 14 июл 2018 в 11:01
8. Дана строка. Сделайте заглавным последний символ этой строки не используя цикл.

<?php
$str = 'hello';
$str = substr($str, 0, -1) . strtoupper(substr($str, -1));
echo $str;
?>
Нравится
*********
*********
********* 14 июл 2018 в 15:41
9. Дан массив с числами. Получите из него массив с квадратными корнями этих чисел не используя цикл.

<?php
$arr = [1, 2, 4, 5, 5];
$result = array_map('sqrt', $arr);
var_dump($result);
?>
Нравится
*********
*********
********* 14 июл 2018 в 15:45
10. Заполните массив числами от 1 до 26 так, чтобы ключами этих чисел были буквы английского алфавита: ['a'=>1, 'b'=>2...]. Сделайте это не используя цикл.

<?php
$arr1 = range(1,26);
$arr2 = range(a,z);
$arrResult = array_combine($arr2, $arr1);
var_dump($arrResult);
?>
Нравится
*********
*********
********* 14 июл 2018 в 15:49
11. Дана строка с числами '1234567890'. Найдите сумму пар чисел: 12+34+56+78+90. Решите задачу, не используя цикл.

<?php
$str = '1234567890';
$arr = str_split($str, 2);
$result = array_sum($arr);
echo $result;
?>
Нравится
*********
*********
********* 14 июл 2018 в 15:49
Задачи на формы в PHP
Нравится
*********
*********
********* 14 июл 2018 в 23:15
1. Спросите имя пользователя с помощью формы. Результат запишите в переменую $name. Выведите на экран фразу 'Привет, %Имя%'.

<form action="" method="GET" >
<input type="text" placeholder="Введите имя" name="userName">
<input type="submit">
</form>
<?php
$name = $_GET['userName'];
echo $name;
?>
Нравится
*********
*********
********* 14 июл 2018 в 23:29
2. Спросите у пользователя имя, возраст, а также попросите его ввести сообщение (его сделайте в textarea). Выведите эти данные на экран в формате, приведенном под данной задачей. Позаботьтесь о том, чтобы пользователь не мог вводить теги (просто удаляйте их) и таким образом сломать сайт.

<form action="" method="GET" >
<input type="text" placeholder="Введите имя" name="userName"><br>
<input type="text" placeholder="Введите ваш возраст" name="age"><br>
<textarea placeholder="Расскажите о себе" name="text"></textarea><br>
<input type="submit">
</form>
<?php
$name = strip_tags($_GET['userName']);
$age = strip_tags($_GET['age']);
$text = strip_tags($_GET['text']);
echo 'Ваше имя: ' . $name.'<br>';
echo 'Ваш возраст: ' . $age.'<br>';
echo 'Ваша биография: ' . $text.'<br>';
?>
Нравится
*********
*********
********* 14 июл 2018 в 23:46
3. Спросите возраст пользователя. Если форма была отправлена и введен возраст, то выведите его на экран, а форму уберите. Если же форма не была отправлена (это будет при первом заходе на страницу) - просто покажите ее.

<?php
if(empty($_GET['age'])) {
?>
<form action="" method="GET" >
<input type="text" placeholder="Введите ваш возраст" name="age"><br>
<input type="submit">
</form>
<?php
}

if(!empty($_GET['age'])){
$age = strip_tags($_GET['age']);
echo 'Ваш возраст: ' . $age.'<br>';
}
?>
Нравится
*********
*********
********* 15 июл 2018 в 0:09
4. Спросите у пользователя логин и пароль (в браузере должен быть звездочками). Сравните их с логином $login и паролем $pass, хранящихся в файле. Если все верно - выведите 'Доступ разрешен!', в противном случае - 'Доступ запрещен!'. Сделайте так, чтобы скрипт обрезал концевые пробелы в строках, которые ввел пользователь.

<?php
if(empty($_POST['userName']) and empty($_POST['password'])) {
?>
<form action="" method="POST" >
<input type="text" placeholder="login" name="userName"><br>
<input type="password" placeholder="пароль" name="password"><br>
<input type="submit">
</form>
<?php
}
$name = trim(strip_tags($_POST['userName']));
$password = trim(strip_tags($_POST['password']));
$nameUser = 'Мучачо';
$passwordUser = '4444';
if(!empty($_POST['userName']) and !empty($_POST['password'])) {
if($name == $nameUser and $password == $passwordUser) {
echo 'Инициализация выполнена';
}
else { echo 'неправильные имя или пароль';}
}
?>
Нравится
*********
*********
********* 15 июл 2018 в 0:27
5. Спросите имя пользователя с помощью формы. Результат запишите в переменную $name. Сделайте так, чтобы после отправки формы значения ее полей не пропадали.

<form action="" method="GET" >
<input type="text" placeholder="login" name="userName" value="<?php if(isset($_GET['userName'])) {echo $_GET['userName'];} ?>"><br>
<input type="submit">
</form>

<?php
$name = trim(strip_tags($_GET['userName']));

if(!empty($_GET['userName']) ) {
echo 'Ваше имя: '.$name;
}

?>
Нравится
*********
*********
********* 15 июл 2018 в 0:33
6. Спросите у пользователя имя, а также попросите его ввести сообщение (textarea). Сделайте так, чтобы после отправки формы значения его полей не пропадали.

<form action="" method="GET" >
<input type="text" placeholder="login" name="userName" value="<?php if(isset($_GET['userName'])) {echo $_GET['userName'];} ?>"><br>
<textarea name="text" placeholder="введите сообщение"><?php if(isset($_GET['text'])) {echo $_GET['text'];} ?></textarea>
<input type="submit">
</form>

<?php
$name = trim(strip_tags($_GET['userName']));
$text = trim(strip_tags($_GET['text']));

if(!empty($_GET['userName']) and !empty($_GET['text'])) {
echo 'Ваше имя : '.$name . '<br>';
echo 'Ваше собщение : '.$text;
}

?>
Нравится
*********
*********
********* 15 июл 2018 в 19:20
Работа с датами в PHP
Нравится
*********
*********
********* 15 июл 2018 в 22:46
1. Выведите текущее время в формате timestamp

<?php
echo time();
?>
Нравится
*********
*********
********* 15 июл 2018 в 22:49
2. Выведите 1 марта 2025 года в формате timestamp.

<?php
echo mktime(0, 0, 0, 3, 1, 2015);
?>
Нравится
*********
*********
********* 15 июл 2018 в 22:51
3. Выведите 31 декабря текущего года в формате timestamp. Скрипт должен работать независимо от года, в котором он запущен.

<?php
echo mktime(0, 0, 0, 12, 31);
?>
Нравится
*********
*********
********* 15 июл 2018 в 22:56
4. Найдите количество секунд, прошедших с 13:12:59 15-го марта 2000 года до настоящего момента времени.

<?php
echo time() - mktime(13, 12, 59, 3, 15, 2000);
?>
Нравится
*********
*********
********* 15 июл 2018 в 22:59
5. Найдите количество целых часов, прошедших с 7:23:48 текущего дня до настоящего момента времени.

<?php
echo (time() - mktime(7, 23, 48)) / 60 / 60;
?>
Нравится
*********
*********
********* 15 июл 2018 в 23:03
Функция date

6. Выведите на экран текущий год, месяц, день, час, минуту, секунду.

<?php
echo date('Y.m.d H:i:s');
?>
Нравится
*********
*********
********* 15 июл 2018 в 23:06
7. Выведите текущую дату-время в форматах '2025-12-31', '31.12.2025', '31.12.13', '12:59:59'.

<?php
echo date('Y-m-d, d.m.Y, d.m.y H:i:s');
?>
Нравится
*********
*********
********* 15 июл 2018 в 23:09
8. С помощью функций mktime и date выведите 12 февраля 2025 года в формате '12.02.2025'.

<?php
echo date('d.m.Y', mktime(0, 0, 0, 2, 12, 2025));
?>
Нравится
*********
*********
********* 15 июл 2018 в 23:48
9. Создайте массив дней недели $week. Выведите на экран название текущего дня недели с помощью массива $week и функции date. Узнайте какой день недели был 06.06.2006, в ваш день рождения.

<?php
$week = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'];
$day = date('w', mktime(0, 0, 0, 6, 6, 2006));
$happyBithday = date('w', mktime(0, 0, 0, 12, 5, 1987));
echo '06.06.2006: '. $week[$day].'<br>';
echo 'День моего рождения: ' .$week[$happyBithday];
?>
Нравится
*********
*********
********* 15 июл 2018 в 23:57
10. Создайте массив месяцев $month. Выведите на экран название текущего месяца с помощью массива $month и функции date.

<?php
$week = [1=>'янв', 'фев', 'мар', 'апр', 'май', 'июнь','июль', 'авг', 'сен', 'окт', 'ноя', 'дек'];
echo $week[date('n')];
?>
Нравится
*********
*********
********* 16 июл 2018 в 0:00
11. Найдите количество дней в текущем месяце. Скрипт должен работать независимо от месяца, в котором он запущен.

<?php
echo date('t');
?>
Нравится
*********
*********
********* 16 июл 2018 в 0:16
12. Сделайте поле ввода, в которое пользователь вводит год (4 цифры), а скрипт определяет високосный ли год.

<form action="" method="GET">
<input placeholder="введите год" name="year">
<input type="submit" name="button">
</form>

<?php
if(!empty($_GET['year'])) {
if(date('L', mktime(0, 0, 0, 1, 1, $_GET['year'])) == 1) {
echo 'високосный';
}
else {
echo 'невисокосный';
}
}
?>
Нравится
*********
*********
********* 16 июл 2018 в 0:34
13. Сделайте форму, которая спрашивает дату в формате '31.12.2025'. С помощью функций mktime и explode переведите эту дату в формат timestamp. Узнайте день недели (словом) за введенную дату.

<?php
$arr = explode('.', $_GET['year']);
$week = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'];
if(!empty($_GET['year'])) {
$day = date('w', mktime(0, 0, 0, $arr[1], $arr[0], $arr[2]));
echo $week[$day];
}
?>
Нравится
*********
*********
********* 16 июл 2018 в 0:38
14. Сделайте форму, которая спрашивает дату в формате '2025-12-31'. С помощью функций mktime и explode переведите эту дату в формат timestamp. Узнайте месяц (словом) за введенную дату.
<?php
$arr = explode('-', $_GET['year']);
$arr = array_reverse($arr);
$week = [1=>'янв', 'фев', 'мар', 'апр', 'май', 'июнь','июль', 'авг', 'сен', 'окт', 'ноя', 'дек'];
if(!empty($_GET['year'])) {
$day = date('n', mktime(0, 0, 0, $arr[1], $arr[0], $arr[2]));
echo $week[$day];
}
?>
Нравится
*********
*********
********* 16 июл 2018 в 0:53
Сравнение дат
15. Сделайте форму, которая спрашивает две даты в формате '2025-12-31'. Первую дату запишите в переменную $date1, а вторую в $date2. Сравните, какая из введенных дат больше. Выведите ее на экран.

<form action="" method="GET">
<input placeholder="дата в формате 2000-12-31" name="year1">
<input placeholder="дата в формате 2000-12-31" name="year2">
<input type="submit" name="button">
</form>

<?php
$arr1 = explode('-', $_GET['year1']);
$arr2 = explode('-', $_GET['year2']);
$arr1 = array_reverse($arr1);
$arr2 = array_reverse($arr2);

if(!empty($_GET['year1']) and !empty($_GET['year2'])) {
$date1 = mktime(0, 0, 0, $arr1[1], $arr1[0], $arr1[2]);
$date2 = mktime(0, 0, 0, $arr2[1], $arr2[0], $arr2[2]);
if($date1 > $date2) {
echo date('d.m.Y', $date1) . ' больше';
}
else {
echo date('d.m.Y', $date2) . ' больше';
}
}
?>
Нравится
*********
*********
********* 16 июл 2018 в 1:01
На strtotime
16. Дана дата в формате '2025-12-31'. С помощью функции strtotime и функции date преобразуйте ее в формат '31-12-2025'.
<?php
echo date('d-m-Y', strtotime('2025-12-31'));
?>
Нравится
*********
*********
********* 16 июл 2018 в 1:06
17. Сделайте форму, которая спрашивает дату-время в формате '2025-12-31T12:13:59'. С помощью функции strtotime и функции date преобразуйте ее в формат '12:13:59 31.12.2025'.

<form action="" method="GET">
<input placeholder="2025-12-31T12:13:59" name="year">
<input type="submit" name="button">
</form>

<?php

if(!empty($_GET['year'])) {
echo date('H:i:s d.m.Y', strtotime($_GET['year']));
}
?>
Нравится
*********
*********
********* 16 июл 2018 в 1:14
Прибавление и отнимание дат
18. В переменной $date лежит дата в формате '2025-12-31'. Прибавьте к этой дате 2 дня, 1 месяц и 3 дня, 1 год. Отнимите от этой даты 3 дня.

<?php
$date = '2025-12-31';
$date = date_create($date);
$date = date_modify($date, '2 day');
echo date_format($date, 'd.m.Y');
?>

<?php
$date = '2025-12-31';
$date = date_create($date);
$date = date_modify($date, '3 days 1 month');
echo date_format($date, 'd.m.Y');
?>

<?php
$date = '2025-12-31';
$date = date_create($date);
$date = date_modify($date, '3 days 1 year');
echo date_format($date, 'd.m.Y');
?>

<?php
$date = '2025-12-31';
$date = date_create($date);
$date = date_modify($date, '-3 days');
echo date_format($date, 'd.m.Y');
?>
Нравится
*********
*********
********* 16 июл 2018 в 1:23
Задачи
19. Узнайте сколько дней осталось до Нового Года. Скрипт должен работать в любом году.
<?php
$date1 = (mktime(23, 59, 59, 12, 31) - time()) / 60 / 60 / 24 ;
echo $date1 . '<br>';
?>
Нравится
*********
*********
********* 16 июл 2018 в 2:11
20. Сделайте форму с одним полем ввода, в которое пользователь вводит год. Найдите все пятницы 13-е в этом году. Результат выведите в виде массива дат.

<form action="" method="GET">
<input placeholder="2018" name="year">
<input type="submit" name="button">
</form>

<?php

$arr = [];

if(!empty($_GET['year'])) {



for($i = 1; $i <= 12; $i++) {

$moment = mktime(0, 0, 0, $i, 13, $_GET['year']);

if(date('w', $moment) == 5) {
array_push($arr, date('d.m.Y', $moment));

}
}

}
var_dump($arr);
?>
Нравится
*********
*********
********* 16 июл 2018 в 2:15
21.Узнайте какой день недели был 100 дней назад.

<?php
$week = ['вс', 'пн', 'вт', 'ср','чт', 'пт', 'сб'];

$date = date_create();
date_modify($date, '-100 day');
$day = date_format($date, 'w');
echo $week[$day];
?>
Нравится
*********
*********
********* 16 июл 2018 в 2:18
Задачи на пользовательские функции
Нравится
*********
Дмитрий Трепачёв
Дмитрий Трепачёв 18 июл 2018 в 15:14
Толя, +
Нравится
*********
Ответить
*********
********* 21 июл 2018 в 6:18
1. Сделайте функцию, которая возвращает квадрат числа. Число передается параметром.



<?php
function powNum($num) {
return pow($num, 2);
}
echo powNum(3);
?>
Нравится
*********
*********
********* 21 июл 2018 в 6:19
2. Сделайте функцию, которая возвращает сумму двух чисел. Числа передаются параметрами функции.

<?php
function powNum($num1, $num2) {
return $num1 + $num2;
}
echo powNum(3, 4);
?>
Нравится
*********
*********
********* 21 июл 2018 в 6:21
3. Сделайте функцию, которая отнимает от первого числа второе и делит на третье.

<?php
function powNum($num1, $num2, $num3) {
return ($num1 - $num2) / $num3;
}
echo powNum(3, 4, 5);
?>
Нравится
*********
*********
********* 21 июл 2018 в 6:26
4. Сделайте функцию, которая принимает параметром число от 1 до 7, а возвращает день недели на русском языке.

<?php
function getDay($day) {
$arr = [1=>'пн', 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'];
return $arr[$day];
}
echo(getDay(1));
?>
Нравится
*********
*********
********* 21 июл 2018 в 6:34
Задачи на приемы работы с флагами на PHP
Нравится
*********
*********
********* 21 июл 2018 в 7:42
1. Дан массив с числами. Проверьте, что в этом массиве есть число 5. Если есть - выведите 'да', а если нет - выведите 'нет'.

<?php
$arr = [1, 2, 3, 4, 5, 6, 5, 6, 5, 6];
$flag = false;

foreach($arr as $elem) {
if($elem == 5) {
$flag = true;
}
}

if($flag) {
echo да;
}
else {
echo "нет";
}

?>
Нравится
*********
*********
********* 21 июл 2018 в 7:54
2. Дано число, например 31. Проверьте, что это число не делится ни на одно другое число кроме себя самого и единицы. То есть в нашем случае нужно проверить, что число 31 не делится на все числа от 2 до 30. Если число не делится - выведите 'нет', а если делится - выведите 'да'.

<?php
$num = 31;
$flag = true;
for($i = 2; $i < $num; $i++) {
if($num % $i != 0) {
$flag = false;
}
}

var_dump($flag);

if($flag == false) {
echo 'нэт';
}
else {
echo 'мамой клянусь';
}

?>
Нравится
*********
*********
********* 21 июл 2018 в 8:00
3. Дан массив с числами. Проверьте, есть ли в нем два одинаковых числа подряд. Если есть - выведите 'да', а если нет - выведите 'нет'.
<?php
$arr = [1, 2, 3, 4, 5, 5, 6, 5, 5, 6];
$flag = false;

foreach($arr as $key => $elem) {
if($arr[$key] == $arr[$key-1]) {
$flag = true;
}
}

if($flag) {
echo да;
}
else {
echo "нет";
}


?>
Нравится
*********
*********
********* 21 июл 2018 в 8:01
Задачи на приемы работы с логическими значениями
Нравится
*********
*********
********* 21 июл 2018 в 8:05
1. Сделайте функцию, которая параметрами принимает 2 числа. Если эти числа равны - пусть функция вернет true, а если не равны - false.

<?php

function func($num1, $num2) {
return $num1 == $num2;
}
var_dump(func(2,2));
?>
Нравится
*********
*********
********* 21 июл 2018 в 8:06
2. Сделайте функцию, которая параметрами принимает 2 числа. Если их сумма больше 10 - пусть функция вернет true, а если нет - false.

<?php

function func($num1, $num2) {
return ($num1 + $num2) > 10;
}
var_dump(func(10,2));
?>
Нравится
*********
*********
********* 21 июл 2018 в 8:07
3. Сделайте функцию, которая параметром принимает число и проверяет - отрицательное оно или нет. Если отрицательное - пусть функция вернет true, а если нет - false.

<?php
function func($num1) {
return $num1 < 0;
}
var_dump(func(1));
?>
Нравится
*********
*********
********* 21 июл 2018 в 8:07
Задачи на приемы работы с циклами на PHP
Нравится
*********
*********
********* 21 июл 2018 в 8:37
1. С помощью цикла for сформируйте строку '123456789' и запишите ее в переменную $str

<?php
$str = '';
for($i=1;$i<=9;$i++){
$str .= $i;
}
echo $str
?>
Нравится
*********
*********
********* 21 июл 2018 в 8:38
2. С помощью цикла for сформируйте строку '987654321' и запишите ее в переменную $str

<?php
$str = '';
for($i=9;$i>0;$i--){
$str .= $i;
}
echo $str
?>
Нравится
*********
*********
********* 21 июл 2018 в 8:40
3. С помощью цикла for сформируйте строку '-1-2-3-4-5-6-7-8-9-' и запишите ее в переменную $str

<?php
$str = '-';
for($i=1;$i<=9;$i++){
$str .= $i.'-';
}
echo $str
?>
Нравится
*********
*********
********* 21 июл 2018 в 8:49
4. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 20 рядов, а не 5:

<?php
$str = '';
for($i=1;$i<=20;$i++){
$str .= 'x';
echo $str.'<br>';
}
echo strlen($str);
?>
Нравится
*********
*********
********* 21 июл 2018 в 8:58
5. С помощью двух вложенных циклов нарисуйте следующую пирамидку:

<?php
for($i=1; $i<=9; $i++) {
for($j=1; $j<=$i; $j++) {
echo $i;
}
echo '<br>';
}
?>
Нравится
*********
*********
********* 21 июл 2018 в 9:01
6. Нарисуйте пирамиду, как показано на рисунке, воспользовавшись циклом for:

<?php
for($i=2; $i<=10; $i+=2) {
for($j=1; $j<=$i; $j++) {
echo 'x';
}
echo '<br>';
}
?>
Нравится
*********
*********
********* 21 июл 2018 в 9:02
Задачи на приемы работы с массивами на PHP
Нравится
*********
*********
********* 21 июл 2018 в 9:22
1. Заполните массив следующим образом: в первый элемент запишите 'x', во второй 'xx', в третий 'xxx' и так далее.

<?php
$arr = [];
$str = '';
for($i=1; $i<=10; $i++) {
$str .= 'x';
$arr[$i] = $str;
}
var_dump($arr);
?>
Нравится
*********
*********
********* 21 июл 2018 в 9:31
2. С помощью двух вложенных циклов заполните массив следующим образом: в первый элемент запишите '1', во второй '22', в третий '333' и так далее.

<?php
$arr = [];
for($i=1; $i<=9; $i++) {
for($j=1; $j<=$i; $j++) {
$arr[$i] .= $i;
}
}

var_dump($arr);
?>
Нравится
*********
*********
********* 21 июл 2018 в 9:43
3. Сделайте функцию arrayFill, которая будет заполнять массив заданными значениями. Первым параметром функция принимает значение, которым заполнять массив, а вторым - сколько элементов должно быть в массиве. Пример: arrayFill('x', 5) сделает массив ['x', 'x', 'x', 'x', 'x'].

<?php
$arr = [];
function arrayFill($val, $num) {
for($i=0; $i<=$num; $i++) {
$arr[$i] = $val;
echo $val;
}
return($arr);
}

var_dump(arrayFill('x', 4));
?>
Нравится
*********
*********
********* 21 июл 2018 в 9:51
4. Дан массив с числами. Узнайте сколько элементов с начала массива надо сложить, чтобы в сумме получилось больше 10-ти. Считайте, что в массиве есть нужное количество элементов

<?php
$arr = [1, 2, 3, 4, 5, 6, 5, 6, 5, 6];
$num = 0;
$result = 0;
for($i=0; $i<count($arr); $i++) {
$num += $arr[$i];
if($num > 10) {
$result = $i+1;
break;
}
}
echo $result;
?>
Нравится
*********
*********
********* 21 июл 2018 в 9:56
5. Дан двухмерный массив с числами, например [[1, 2, 3], [4, 5], [6]]. Найдите сумму элементов этого массива. Массив, конечно же, может быть произвольным.

<?php
$arr = [[1, 2, 3], [4, 5], [6]];
$sum = 0;
for($i = 0; $i < count($arr); $i++) {
for($j=0; $j<count($arr[$i]); $j++) {
$sum += $arr[$i][$j];
}
}
echo $sum;
?>
Нравится
*********
*********
********* 21 июл 2018 в 10:00
6. Дан трехмерный массив с числами, например [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]. Найдите сумму элементов этого массива. Массив, конечно же, может быть произвольным.

<?php
$arr = [[[1, 2], [3, 4]], [[5, 6], [7, 8]]];
$sum = 0;
for($i = 0; $i < count($arr); $i++) {
for($j=0; $j<count($arr[$i]); $j++) {
for($k = 0; $k < count($arr[$i][$k]); $k++) {
$sum += $arr[$i][$j][$k];
}
}
}
echo $sum;
?>
Нравится
*********
*********
********* 21 июл 2018 в 10:20
7. С помощью двух циклов создайте массив [[1, 2, 3], [4, 5, 6], [7, 8, 9]].

<?php
$arr = [];
$num = 1;
for($i=0; $i<3; $i++){
for($j=0; $j<3; $j++){
$arr[$i][$j] = $num++;
}
}
var_dump($arr);
?>
Нравится
*********
*********
********* 21 июл 2018 в 10:20
Правильное использование пользовательских функций
Нравится
*********
*********
********* 21 июл 2018 в 11:28
1. Сделайте функцию isNumberInRange, которая параметром принимает число и проверяет, что оно больше нуля и меньше 10. Если это так - пусть функция возвращает true, если не так - false.

<?php
function isNumberInRange($num) {
return $num > 0 and $num < 10;
}
?>
Нравится
*********
*********
********* 21 июл 2018 в 11:42
2. Дан массив с числами. Запишите в новый массив только те числа, которые больше нуля и меньше 10-ти. Для этого используйте вспомогательную функцию isNumberInRange из предыдущей задачи

<?php
$arr = [1, 12, 2, 5, 11];
$newArr = [];
function isNumberInRange($num) {
return $num > 0 and $num < 10;
}

for($i = 0; $i < count($arr); $i++) {
if(isNumberInRange($arr[$i])) {
array_push($newArr, $arr[$i]);
}
}

var_dump($newArr);

?>
Нравится
*********
*********
********* 21 июл 2018 в 11:47
3. Сделайте функцию getDigitsSum (digit - это цифра), которая параметром принимает целое число и возвращает сумму его цифр.

<?php
function getDigitsSum($num) {
return array_sum(str_split($num, 1));
}

?>
Нравится
*********
*********
********* 21 июл 2018 в 11:50
4. Найдите все года от 1 до 2018, сумма цифр которых равна 13. Для этого используйте вспомогательную функцию getDigitsSum из предыдущей задачи.

<?php
function getDigitsSum($num) {
return array_sum(str_split($num, 1));
}

for($i = 1; $i <= 2018; $i++) {
if(getDigitsSum($i) == 13) {
echo $i.'<br>';
}
}

?>
Нравится
*********
*********
********* 21 июл 2018 в 11:52
5. Сделайте функцию isEven() (even - это четный), которая параметром принимает целое число и проверяет: четное оно или нет. Если четное - пусть функция возвращает true, если нечетное - false.

<?php
function isEven($num) {
return $num % 2 == 0;
}
var_dump(isEven(4));
?>
Нравится
*********
*********
********* 21 июл 2018 в 11:55
6. Дан массив с целыми числами. Создайте из него новый массив, где останутся лежать только четные из этих чисел. Для этого используйте вспомогательную функцию isEven из предыдущей задачи.

<?php
function isEven($num) {
return $num % 2 == 0;
}
$arr = [1, 2, 3, 4, 5, 6, 5, 6, 5, 6];
$newArr = [];
for($i = 0; $i < count($arr); $i++) {
if(isEven($arr[$i])) {
array_push($newArr, $arr[$i]);
}
}
var_dump($newArr);
?>
Нравится
*********
*********
********* 21 июл 2018 в 11:59
7. Сделайте функцию getDivisors, которая параметром принимает число и возвращает массив его делителей (чисел, на которое делится данное число).

<?php
function getDivisors($num) {
$arr = [];
for($i = 1; $i <= $num; $i++) {
if($num % $i == 0) {
array_push($arr, $i);
}
}
return $arr;
}

var_dump(getDivisors(31));
?>
Нравится
*********
*********
********* 21 июл 2018 в 12:07
8. Сделайте функцию getCommonDivisors, которая параметром принимает 2 числа, а возвращает массив их общих делителей. Для этого используйте вспомогательную функцию getDivisors из предыдущей задачи.

<?php
function getDivisors($num) {
$arr = [];
for($i = 1; $i <= $num; $i++) {
if($num % $i == 0) {
array_push($arr, $i);
}
}
return $arr;
}

function getCommonDivisors($num1, $num2) {
return array_intersect(getDivisors($num1), getDivisors($num2));
}

var_dump(getCommonDivisors(22,10));

?>
Нравится
*********
*********
********* 21 июл 2018 в 12:07
Практика на работу с пользовательскими функциями PHP
Нравится
*********
*********
********* 21 июл 2018 в 20:08
1. Сделайте функцию, которая принимает строку на русском языке, а возвращает ее транслит.

<?php

$str = 'Мама мыла раму';
echo $arrTr['ы'];
function getArr($str) {
return preg_split('#(?<!^)(?!$)#u', $str);
}

function strTranslate($arr){
$arrTr = ["а"=>"a","б"=>"b","в"=>"v","г"=>"g","д"=>"d", "е"=>"e", "ё"=>"yo","ж"=>"j","з"=>"z","и"=>"i", "й"=>"i","к"=>"k","л"=>"l", "м"=>"m","н"=>"n", "о"=>"o","п"=>"p","р"=>"r","с"=>"s","т"=>"t", "у"=>"y","ф"=>"f","х"=>"h","ц"=>"c","ч"=>"ch", "ш"=>"sh","щ"=>"sh","ы"=>"i","э"=>"e","ю"=>"u", "я"=>"ya", "А"=>"A","Б"=>"B","В"=>"V","Г"=>"G","Д"=>"D", "Е"=>"E","Ё"=>"Yo","Ж"=>"J","З"=>"Z","И"=>"I", "Й"=>"I","К"=>"K","Л"=>"L","М"=>"M","Н"=>"N", "О"=>"O","П"=>"P","Р"=>"R","С"=>"S","Т"=>"T", "У"=>"Y","Ф"=>"F","Х"=>"H","Ц"=>"C","Ч"=>"Ch", "Ш"=>"Sh","Щ"=>"Sh","Ы"=>"I","Э"=>"E","Ю"=>"U", "Я"=>"Ya", "ь"=>"","Ь"=>"","ъ"=>"","Ъ"=>"", "ї"=>"j","і"=>"i","ґ"=>"g","є"=>"ye", "Ї"=>"J","І"=>"I","Ґ"=>"G","Є"=>"YE", ' '=>' '];
$newStr = '';
for($i=0; $i<count($arr); $i++) {
$newStr .= $arrTr[$arr[$i]];
}
return $newStr;
}
echo strTranslate(getArr($str));
?>
Нравится
*********
*********
********* 21 июл 2018 в 20:16
2. Сделайте функцию, которая возвращает множественное или единственное число существительного. Пример: 1 яблоко, 2 (3, 4) яблока, 5 яблок. Функция первым параметром принимает число, а следующие 3 параметра — форма для единственного числа, для чисел два, три, четыре и для чисел, больших четырех, например, func(3, 'яблоко', 'яблока', 'яблок').

<?php

function getDecline($num, $form1, $form2, $form3) {

$arr = [$form1, $form2, $form3];
$str = '';
if($num == 1 || $num % 10 == 1 && $num != 11) { $str = $arr[0]; }
else if($num % 10 > 1 && $num % 10 < 5 && $num % 100 != 12 && $num % 100 != 13 && $num % 100 != 14) { $str = $arr[1]; }
else { $str = $arr[2]; }
return $str;
}

echo getDecline(26, 'яблоко', 'яблока', 'яблок');
?>
Нравится
*********
*********
********* 21 июл 2018 в 20:49
3. Найдите все счастливые билеты. Счастливый билет - это билет, в котором сумма первых трех цифр его номера равна сумме вторых трех цифр его номера.

<?php

function getDigitsSum($num) {
return array_sum(str_split($num, 1));
}

function testTicket($str) {
$num1 = getDigitsSum(substr($str, 0, 3));
$num2 = getDigitsSum(substr($str, 3, 3));
return $num1 == $num2;
}

function happyTicket() {
if(testTicket($ticket)) {
echo "Сегодня твой день!";
}
else {
echo "Бывает))";
}
}

$ticket = '123411333';
happyTicket($ticket)

?>
Нравится
*********
*********
********* 21 июл 2018 в 21:01
4. Дружественные числа - два различных числа, для которых сумма всех собственных делителей первого числа равна второму числу и наоборот, сумма всех собственных делителей второго числа равна первому числу.

Например, 220 и 284. Делители для 220 это 1, 2, 4, 5, 10, 11, 20, 22, 44, 55 и 110, сумма делителей равна 284. Делители для 284 это 1, 2, 4, 71 и 142, их сумма равна 220.

Задача: найдите все пары дружественных чисел в промежутке от 1 до 10000. Для этого сделайте вспомогательную функцию, которая находит все делители числа и возвращает их в виде массива. Также сделайте функцию, которая параметром принимает массив, а возвращает его сумму.

<?php

function getDividers($num) {
$arr = [];
for($i = 1; $i < $num; $i++) {
if($num % $i == 0) {
array_push($arr, $i);
}
}
return $arr;
}

function getSum($arr) {
$sum = 0;
for($i = 0; $i < count($arr); $i++) {
$sum += $arr[$i];
}
return $sum;
}

function getSumDividers($num) {
return getSum(getDividers($num));
}

function friendNum($num1, $num2) {
return getSumDividers($num1) == $num2 && getSumDividers($num2) == $num1;
}

var_dump(friendNum(220, 284));

?>
Нравится
*********
*********
********* 21 июл 2018 в 21:03
Продвинутая работа с пользовательскими функциями в PHP
Нравится
*********
*********
********* 21 июл 2018 в 22:02
1. Сделайте функцию cut, которая первым параметром будет принимать строку, а вторым параметром - сколько первых символов оставить в этой строке. Второй параметр должен быть необязательным и по умолчанию принимать значение 10.

<?php

function cut($str, $num=10) {
return substr($str, 0, $num).'...';
}

echo cut('hello people', 3)

?>
Нравится
*********
*********
********* 21 июл 2018 в 22:07
2. Дан массив с числами. Выведите последовательно его элементы используя рекурсию и не используя цикл.

<?php
$arr = [1,3,4,5,6];

function cut($arr) {
echo array_shift($arr).'<br>';
if(!empty($arr)) {
cut($arr);
}
}

cut($arr);

?>
Нравится
*********
*********
********* 21 июл 2018 в 22:28
3. Дано число. Сложите его цифры. Если сумма получилась более 9-ти, опять сложите его цифры. И так, пока сумма не станет однозначным числом (9 и менее).
<?php

function getDigitsSum($num) {
return array_sum(str_split($num, 1));
}

function getSumNum($num) {
$sum = getDigitsSum($num);
if($sum > 9) {
getSumNum($sum);
}
}

echo getSumNum(8989898989);
?>
Нравится
*********
*********
********* 21 июл 2018 в 22:28
Задачи на продвинутую работу с формами в PHP
Нравится
*********
*********
********* 22 июл 2018 в 1:37
1. Спросите у пользователя имя с помощью формы. Сделайте чекбокс: если он отмечен, то поприветствуйте пользователя, если не отмечен - попрощайтесь с пользователем.

<form action="" method="GET">
<input placeholder="Имя" name="nameUser">
<input type="hidden" name="checkboxUser" value="0">
<input type="checkbox" name="checkboxUser" value="1">
<input type="submit" name="button">
</form>

<?php
var_dump( $_GET['checkboxUser']);
if($_GET['checkboxUser'] == '0') {
echo 'давай до свидания';
}
if($_GET['checkboxUser'] == '1') {
echo 'Заходи брат, гостем будешь';
}
?>
Нравится
*********
*********
********* 22 июл 2018 в 2:12
2. Спросите у пользователя, какие из языков он знает: html, css, php, javascript. Выведите на экран те языки, которые знает пользователь.

<p>Какие языки ты знаешь?</p>
<form action="" method="GET">
<input placeholder="Имя" name="nameUser"><br>
<input type="checkbox" name="lang[]" value="php"><p>php</p>
<input type="checkbox" name="lang[]"value="js"><p>js</p>
<input type="checkbox" name="lang[]" value="html"><p>html</p>
<input type="checkbox" name="lang[]" value="css"><p>css</p>
<input type="checkbox" name="lang[]" value="c++"><p>c++</p>
<input type="submit" name="button">
</form>

<?php

if(isset($_GET['lang'])) {
echo 'Ты знаешь: '.implode(', ', $_GET['lang']);
}
if(empty($_GET['lang'])) {
echo 'ты слабое звено';
}

?>
Нравится
*********
*********
********* 22 июл 2018 в 2:38
3. Спросите у пользователя знает ли он PHP с помощью двух radio-кнопок. Выведите результат на экран. Сделайте так, чтобы по умолчанию один из вариантов был уже отмечен.

<p>Ты знашь php?</p>
<form action="" method="GET">
<input placeholder="Имя" name="nameUser"><br>
<input type="radio" name="lang[]" value="Да" checked="true"><p>Да</p>
<input type="radio" name="lang[]" value="Нет"><p>Нет</p>
<input type="submit" name="button">
</form>

<?php

if(isset($_GET['lang'])) {
echo 'Ваш ответ: '.implode(', ', $_GET['lang']);
}
if(empty($_GET['lang'])) {
echo 'ты слабое звено';
}

?>
Нравится
*********
*********
********* 22 июл 2018 в 2:45
4. Спросите у пользователя его возраст с помощью нескольких radio-кнопок. Варианты ответа сделайте такими: менее 20 лет, 20-25, 26-30, более 30.

<p>Сколько вам лет?</p>
<form action="" method="GET">
<input placeholder="Имя" name="nameUser"><br>
<input type="radio" name="age[]" value="20" checked="true"><p>20</p>
<input type="radio" name="age[]" value="20-25"><p>20-25</p>
<input type="radio" name="age[]" value="26-30"><p>26-30</p>
<input type="radio" name="age[]" value="Более 30"><p>Более 30</p>
<input type="submit" name="button">
</form>

<?php

if(isset($_GET['age'])) {
echo 'Вам: '.implode(', ', $_GET['age']);
}
if(empty($_GET['age'])) {
echo 'Вы не ответили';
}

?>
Нравится
*********
*********
********* 22 июл 2018 в 3:21
5. Спросите у пользователя его возраст с помощью select. Варианты ответа сделайте такими: менее 20 лет, 20-25, 26-30, более 30.

<p>Сколько вам лет?</p>
<form action="" method="GET">
<input placeholder="Имя" name="nameUser"><br>
<select name="age[]">
<option value="20"><p>20</p></option>
<option value="20-25"><p>20-25</p></option>
<option value="26-30"><p>26-30</p></option>
<option value="Более 30"><p>Более 30</p></option>
</select>
<input type="submit" name="button">
</form>

<?php

if(isset($_GET['age'])) {
echo 'Вам: '.implode(', ', $_GET['age']);
}
if(empty($_GET['age'])) {
echo 'Вы не ответили';
}

?>
Нравится
*********
*********
********* 22 июл 2018 в 3:26
6. Спросите у пользователя с помощью мультиселекта, какие из языков он знает: html, css, php, javascript. Выведите на экран те языки, которые знает пользователь.

<p>Выделите те языки, которые вы знаете и нажмите кнопку отправить</p>
<form action="" method="GET">
<input placeholder="Имя" name="nameUser"><br>
<select name="age[]" multiple>
<option value="html"><p>html</p></option>
<option value="css"><p>css</p></option>
<option value="js"><p>js</p></option>
<option value="php"><p>php</p></option>
</select>
<input type="submit" name="button">
</form>

<?php

if(isset($_GET['age'])) {
echo 'Вы знаете: '.implode(', ', $_GET['age']);
}
if(empty($_GET['age'])) {
echo 'Вы не ответили';
}

?>
Нравится
*********
*********
********* 22 июл 2018 в 4:12
7. Сделайте функцию, которая создает обычный текстовый инпут. Функция должна иметь следующие параметры: type, name, value.

<?php
function input($type, $name, $value) {
echo '<input type="'.$type.'" name="'.$name.'" value="'.$value.'">';
}
input('text', 'test', '!!!');
?>
Нравится
*********
*********
********* 22 июл 2018 в 5:12
8. Модифицируйте функцию из предыдущей задачи так, чтобы она сохраняла значение инпута после отправки.

<form action='' method="GET">
<?php echo input('text', 'test', '!!!');?>
<input type="submit" value="отправить">
</form>

<?php

function input($type, $name, $value) {
global $value;
if(isset($_GET['test'])) {
$value = $_GET['test'];
}
return '<input type="'.$type.'" name="'.$name.'" value="'.$value.'">';
}

?>
Нравится
*********
*********
********* 22 июл 2018 в 5:21
9. Сделайте функцию, которая создает чекбокс. Если чекбокс не отмечен - функция должна отправлять 0 (то есть нужно сделать hidden инпут), если отмечен - 1.

<form action='' method="GET">
<?php echo checkbox('test');?>
<input type="submit" value="отправить">
</form>

<?php

function checkbox($name) {
return '<input type="hidden" name="'.$name.'" value="0"><input type="checkbox" name="'.$name.'" value="1"><br>';
}

if(isset($_GET['test'])) {
if($_GET['test'] == 1) {
echo 'спасибо за ответ, ваше мнение очень важно для нас!';
}
if($_GET['test'] == 0) {
echo 'Вы не ответили';
}
}

?>
Нравится
*********
*********
********* 22 июл 2018 в 5:31
10. Напишите функцию, которая создает чекбокс и сохраняет его значение после отправки.

<form action='' method="GET">
<?php echo checkbox('test');?>
<input type="submit" value="отправить">
</form>

<?php

function checkbox($name) {
if(isset($_GET['test']) and $_GET['test'] == 1) {
$check = 'checked';
}
else {
$check = '';
}
return '<input type="hidden" name="'.$name.'" value="0"><input type="checkbox" name="'.$name.'" value="1"'.$check.'><br>';
}

if(isset($_GET['test'])) {
if($_GET['test'] == 1) {
echo 'спасибо за ответ, ваше мнение очень важно для нас!';
}
if($_GET['test'] == 0) {
echo 'Вы не ответили';
}
}

?>
Нравится
*********
*********
********* 22 июл 2018 в 5:31
Задачи на отработку циклов и функций PHP
Нравится
*********
*********
********* 22 июл 2018 в 6:01
1. Выведите с помощью цикла столбец чисел от 1 до 100.

<?php
while($i < 100){
$i++;
echo $i.'<br>';
}
?>
Нравится
*********
*********
********* 22 июл 2018 в 6:02
2. Выведите с помощью цикла столбец четных чисел от 1 до 100.
<?php
while($i < 100){
$i++;
if($i % 2 == 0){
echo $i.'<br>';
}
}
?>
Нравится
*********
*********
********* 22 июл 2018 в 6:22
3. Найдите с помощью цикла сумму чисел от 1 до 100
<?php
$sum = 0;
while($i < 100){
$i++;
$sum += $i;
}
echo $sum;
?>
Нравится
*********
*********
********* 22 июл 2018 в 6:50
4. Найдите с помощью цикла сумму квадратов чисел от 1 до 15.
<?php
$i=0;
$sum = 0;
while($i < 15){
$i++;
$sum += $i*$i;
}

echo $sum;
?>
Нравится
*********
*********
********* 22 июл 2018 в 6:56
5. Найдите с помощью цикла сумму корней чисел от 1 до 15. Результат округлите до двух знаков после дробной части.

<?php
$i=0;
$sum = 0;
while($i < 15){
$i++;
$sum += sqrt($i);
}

echo round($sum,2);
?>
Нравится
*********
*********
********* 22 июл 2018 в 7:00
6. Найдите с помощью цикла сумму тех чисел от 1 до 100, которые делятся на 7.

<?php
$i=1;
$sum = 0;
while($i <= 100){
if($i%7 == 0) {
$sum += $i;
}
$i++;
}

echo $sum;
?>
Нравится
*********
*********
********* 22 июл 2018 в 7:29
7. Заполните массив 10-ю иксами с помощью цикла.

<?php

$arr = [];
$i=0;
$sum = 0;
while($i < 10){
$arr[$i] = 'x';
$i++;
}

var_dump($arr);

?>
Нравится
*********
*********
********* 22 июл 2018 в 7:31
8. Заполните массив числами от 1 до 10 с помощью цикла.
<?php

$arr = [];
$i=1;
$sum = 0;
while($i <= 10){
$arr[$i] = $i;
$i++;
}

var_dump($arr);

?>
Нравится
*********
*********
********* 22 июл 2018 в 7:32
9. Заполните массив числами от 10 до 1 с помощью цикла.

<?php

$arr = [];
$i=10;
$sum = 0;
while($i > 0){
$arr[$i] = $i;
$i--;
}

var_dump($arr);

?>
Нравится
*********
*********
********* 22 июл 2018 в 7:36
10. Заполните массив 10-ю случайными числами от 1 до 10 с помощью цикла.

<?php

$arr = [];
$i=10;
$sum = 0;
while($i > 0){
$arr[$i] = mt_rand(1, 10);;
$i--;
}

var_dump($arr);

?>
Нравится
*********
*********
********* 22 июл 2018 в 8:04
11. С помощью цикла создайте строку из 6-ти символов, состоящую из случайных чисел от 1 до 9

<?php

$arr = [];
$str = '';
$i=0;
$sum = 0;
while($i < 6){
$str .= mt_rand(1, 9);;
$i++;
}

var_dump($str);

?>
Нравится
*********
*********
********* 22 июл 2018 в 8:09
12. Дан массив с числами. С помощью цикла найдите сумму элементов этого массива.

<?php

$arr = [1,2,3,4,5];
$str = '';
$i=0;
$sum = 0;
while($i < count($arr)) {
$sum += $arr[$i];
$i++;
}

echo $sum;

?>
Нравится
*********
*********
********* 22 июл 2018 в 8:10
13. Дан массив с числами. С помощью цикла найдите сумму квадратов элементов этого массива

<?php

$arr = [1,2,3,4,5];
$str = '';
$i=0;
$sum = 0;
while($i < count($arr)) {
$sum += pow($arr[$i], 2);
$i++;
}

echo $sum;

?>
Нравится
*********
*********
********* 22 июл 2018 в 8:12
14. Дан массив с числами. С помощью цикла найдите корень из суммы квадратов элементов этого массива. Результат округлите в меньшую сторону до целых.

<?php

$arr = [1,2,3,4,5];
$str = '';
$i=0;
$sum = 0;
while($i < count($arr)) {
$sum += pow($arr[$i], 2);
$i++;
}

echo floor(sqrt($sum));

?>
Нравится
*********
*********
********* 22 июл 2018 в 8:14
15. Дан массив с числами. Найдите сумму тех элементов массива, которые больше 0 и меньше 10.

<?php

$arr = [1,2,13,4,15];
$str = '';
$i=0;
$sum = 0;
while($i < count($arr)) {
if($arr[$i] > 0 and $arr[$i] < 10) {
$sum += $arr[$i];
}
$i++;
}

echo $sum;

?>
Нравится
*********
*********
********* 22 июл 2018 в 8:18
16. Дан массив с числами. Проверьте, что в нем есть 3 одинаковых числа подряд.

<?php

$arr = [1,2,2,2,13,4,15];
$str = '';
$i=0;
$sum = 0;
$flag = false;
while($i < count($arr)) {
if($arr[$i] == $arr[$i+1] and $arr[$i] == $arr[$i+2]) {
$flag = true;
}
$i++;
}

if($flag) echo 'да есть';else echo 'нет';

?>
Нравится
*********
*********
********* 22 июл 2018 в 8:30
17. С помощью цикла сформируйте строку '1223334444...' и так далее до заданного числа.
<?php

$i = 1;
$str = '';
while($i <= 10) {
$j = 1;
while($j <= $i) {
$str .= $i;
$j++;
}

$i++;
}
echo $str;
?>
Нравится
*********
*********
********* 22 июл 2018 в 8:45
18. Дан многомерный массив (см. его под задачей). С помощью цикла выведите строки в формате 'имя-зарплата'.

<?php

$arr = [
0=>['name'=>'Коля', 'salary'=>300],
1=>['name'=>'Вася', 'salary'=>400],
2=>['name'=>'Петя', 'salary'=>500],
];

$i = 0;
while($i < count($arr)) {
echo $arr[$i]['name'].': '.$arr[$i]['salary'].'<br>';
$i++;
}

?>
Нравится
*********
*********
********* 22 июл 2018 в 8:54
19. Заполните двумерный массив случайными числами от 1 до 10. В каждом подмассиве должно быть по 10 элементов. Должно быть 10 подмассивов.

<?php

$arr = [];

$i = 0;
while($i < 3) {
$j = 0;
while($j < 10) {
$arr[$i][$j] = mt_rand(1,10);
$j++;
}
$i++;
}
var_dump($arr);
?>
Нравится
*********
*********
********* 22 июл 2018 в 9:10
20. Напишите свой аналог функции ucfirst (аналог - значит можно использовать все, что угодно, кроме этой функции).

<?php

$str = 'happy';
$str1 = strtoupper(substr($str, 0, 1));
$str2 = substr($str, 1);
$str = $str1.$str2;
echo $str;
?>
Нравится
*********
*********
********* 22 июл 2018 в 9:35
21. Напишите свой аналог функции strrev. Решите задачу двумя способами.

<?php
$str='happy';
$arr = str_split($str, 1);
$i=count($arr);
$str = '';
while($i>=0) {
$str .= $arr[$i];
$i--;
}
echo $str;
?>

<?php
$str='happy';
$result = '';
$arr = str_split($str, 1);

function func($arr) {
global $result;
$result .= array_pop($arr);
if(count($arr) > 0) {
func($arr);
}
return $result;
}
echo func($arr);
?>
Нравится
*********
*********
********* 22 июл 2018 в 12:20
22. Напишите свой аналог функции strlen<?php
$str = 'happy';
echo count(str_split($str, 1));
?>

<?php
$str = 'happy';
function func($str) {
return count(str_split($str, 1));
}
echo func($str);
?>
Нравится
*********
*********
********* 22 июл 2018 в 12:34
23. Поменяйте в строке большие буквы на маленькие и наоборот.

<?php
$str = 'Happy';
function getArr($str) {
return str_split($str, 1);
}

function func($arr) {
$newStr = '';
foreach($arr as $elem) {
if(ord($elem) >= 97 and ord($elem) <= 122) {
$newStr .= strtoupper($elem);
}
else {
$newStr .= strtolower($elem);
}
}
return $newStr;
}
echo func(getArr($str));
?>
Нравится
*********
*********
********* 22 июл 2018 в 12:57
24. Преобразуйте строку 'var_text_hello' в 'varTextHello'. Скрипт должен работать с любыми стоками такого рода.

<?php
$str = 'var_text_hello';

function getArr($str) {
return explode('_', $str);
}

function toUp($arr) {
$newStr = '';
for($i=0; $i<count($arr); $i++) {
$newStr .= ucfirst($arr[$i]);
}
return lcfirst($newStr);
}

echo toUp(getArr($str));
?>
Нравится
*********
*********
********* 22 июл 2018 в 13:00
25. С помощью только одного цикла нарисуйте следующую пирамидку:

<?php
for($i=0; $i<10; $i++) {
echo str_repeat($i, $i).'<br>';
}
?>
Нравится
*********
*********
********* 22 июл 2018 в 13:05
26. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть не 5 рядов, а произвольное количество, оно задается так: $str = 'xxxxxxxx'; - это первый ряд пирамиды.

<?php
$str = 'xxxxxxxx';
for($i=strlen($str); $i>0; $i--) {
echo substr($str, -$i).'<br>';
}
?>
Нравится
*********
*********
********* 22 июл 2018 в 13:22
27. Дан массив с произвольными числами. Сделайте так, чтобы элемент повторился в массиве количество раз, соответствующее его числу. Пример: [1, 3, 2, 4] превратится в [1, 3, 3, 3, 2, 2, 4, 4, 4, 4].

<?php
$arr = [1,3,5,2,4,5];
$newArr = [];
$count = 0;
for($i=0; $i<count($arr); $i++) {
for($j=0; $j<$arr[$i]; $j++) {
array_push($newArr, $arr[$i]);
}
}
var_dump($newArr);
?>
Нравится
*********
*********
********* 22 июл 2018 в 13:31
28. Дан массив с произвольными целыми числами. Сделайте так, чтобы первый элемент стал ключом второго элемента, третий элемент - ключом четвертого и так далее. Пример: [1, 2, 3, 4, 5, 6] превратится в [1=>2, 3=>4, 5=>6].

<?php
$arr = [2,3,4,6,5,0,4];
$newArr = [];
foreach($arr as $key=>$elem) {
$newArr[$elem] = $arr[$key+1];
}
var_dump($newArr);
?>
Нравится
*********
*********
********* 22 июл 2018 в 13:39
29. Дана строка. Удалите из этой строки четные символы.
<?php
$str = 'happy bethday to you';
$arr = str_split($str, 1);
$str = '';
for($i = 0; $i < count($arr); $i++) {
if(ord($arr[$i]) % 2 == 0) {
$str .= $arr[$i];
}
}
echo $str;
?>
Нравится
*********
*********
********* 22 июл 2018 в 13:51
30. Дана строка. Поменяйте ее первый символ на второй и наоборот, третий на четвертый и наоборот, пятый на шестой и наоборот и так далее. То есть из строки '12345678' нужно сделать '21436587'.

<?php
$str = '12345678';
$arr = str_split($str, 2);
$str = '';
foreach($arr as $key=>$elem) {
$str .= strrev($elem);
}
echo $str;
?>
Нравится
*********
*********
********* 22 июл 2018 в 14:11
31. Сделайте аналог функции array_unique.

<?php
$arr = [2,2,3,3,3,4,4,5];
$newArr = [];
for($i = 0; $i < count($arr); $i++) {
if(in_array($arr[$i], $newArr) == false) {
array_push($newArr, $arr[$i]);
}
}

var_dump($newArr);
?>
Нравится
*********
*********
********* 22 июл 2018 в 15:01
32. Сделайте функцию, противоположную функции array_unique. Ваша функция должна оставлять дубли и удалять элементы, не имеющие дублей.

<?php
$arr = [2,2,3,3,3,4,4,5];
$testArr = array_count_values($arr);
$newArr = [];
foreach($arr as $key=>$elem) {
if($testArr[$elem] > 1) {
array_push($newArr, $elem);
}
}
var_dump($newArr);
?>
Нравится
*********
*********
********* 22 июл 2018 в 15:12
33. Напишите скрипт, который проверяет, является ли данное число простым (простое число - это то, которое делится только на 1 и на само себя)

<?php
$num = 31;
$flag = false;
for($i=2; $i<31; $i++) {
if($num % $i == 0) {
$flag = true;
}
}

if($flag == false) {
echo 'число простое';
}
else {
echo 'число не простое';
}
?>
Нравится
*********
*********
********* 22 июл 2018 в 15:28
34. Дан массив со строками. Запишите в новый массив только те строки, которые начинаются с 'http://'.

<?php
$newArr = [];
$arr = ['yandex.ru', 'mail.ru', 'http://www.GigPorno.xxx', 'http://www.yandex.ru', 'www.test.com'];
for($i=0; $i<count($arr); $i++) {
if(substr($arr[$i], 0,7) == 'http://') {
array_push($newArr, $arr[$i]);
}
}
var_dump($newArr);
?>
Нравится
*********
*********
********* 22 июл 2018 в 15:29
Практика по написанию простых скриптов PHP
Нравится
*********
*********
********* 22 июл 2018 в 16:16
1. По заходу на страницу выведите сколько дней осталось до нового года.
<?php
$date1 = (mktime(23, 59, 59, 12, 31) - time()) / 60 / 60 / 24 ;
echo $date1 . '<br>';
?>
Нравится
*********
*********
********* 22 июл 2018 в 16:20
2. Дан инпут и кнопка. В этот инпут вводится год. По нажатию на кнопку выведите на экран, високосный он или нет.

<form action="" method="GET">
<input placeholder="введите год" name="year">
<input type="submit" name="button">
</form>

<?php
if(!empty($_GET['year'])) {
if(date('L', mktime(0, 0, 0, 1, 1, $_GET['year'])) == 1) {
echo 'високосный';
}
else {
echo 'невисокосный';
}
}
?>
Нравится
*********
*********
********* 22 июл 2018 в 16:34
3. Дан инпут и кнопка. В этот инпут вводится дата в формате '01.12.1990'. По нажатию на кнопку выведите на экран день недели, соответствующий этой дате, например, 'воскресенье'.

<form action="" method="GET">
<input placeholder="введите 22.07.2018" name="year">
<input type="submit" name="button">
</form>

<?php
$arr = explode('.', $_GET['year']);
$week = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'];
if(!empty($_GET['year'])) {
$day = date('w', mktime(0, 0, 0, $arr[1], $arr[0], $arr[2]));
echo $week[$day];
}
?>
Нравится
*********
*********
********* 22 июл 2018 в 22:04
4. По заходу на страницу выведите текущую дату в формате '12 мая 2015 года, воскресенье'.

<?php
$months = array( 1 => 'января' , 'февраля' , 'марта' , 'апреля' , 'мая' , 'июня' , 'июля' , 'августа' , 'сентября' , 'октября' , 'ноября' , 'декабря' );
$days = array( 'Воскресенье', 'Понедельник' , 'Вторник' , 'Среда' , 'Четверг' , 'Пятница' , 'Суббота' );
echo date('d ' . $months[date('n')].' Y') . ' года, ' . $days[date('w')];

?>
Нравится
*********
*********
********* 23 июл 2018 в 0:11
5. Дан инпут и кнопка. В этот инпут вводится дата рождения в формате '01.12.1990'. По нажатию на кнопку выведите на экран сколько дней осталось до дня рождения пользователя.

<?php
$result = 0;
$arr = explode('.', $_GET['year']);
$date1 = mktime(23, 59, 59, $arr[1], $arr[0], date('Y'));
$date2 = mktime(23, 59, 59, $arr[1], $arr[0], date('Y') + 1);
if($date1 > time()) {
$result = ($date1 - time()) / 60 / 60 / 24 ;
}
else{
$result = ($date2 - time()) / 60 / 60 / 24 ;
}

echo 'до вашего дня рождения осталось: '.$result.' дней<br>';

?>
Нравится
*********
*********
********* 23 июл 2018 в 1:45
6. По заходу на страницу выведите сколько дней осталось до ближайшей масленницы (последнее воскресенье весны).

<?php
$str = 'last Sunday of February';
$arr = explode('.',date('d.m.Y', strtotime($str)));
$day = mktime(0,0,0,$arr[1], $arr[0], $arr[2]);
if($day < time()) {
$result = (mktime(0,0,0,$arr[1], $arr[0], $arr[2] + 1) - time()) / 60 / 60 / 24;
}
if($day > time()) {
$result = (mktime(0,0,0,$arr[1], $arr[0], $arr[2]) - time()) / 60 / 60 / 24;
}

echo 'до масленицы осталось: '.$result;
?>
Нравится
*********
*********
********* 23 июл 2018 в 3:44
7. Дан инпут и кнопка. В этот инпут вводится дата рождения в формате '31.12'. По нажатию на кнопку выведите знак зодиака пользователя.

<form action="" method="GET">
<input placeholder="введите д.р.в формате 22.07.2018" name="year" >
<input type="submit" name="button">
</form>

<?php

function getSign($month, $day) {
$value = '';
if ($month==1 && $day>=20 || $month==2 && $day<=18) $value="Водолей";
else if ($month==2 && $day>=19 || $month==3 && $day<=20) $value="Рыбы";
else if ($month==3 && $day>=21 || $month==4 && $day<=19) $value="Овен";
else if ($month==4 && $day>=20 || $month==5 && $day<=20) $value="Телец";
else if ($month==5 && $day>=21 || $month==6 && $day<=21) $value="Близнецы";
else if ($month==6 && $day>=22 || $month==7 && $day<=22) $value="Рак";
else if ($month==7 && $day>=23 || $month==8 && $day<=22) $value="Лев";
else if ($month==8 && $day>=23 || $month==9 && $day<=22) $value="Дева";
else if ($month==9 && $day>=23 || $month==10 && $day<=22) $value="Весы";
else if ($month==10 && $day>=23 || $month==11 && $day<=21) $value="Скорпион";
else if ($month==11 && $day>=22 || $month==12 && $day<=21) $value="Стрелец";
else if ($month==12 && $day>=22 || $month==1 && $day<=19) $value="Козерог";
return $value;
}
if(!empty($_GET['year'])) {
$arr = explode('.', $_GET['year']);
$month = date('m', mktime(0,0,0, $arr[1], $arr[0], $arr[2]));
$day = date('d', mktime(0,0,0, $arr[1], $arr[0], $arr[2]));
echo getSign($month, $day);
}

if(empty($_GET['year'])) {
echo 'вы не указали дату рождения';
}

?>
Нравится
*********
*********
********* 23 июл 2018 в 4:15
8. Дан массив праздников. По заходу на страницу, если сегодня праздник, то поздравьте пользователя с этим праздником.

<?php

$arr = ['31.07'=>'Всемирный день рейнджера', '28.04' => 'Всемирный день Тай-цзи и Цигун', '17.02' => 'День спонтанного проявления доброты'];
$str = date('d.m');
foreach($arr as $key => $elem) {
if($str == $key) {
echo 'Здравствуй уважаемый пользователь, сегодня: '.$elem . ', поэтому мы дарим вам скидку 10% на все товары последнего размера';
}
}
?>
Нравится
*********
*********
********* 23 июл 2018 в 5:46
9. Сделайте скрипт-гороскоп. Внутри него хранится массив гороскопов на несколько дней вперед для каждого знака зодиака. По заходу на страницу спросите у пользователя дату рождения, определите его знак зодиака и выведите предсказание для этого знака зодиака на текущий день.

<h1>Введите дату своего рождения в формате дд.мм.гггг. и вы узнаете что вас ждет</h1>
<form action="" method="GET">
<input placeholder="введите д.р.в формате 22.07.2018" name="year" >
<input type="submit" name="button">
</form>

<?php

function getSign($month, $day) {
$value = '';
if ($month==1 && $day>=20 || $month==2 && $day<=18) $value="Водолей";
else if ($month==2 && $day>=19 || $month==3 && $day<=20) $value="Рыбы";
else if ($month==3 && $day>=21 || $month==4 && $day<=19) $value="Овен";
else if ($month==4 && $day>=20 || $month==5 && $day<=20) $value="Телец";
else if ($month==5 && $day>=21 || $month==6 && $day<=21) $value="Близнецы";
else if ($month==6 && $day>=22 || $month==7 && $day<=22) $value="Рак";
else if ($month==7 && $day>=23 || $month==8 && $day<=22) $value="Лев";
else if ($month==8 && $day>=23 || $month==9 && $day<=22) $value="Дева";
else if ($month==9 && $day>=23 || $month==10 && $day<=22) $value="Весы";
else if ($month==10 && $day>=23 || $month==11 && $day<=21) $value="Скорпион";
else if ($month==11 && $day>=22 || $month==12 && $day<=21) $value="Стрелец";
else if ($month==12 && $day>=22 || $month==1 && $day<=19) $value="Козерог";
return $value;
}
if(!empty($_GET['year'])) {
$arr = explode('.', $_GET['year']);
$month = date('m', mktime(0,0,0, $arr[1], $arr[0], $arr[2]));
$day = date('d', mktime(0,0,0, $arr[1], $arr[0], $arr[2]));
}

if(empty($_GET['year'])) {
echo '<h1>вы не указали дату рождения</h1>';
}
Нравится
*********
*********
********* 23 июл 2018 в 5:48
$horoscope = ["Козерог"=>['23.07'=>'сегодня будет лучше чем вчера', '24.07'=>'не выходите из дома', '25.07'=>'сегодня конец света'], "Водолей"=>['23.07'=>'сегодня будет лучше чем вчера', '24.07'=>'не выходите из дома', '25.07'=>'сегодня конец света'], "Рыбы"=>['23.07'=>'сегодня будет лучше чем вчера', '24.07'=>'не выходите из дома', '25.07'=>'сегодня конец света'], "Овен"=>['23.07'=>'сегодня будет лучше чем вчера', '24.07'=>'не выходите из дома', '25.07'=>'сегодня конец света'], "Телец"=>['23.07'=>'сегодня будет лучше чем вчера', '24.07'=>'не выходите из дома', '25.07'=>'сегодня конец света'], "Близнецы"=>['23.07'=>'сегодня будет лучше чем вчера', '24.07'=>'не выходите из дома', '25.07'=>'сегодня конец света'], "Рак"=>['23.07'=>'сегодня будет лучше чем вчера', '24.07'=>'не выходите из дома', '25.07'=>'сегодня конец света'], "Лев"=>['23.07'=>'сегодня будет лучше чем вчера', '24.07'=>'не выходите из дома', '25.07'=>'сегодня конец света'], "Девы"=>['23.07'=>'сегодня будет лучше чем вчера', '24.07'=>'не выходите из дома', '25.07'=>'сегодня конец света'], "Весы"=>['23.07'=>'сегодня будет лучше чем вчера', '24.07'=>'не выходите из дома', '25.07'=>'сегодня конец света'], "Скорпион"=>['23.07'=>'сегодня будет лучше чем вчера', '24.07'=>'не выходите из дома', '25.07'=>'сегодня конец света'], "Стрелец"=>['23.07'=>'сегодня будет лучше чем вчера', '24.07'=>'не выходите из дома', '25.07'=>'сегодня конец света']] ;
$strDay = date('d.m');
$sign = getSign($month, $day);
echo '<h1>'.$sign. ': ' . $horoscope[$sign][$strDay].'</h1>';
?>
Нравится
*********
*********
********* 24 июл 2018 в 1:42
10. Дан текстареа и кнопка. В текстареа вводится текст. По нажатию на кнопку выведите количество слов в тексте, количество символов в тексте, количество символов за вычетом пробелов.

<form action="" method="GET">
<textarea name="text"></textarea>
<input type="submit" name="button">
</form>

<?php
$text = $_GET['text'];
$arrCountWord = str_word_count($text, 1, "АаБбВвГгДдЕеЁёЖжЗзИиЙйКкЛлМмНнОоПпРрСсТтУуФфХхЦцЧчШшЩщЪъЫыЬьЭэЮюЯя");
$notSpace = str_replace(' ', '', $text);
echo 'В тексте: '.count($arrCountWord). ' слов<br>';
echo strlen($text). ' символов<br>';
echo strlen($notSpace).' символов без учета пробелов';
?>
Нравится
*********
*********
********* 24 июл 2018 в 2:02
11. Дан текстареа и кнопка. В текстареа вводится текст. По нажатию на кнопку нужно посчитать процентное содержание каждого символа в тексте.

<form action="" method="GET">
<textarea name="text"></textarea>
<input type="submit" name="button">
</form>

<?php
$text = $_GET['text'];

foreach(count_chars($text, 1) as $key=>$elem) {
echo 'символ: '. chr($key).': '.$elem.'<br>';
}
?>
Нравится
*********
*********
********* 24 июл 2018 в 8:16
12. Дан массив слов, инпут и кнопка. В инпут вводится набор букв. По нажатию на кнопку выведите на экран те слова, которые содержат в себе все введенные буквы.

<form action="" method="GET">
<textarea name="text"></textarea>
<input type="submit" name="button">
</form>

<?php
$arrWords = ['жили', 'были', 'не', 'тужили'];
$text = $_GET['text'];
$symbol = explode(' ', $text);

if(!empty($_GET['text'])) {
foreach($arrWords as $elem){
for($i=0; $i<count($symbol); $i++) {
if(strpos($elem, $symbol[$i]) !== false) {
echo $elem;
}
}
}
}

?>
Нравится
*********
Дмитрий Трепачёв
Дмитрий Трепачёв 25 июл 2018 в 16:24
Толя, 12. Дан массив слов, инпут и кнопка. В инпут вводится набор букв. По нажатию на кнопку выведите на экран те слова, которые содержат в себе все введенные буквы.

<form action="" method="GET">
<textarea name="text"></textarea>
<input type="submit" name="button">
</form>

<?php
$arrWords = ['жили', 'были', 'не', 'тужили'];
$text = $_GET['text'];
$symbol = explode(' ', $text);

if(!empty($_GET['text'])) {
foreach($arrWords as $elem){
for($i=0; $i<count($symbol); $i++) {

count($symbol) в цикле одно и тоже считает, не оптимально
Нравится
*********
Ответить
Дмитрий Трепачёв
Дмитрий Трепачёв 25 июл 2018 в 16:25
Толя,
15. Дан массив с числами. Найдите сумму тех элементов массива, которые больше 0 и меньше 10.

<?php

$arr = [1,2,13,4,15];
$str = '';
$i=0;
$sum = 0;
while($i < count($arr)) {
if($arr[$i] > 0 and $arr[$i] < 10) {
$sum += $arr[$i];
}
$i++;
}

echo $sum;

и тут аналогично
Нравится
*********
Ответить
Дмитрий Трепачёв
Дмитрий Трепачёв 25 июл 2018 в 16:25
Толя, +
Нравится
*********
Ответить
*********
********* 25 июл 2018 в 17:08
Дмитрий, исправлю
Нравится
*********
*********
********* 25 июл 2018 в 17:32
Дмитрий, Исходя из условий задачи, я нашел сумму чисел, которые меньше 10 и больше 0, т.е. сумму чисел 1, 2, 4, на выходе в переменной $sum лежит число 7. Разве не это требовалось?
Нравится
*********
*********
********* 28 июл 2018 в 9:34
Дмитрий, добавил функцию testStr в ней использовал флаг, если функция возвращает true значит есть такое слово

<form action="" method="GET">
<textarea name="text"></textarea>
<input type="submit" name="button">
</form>

<?php
$arrWords = ['каждый', 'охотник', 'желает', 'знать', 'где', 'сидит', 'фазан'];
$text = $_GET['text'];

function mb_str_split($str)
{
preg_match_all('#.{1}#uis', $str, $out);
return $out[0];
}

$symbol = mb_str_split($text);
var_dump($symbol);
echo '<br>';

function testStr($elem, $symbol) {
$flag = true;
for($i=0; $i<count($symbol); $i++) {
if(strpos($elem, $symbol[$i]) === false) {
$flag = false;
}
}
return $flag;
}

if(!empty($_GET['text'])) {
foreach($arrWords as $elem){
if(testStr($elem, $symbol)) {
echo $elem.'<br>';
}
}
}


?>
Нравится
*********
*********
********* 28 июл 2018 в 12:33
13. Дан текстареа и кнопка. В текстареа через пробел вводятся слова. По нажатию на кнопку выведите слова в таком виде: сначала заголовок 'слова на букву а' и под ним все слова, которые начинаются на 'а', потом заголовок 'слова на букву б' и все слова на 'б' и так далее. Буквы должны идти в алфавитном порядке. Брать следует только те буквы, на которые начинаются наши слова. То есть: если нет слов, к примеру, на букву 'в' - такого заголовка тоже не будет.
<?php

$text = $_GET['text'];
$word = explode(' ', $text);
for($i=0; $i<count($word); $i++){
$word[$i] = strtolower($word[$i]);
}
$word = array_unique($word);
sort($word);

$charsArr = [];

foreach($word as $elem) {
array_push($charsArr, strtoupper(substr($elem, 0, 1)));
}

$charsArr = array_unique($charsArr);

if(!empty($_GET['text'])) {

foreach($charsArr as $elem) {
echo $elem.'<br>';
for($i=0; $i<count($word); $i++) {
if(strtoupper(substr($word[$i], 0, 1)) == $elem) {
echo $word[$i].'<br>';
}
}
echo '<br>';
}

}
?>
Нравится
*********
*********
********* 29 июл 2018 в 1:33
14. Дан инпут и кнопка. В этот инпут вводится строка на русском языке. По нажатию на кнопку выведите на экран транслит этой строки.

<?php

$converter = array(
'а' => 'a', 'б' => 'b', 'в' => 'v',
'г' => 'g', 'д' => 'd', 'е' => 'e',
'ё' => 'e', 'ж' => 'zh', 'з' => 'z',
'и' => 'i', 'й' => 'y', 'к' => 'k',
'л' => 'l', 'м' => 'm', 'н' => 'n',
'о' => 'o', 'п' => 'p', 'р' => 'r',
'с' => 's', 'т' => 't', 'у' => 'u',
'ф' => 'f', 'х' => 'h', 'ц' => 'c',
'ч' => 'ch', 'ш' => 'sh', 'щ' => 'sch',
'ь' => '\'', 'ы' => 'y', 'ъ' => '\'',
'э' => 'e', 'ю' => 'yu', 'я' => 'ya',

'А' => 'A', 'Б' => 'B', 'В' => 'V',
'Г' => 'G', 'Д' => 'D', 'Е' => 'E',
'Ё' => 'E', 'Ж' => 'Zh', 'З' => 'Z',
'И' => 'I', 'Й' => 'Y', 'К' => 'K',
'Л' => 'L', 'М' => 'M', 'Н' => 'N',
'О' => 'O', 'П' => 'P', 'Р' => 'R',
'С' => 'S', 'Т' => 'T', 'У' => 'U',
'Ф' => 'F', 'Х' => 'H', 'Ц' => 'C',
'Ч' => 'Ch', 'Ш' => 'Sh', 'Щ' => 'Sch',
'Ь' => '\'', 'Ы' => 'Y', 'Ъ' => '\'',
'Э' => 'E', 'Ю' => 'Yu', 'Я' => 'Ya',
' ' => ' ', ',' => ','
);

$text = $_GET['text'];

function mb_str_split($str){
preg_match_all('#.{1}#uis', $str, $out);
return $out[0];
}

$word = mb_str_split($text);
$str = '';

if(!empty($_GET['text'])) {
foreach($word as $key=>$elem) {
echo $converter[$elem];
}
}

?>
Нравится
*********
*********
********* 29 июл 2018 в 1:48
15. Дан инпут, 2 радиокнопочки и кнопка. В инпут вводится строка, а с помощью радиокнопочек выбирается - нужно преобразовать эту строку в транслит или из транслита обратно.

<?php

$converter = array(
'а' => 'a', 'б' => 'b', 'в' => 'v',
'г' => 'g', 'д' => 'd', 'е' => 'e',
'ё' => 'e', 'ж' => 'zh', 'з' => 'z',
'и' => 'i', 'й' => 'y', 'к' => 'k',
'л' => 'l', 'м' => 'm', 'н' => 'n',
'о' => 'o', 'п' => 'p', 'р' => 'r',
'с' => 's', 'т' => 't', 'у' => 'u',
'ф' => 'f', 'х' => 'h', 'ц' => 'c',
'ч' => 'ch', 'ш' => 'sh', 'щ' => 'sch',
'ь' => '\'', 'ы' => 'y', 'ъ' => '\'',
'э' => 'e', 'ю' => 'yu', 'я' => 'ya',

'А' => 'A', 'Б' => 'B', 'В' => 'V',
'Г' => 'G', 'Д' => 'D', 'Е' => 'E',
'Ё' => 'E', 'Ж' => 'Zh', 'З' => 'Z',
'И' => 'I', 'Й' => 'Y', 'К' => 'K',
'Л' => 'L', 'М' => 'M', 'Н' => 'N',
'О' => 'O', 'П' => 'P', 'Р' => 'R',
'С' => 'S', 'Т' => 'T', 'У' => 'U',
'Ф' => 'F', 'Х' => 'H', 'Ц' => 'C',
'Ч' => 'Ch', 'Ш' => 'Sh', 'Щ' => 'Sch',
'Ь' => '\'', 'Ы' => 'Y', 'Ъ' => '\'',
'Э' => 'E', 'Ю' => 'Yu', 'Я' => 'Ya',
' ' => ' ', ',' => ','
);

$text = $_GET['text'];

function mb_str_split($str){
preg_match_all('#.{1}#uis', $str, $out);
return $out[0];
}

$word = mb_str_split($text);
$str = '';

if(!empty($_GET['text']) and $_GET['choice'] == 'да') {
foreach($word as $elem) {
echo $converter[$elem];
}
}

if(!empty($_GET['text']) and $_GET['choice'] == 'нет') {
$newArr = array_flip($converter);
var_dump($newArr);
foreach($word as $elem) {
echo $newArr[$elem];
}
}

?>
Нравится
*********
*********
********* 29 июл 2018 в 5:57
16. Дан массив с вопросами и правильными ответами. Реализуйте тест: выведите на экран все вопросы, под каждым инпут. Пользователь читает вопрос, пишет свой ответ в инпут. Когда вопросы заканчиваются - он жмет на кнопку, страница обновляется и вместо инпутов под вопросами появляется сообщение вида: 'ваш ответ: ... верно!' или 'ваш ответ: ... неверно! Правильный ответ: ...'. Правильно отвеченные вопросы должны гореть зеленым цветом, а неправильно - красным.

<h2>Пройди тест</h2>

<?php
$answerArr = ['Столица Китая'=>'Пекин', 'Столица России'=>'Москва', 'Столица Украины'=>'Киев'];
?>
<form action="" method="GET">
<?php
echo '<p>Столица Китая?</p>';
if(empty($_GET['answer1'])) {
echo '<input type="hidden" name="number1" value="Столица Китая">
<input placeholder="ответ" name="answer1">';
}
if(!empty($_GET['answer1'])) {
echo testQuestion($_GET['answer1'], $answerArr, $_GET['number1']);
}

echo '<p>Столица России?</p>';
if(empty($_GET['answer2'])) {
echo '<input type="hidden" name="number2" value="Столица России">
<input placeholder="ответ" name="answer2">';
}
if(!empty($_GET['answer2'])) {
echo testQuestion($_GET['answer2'], $answerArr, $_GET['number2']);
}

echo '<p>Столица Украины?</p>';
if(empty($_GET['answer3'])) {
echo '<input type="hidden" name="number3" value="Столица Украины">
<input placeholder="ответ" name="answer3">';
}
if(!empty($_GET['answer3'])) {
echo testQuestion($_GET['answer3'], $answerArr, $_GET['number3']);
}
?>
<br><br><input type="submit" value="проверить"></form>

<?php
function testQuestion($name, $arr, $numQuest) {
if($name == $arr[$numQuest]){
$str = '<span class="green">Ваш ответ: '.$name.' верный!</span>';
}
if($name != $arr[$numQuest]){
$str = '<span class="red">Ваш ответ: '.$name. ' неверный!</span>';
}
return $str;
}

?>
Нравится
*********
*********
********* 29 июл 2018 в 6:11
17. Модифицируем предыдущую задачу: пусть теперь тест показывает варианты ответов и радиокнопочки. Пользователь должен выбрать один и вариантов.

<h2>Пройди тест</h2>

<?php
$answerArr = ['Столица Китая'=>'Пекин', 'Столица России'=>'Москва', 'Столица Украины'=>'Киев'];
?>
<form action="" method="GET">
<?php
echo '<p>Столица Китая?</p>';
if(empty($_GET['answer1'])) {
echo '<input type="hidden" name="number1" value="Столица Китая">
<i>Пекин</i><input type="checkbox" name="answer1" value="Пекин">
<i>Москва</i><input type="checkbox" name="answer1" value="Москва">
<i>Киев</i><input type="checkbox" name="answer1" value="Киев">';
}
if(!empty($_GET['answer1'])) {
echo testQuestion($_GET['answer1'], $answerArr, $_GET['number1']);
}

echo '<p>Столица России?</p>';
if(empty($_GET['answer2'])) {
echo '<input type="hidden" name="number2" value="Столица России">
<i>Пекин</i><input type="checkbox" name="answer2" value="Пекин">
<i>Москва</i><input type="checkbox" name="answer2" value="Москва">
<i>Киев</i><input type="checkbox" name="answer2" value="Киев">';
}
if(!empty($_GET['answer2'])) {
echo testQuestion($_GET['answer2'], $answerArr, $_GET['number2']);
}

echo '<p>Столица Украины?</p>';
if(empty($_GET['answer3'])) {
echo '<input type="hidden" name="number3" value="Столица Украины">
<i>Пекин</i><input type="checkbox" name="answer3" value="Пекин">
<i>Москва</i><input type="checkbox" name="answer3" value="Москва">
<i>Киев</i><input type="checkbox" name="answer3" value="Киев">';
}
if(!empty($_GET['answer3'])) {
echo testQuestion($_GET['answer3'], $answerArr, $_GET['number3']);
}
?>
<br><br><input type="submit" value="проверить"></form>

<?php
function testQuestion($name, $arr, $numQuest) {
if($name == $arr[$numQuest]){
$str = '<span class="green">Ваш ответ: '.$name.' верный!</span>';
}
if($name != $arr[$numQuest]){
$str = '<span class="red">Ваш ответ: '.$name. ' неверный!</span>';
}
return $str;
}

?>
Нравится
*********
*********
********* 29 июл 2018 в 9:44
18. Модифицируем предыдущую задачу: пусть теперь на один вопрос может быть несколько правильных ответов. Пользователь должен отметить один или несколько чекбоксов.

<h2>Пройди тест</h2>

<?php
$city = ['Пекин', 'Москва', 'Киев'];
$city = ['груша', 'банан', 'яблоко'];
?>
<form action="" method="GET">
<?php
echo '<p>Отметьте только города столицы</p>';
if(empty($_GET['answer1'])) {
echo '<i>Пекин</i><input type="checkbox" name="answer1[]" value="Пекин">
<i>Москва</i><input type="checkbox" name="answer1[]" value="Москва">
<i>Киев</i><input type="checkbox" name="answer1[]" value="Киев">
<i>Санкт-Питербург</i><input type="checkbox" name="answer1[] " value="Cанкт-Питербург" >
<i>Волгоград</i><input type="checkbox" name="answer1[]" value="Волгоград">';
}
if(!empty($_GET['answer1'])) {
echo testQuestion($_GET['answer1'], $city);
}

echo '<br><br>';

echo '<p>Отметьте только фрукты</p>';
if(empty($_GET['answer2'])) {
echo '<i>Груша</i><input type="checkbox" name="answer2[]" value="груша">
<i>Яблоко</i><input type="checkbox" name="answer2[]" value="яблоко">
<i>Банан</i><input type="checkbox" name="answer2[]" value="банан">
<i>Огурец</i><input type="checkbox" name="answer2[] " value="огурец" >
<i>Помидор</i><input type="checkbox" name="answer2[]" value="помидор">';
}
if(!empty($_GET['answer2'])) {
echo testQuestion($_GET['answer2'], $city);
}

?>

<br><br><input type="submit" value="проверить"></form>

<?php
function testQuestion($name, $arr) {
$num1 = count($name);
$num2 = count($arr);
$flag = true;
if($num1 == $num2) {
foreach($name as $elem) {
if(array_search($elem, $arr) === false) {
$flag = false;

}

}
if($flag === true) {
$str = '<p class="green">Ваш ответ верный</p>';
}
else {
$str = '<p class="red">Ваш ответ неверный</p>';
}
}
else $str = '<p class="red">Ваш ответ неверный</p>';
return $str;
}

?>
Нравится
*********
*********
********* 29 июл 2018 в 10:18
19. Напишите скрипт, который будет считать факториал числа. Само число вводится в инпут и после нажатия на кнопку пользователь должен увидеть результат.

<form action="" method="GET">
<input name="number">
<input type="submit" name="go" value="Нажми на кнопку, получишь результат и твоя мечта осуществится">
</form>

<?php

$number = $_GET['number'];

if(!empty($_GET['number']) and !empty($_GET['go'])) {

echo factorial($number);

}

function factorial($num) {
$result = 1;
for($i = 1; $i <= $num; $i++) {
$result *= $i;
}
return '<h2>Факториал числа '.$num.'='.$result.'</h2>';
}

?>
Нравится
*********
*********
********* 29 июл 2018 в 12:50
20. Напишите скрипт, который будет находить корни квадратного уравнения. Для этого сделайте 3 инпута, в которые будут вводиться коэффициенты уравнения.

<form action="" method="GET">
<input name="number1">
<input name="number2">
<input name="number3">
<input type="submit" name="go" value="Нажми на кнопку, получишь результат">
</form>

<?php

$a = $_GET['number1'];
$b = $_GET['number2'];
$c = $_GET['number3'];

if(!empty($_GET['number1']) and !empty($_GET['number2']) and !empty($_GET['number3'])) {
echo getRoot($a, $b, $c);
}

function getRoot($a, $b, $c) {
$discriminant = pow($b, 2) - (4 * $a * $c);
echo 'Дискриминант = ' . $discriminant.'<br>';
if($discriminant == 0) {
$x = -$b/(2*$a);
echo 'Уравнение имеет один корень x=:'.$x;
}
if($discriminant > 0) {
$x1 = (-$b + sqrt($discriminant))/2*$a;
$x2 = (-$b - sqrt($discriminant))/2*$a;
echo 'Уравнение имеет два корня: x1='.$x1.' x2='.$x2;
}
if($discriminant < 0) {
echo $x = 'уравнение не имеет корней';
}
}


?>
Нравится
*********
*********
********* 29 июл 2018 в 13:24
21. Даны 3 инпута. В них вводятся числа. Проверьте, что эти числа являются тройкой Пифагора: квадрат самого большого числа должен быть равен сумме квадратов двух остальных.

<form action="" method="GET">
<input name="number1">
<input name="number2">
<input name="number3">
<input type="submit" name="go" value="Нажми на кнопку, получишь результат">
</form>

<?php

$a = $_GET['number1'];
$b = $_GET['number2'];
$c = $_GET['number3'];

if(!empty($_GET['number1']) and !empty($_GET['number2']) and !empty($_GET['number3'])) {
echo getTrio($a, $b, $c);
}

function getTrio($a, $b, $c) {
$arr[0] = $a;
$arr[1] = $b;
$arr[2] = $c;
sort($arr);
if(pow($arr[2],2) == pow($arr[0],2) + pow($arr[1],2)) {
$str = 'Это тройка Пифагора';
}
else {
$str = 'Это не тройка Пифагора';
}
return $str;
}

?>
Нравится
*********
*********
********* 29 июл 2018 в 13:36
22. Дан инпут и кнопка. В инпут вводится число. По нажатию на кнопку выведите список делителей этого числа.

<form action="" method="GET">
<input name="number">

<input type="submit" name="go" value="Нажми на кнопку, получишь результат">
</form>

<?php

$num = $_GET['number'];

if(!empty($_GET['number'])) {
var_dump( getDivider($num));
}

function getDivider($num) {
$arr = [];
for($i=1; $i<=$num; $i++){
if($num % $i == 0){
array_push($arr, $i);
}
}
return $arr;
}

?>
Нравится
*********
*********
********* 29 июл 2018 в 15:20
23. Дан инпут и кнопка. В инпут вводится число. По нажатию на кнопку разложите число на простые множители.

<form action="" method="GET">
<input name="number">

<input type="submit" name="go" value="Результат">
</form>

<?php

$num = $_GET['number'];

if(!empty($_GET['number'])) {
var_dump( func($num));
}

function func($num) {
for($i =2; $i <= $num; $i++){
while($num % $i ==0){
$arr[] = $i;
$num /=$i;
}
}
return $arr;
}

?>
Нравится
*********
*********
********* 29 июл 2018 в 17:42
24. Даны 2 инпута и кнопка. В инпуты вводятся числа. По нажатию на кнопку выведите список общих делителей этих двух чисел.

<form action="" method="GET">
<input name="number1">
<input name="number2">

<input type="submit" name="go" value="Нажми на кнопку, получишь результат">
</form>

<?php

$num1 = $_GET['number1'];
$num2 = $_GET['number2'];

if(!empty($_GET['number1']) and !empty($_GET['number1'])) {
echo testSimpleNum($num1, $num2);
}

function testSimpleNum($num1, $num2) {
$arr1 = getDividerNum($num1);
$arr2 = getDividerNum($num2);
$arr3 = array_intersect($arr1, $arr2);
return $arr3;
}

function getDividerNum($num){
$resultArr = [];
for($i=1; $i<=$num; $i++){
if($num % $i ==0) {
array_push($resultArr, $i);
}
}
return $resultArr;
}
?>
Нравится
*********
*********
********* 30 июл 2018 в 0:17
25. Даны 2 инпута и кнопка. В инпуты вводятся числа. По нажатию на кнопку выведите наибольший общий делитель этих двух чисел.

<form action="" method="GET">
<input name="number1">
<input name="number2">

<input type="submit" name="go" value="Нажми на кнопку, получишь результат">
</form>

<?php

$num1 = $_GET['number1'];
$num2 = $_GET['number2'];

if(!empty($_GET['number1']) and !empty($_GET['number1'])) {
echo testSimpleNum($num1, $num2);
}

function testSimpleNum($num1, $num2) {
$arr1 = getDividerNum($num1);
$arr2 = getDividerNum($num2);
$arr3 = array_intersect($arr1, $arr2);
$result = max($arr3);
return $result;
}

function getDividerNum($num){
$resultArr = [];
for($i=1; $i<=$num; $i++){
if($num % $i ==0) {
array_push($resultArr, $i);
}
}
return $resultArr;
}
?>
Нравится
*********
*********
********* 30 июл 2018 в 1:39
26. Даны 2 инпута и кнопка. В инпуты вводятся числа. По нажатию на кнопку выведите наименьшее число, которое делится и на одно, и на второе из введенных чисел.

<form action="" method="GET">
<input name="number1">
<input name="number2">

<input type="submit" name="go" value="Нажми на кнопку, получишь результат">
</form>

<?php

$num1 = $_GET['number1'];
$num2 = $_GET['number2'];

if(!empty($_GET['number1']) and !empty($_GET['number1'])) {
echo func($num1, $num2);
}

function minNum($num1, $num2) {
$arr[0] = $num1;
$arr[1] = $num2;
$result = min($arr);
return $result;
}

function func($num1, $num2) {
echo $n;
for($i=minNum($num1, $num2); $i <= $num1 * $num2; $i++) {
if($i % $num1 == 0 and $i % $num2 == 0) {
$result = $i;
break;
}
}
return $result;
}

?>
Нравится
*********
*********
********* 30 июл 2018 в 2:48
27. Даны 3 селекта и кнопка. Первый селект - это дни от 1 до 31, второй селект - это месяцы от января до декабря, а третий - это годы от 1990 до 2025. С помощью этих селектов можно выбрать дату. По нажатию на кнопку выведите на экран день недели, соответствующий этой дате, например, 'воскресенье'.

<form action="" method="GET">
<select name="day"><?php selectDay();?></select>
<select name="month"><?php selectMonth();?></select>
<select name="year"><?php selectYear();?></select>
<input type="submit" name="go" value="Нажми на кнопку">
</form>

<?php

$num1 = $_GET['day'];
$num2 = $_GET['month'];
$num3 = $_GET['year'];

if(!empty($num1) and !empty($num2) and !empty($num3)) {
$str = $num1.' '.$num2.' '.$num3;
echo getWeek($str);
}

function getWeek($str) {
$day= date('w', strtotime($str));
$week = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'];
echo $week[$day];
}

function selectDay() {
for($i=1; $i<=31; $i++){
echo '<option>'.$i.'</option>';
}
}

function selectMonth() {
$months = array (1 => 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November' , 'December');
for($i=1; $i<=count($months); $i++){
echo '<option>'.$months[$i].'</option>';
}
}

function selectYear() {
for($i=1; $i<=2020; $i++){
echo '<option>'.$i.'</option>';
}
}

?>
Нравится
*********
*********
********* 30 июл 2018 в 2:48
Задачи на основы работы с базами данных SQL в PHP
Нравится
*********
Дмитрий Трепачёв
Дмитрий Трепачёв 30 июл 2018 в 16:10
Толя, +
Нравится
*********
Ответить
*********
********* 3 авг 2018 в 0:55
1. Выбрать работника с id = 3.

<?php require_once('db.php'); ?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>test</title>
<style>

</style>
</head>
<body>

<?php

$query = "SELECT * FROM workers WHERE id=3";
$getResult = mysql_query($query);
$result = mysql_fetch_assoc($getResult);
var_dump($result);

?>

</body>
</html>
Нравится
*********
*********
********* 3 авг 2018 в 18:01
2. Выбрать работников с зарплатой 1000$.
$query = "SELECT * FROM workers WHERE salary=10000";
Нравится
*********
*********
********* 3 авг 2018 в 18:02
3. Выбрать работников в возрасте 23 года.

$query = "SELECT * FROM workers WHERE age=24";
Нравится
*********
*********
********* 3 авг 2018 в 18:08
4. Выбрать работников с зарплатой более 400$.

<?php

$query = "SELECT * FROM workers WHERE salary > 400";
$getResult = mysql_query($query);
for($result = []; $str = mysql_fetch_assoc($getResult); $result[]=$str);
var_dump($result);

?>
Нравится
*********
*********
********* 3 авг 2018 в 18:11
5. Выбрать работников с зарплатой равной или большей 500$.

$query = "SELECT * FROM workers WHERE salary >= 500";
Нравится
*********
*********
********* 3 авг 2018 в 18:13
6. Выбрать работников с зарплатой НЕ равной 500$.

$query = "SELECT * FROM workers WHERE salary != 500";
Нравится
*********
*********
********* 3 авг 2018 в 18:15
7. Выбрать работников с зарплатой равной или меньшей 900$.

$query = "SELECT * FROM workers WHERE salary <= 900";
Нравится
*********
*********
********* 3 авг 2018 в 18:19
8. Узнайте зарплату и возраст Васи

$query = "SELECT salary, age FROM workers WHERE name='Вася'";
Нравится
*********
*********
********* 3 авг 2018 в 18:19
На OR и AND
Нравится
*********
*********
********* 3 авг 2018 в 18:21
9. Выбрать работников в возрасте от 25 (не включительно) до 28 лет (включительно).

$query = "SELECT * FROM workers WHERE age > 25 and age <= 28";
Нравится
*********
*********
********* 3 авг 2018 в 18:22
10. Выбрать работника Петю.

$query = "SELECT * FROM workers WHERE name='Петя'";
Нравится
*********
*********
********* 3 авг 2018 в 18:27
11. Выбрать работников Петю и Васю.

$query = "SELECT * FROM workers WHERE name='Петя' or name='Вася'";
Нравится
*********
*********
********* 3 авг 2018 в 18:28
12. Выбрать всех, кроме работника Петя.

$query = "SELECT * FROM workers WHERE name!='Павел'";
Нравится
*********
*********
********* 3 авг 2018 в 18:30
13. Выбрать всех работников в возрасте 27 лет или с зарплатой 1000$.

$query = "SELECT * FROM workers WHERE age=45 and salary=25000";
Нравится
*********
*********
********* 3 авг 2018 в 18:33
14. Выбрать всех работников в возрасте от 23 лет (включительно) до 27 лет (не включительно) или с зарплатой 1000$.

$query = "SELECT * FROM workers WHERE age >= 23 and age <= 27 or salary = 1000";
Нравится
*********
*********
********* 3 авг 2018 в 18:38
15. Выбрать всех работников в возрасте от 23 лет до 27 лет или с зарплатой от 400$ до 1000$.

$query = "SELECT * FROM workers WHERE age >= 23 and age <= 27 or salary >= 400 and salary <= 1000";
Нравится
*********
*********
********* 3 авг 2018 в 18:40
16. Выбрать всех работников в возрасте 27 лет или с зарплатой не равной 400$.

$query = "SELECT * FROM workers WHERE age = 27 or salary != 400";
Нравится
*********
*********
********* 3 авг 2018 в 18:40
На INSERT
Нравится
*********
*********
********* 3 авг 2018 в 19:05
17. Добавьте нового работника Никиту, 26 лет, зарплата 300$.

<?php
$query = "INSERT INTO workers SET name='Никита', age = 26, salary = 300";
mysql_query($query);

?>
Нравится
*********
*********
********* 3 авг 2018 в 19:12
18. Добавьте нового работника Светлану с зарплатой 1200$. Воспользуйтесь вторым синтаксисом.

<?php
$query = "INSERT INTO workers (name, age, salary) VALUES ('Светлана', 20, 1200)";
mysql_query($query);

?>
Нравится
*********
*********
********* 3 авг 2018 в 19:15
19. Добавьте двух новых работников одним запросом: Ярослава с зарплатой 1200$ и возрастом 30, Петра с зарплатой 1000$ и возрастом 31.

<?php
$query = "INSERT INTO workers (name, age, salary) VALUES ('Мира', 55, 55000), ('Валентина', 53, 30000)";
mysql_query($query);

?>
Нравится
*********
*********
********* 3 авг 2018 в 19:15
На DELETE
Нравится
*********
*********
********* 3 авг 2018 в 19:20
20. Удалите работника с id=7.

$query = "DELETE FROM workers WHERE id=7";
Нравится
*********
*********
********* 3 авг 2018 в 19:21
21. Удалите Колю.
$query = "DELETE FROM workers WHERE name='Николай'";
Нравится
*********
*********
********* 3 авг 2018 в 19:24
22. Удалите всех работников, у которых возраст 23 года.

$query = "DELETE FROM workers WHERE age=23";
Нравится
*********
*********
********* 3 авг 2018 в 19:24
На UPDATE
Нравится
*********
*********
********* 3 авг 2018 в 19:26
23. Поставьте Васе зарплату в 200$.

$query = "UPDATE workers SET salary = 200 WHERE name = 'Вася'";
Нравится
*********
*********
********* 3 авг 2018 в 19:27
24. Работнику с id=4 поставьте возраст 35 лет.

<?php require_once('db.php'); ?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>test</title>
<style>

</style>
</head>
<body>

<?php
$query = "UPDATE workers SET age=35 WHERE id=4";
mysql_query($query);

?>

</body>
</html>
Нравится
*********
*********
********* 3 авг 2018 в 19:29
25. Всем, у кого зарплата 500$ сделайте ее 700$.

<?php
$query = "UPDATE workers SET salary=700 WHERE salary=500";
mysql_query($query);

?>
Нравится
*********
*********
********* 3 авг 2018 в 19:30
26. Работникам с id больше 2 и меньше 5 включительно поставьте возраст 23.

$query = "UPDATE workers SET age = 23 WHERE id > 2 AND id <= 5";
Нравится
*********
*********
********* 3 авг 2018 в 19:31
27. Поменяйте Васю на Женю и прибавьте ему зарплату до 900$.

$query = "UPDATE workers SET name = 'Женя', salary = 900 WHERE name = 'Вася'";
Нравится
*********
*********
********* 3 авг 2018 в 19:31
Задачи на базы данных SQL в PHP
Нравится
*********
*********
********* 3 авг 2018 в 21:04
1 .Из таблицы workers достаньте первые 6 записей.

<?php require_once('db.php'); ?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>test</title>
<style>

</style>
</head>
<body>

<?php
$query = "SELECT * FROM workers WHERE id > 0 LIMIT 6 ";
$getResult = mysql_query($query);
for($result = []; $str = mysql_fetch_assoc($getResult); $result[]=$str);
var_dump($result);
?>

</body>
</html>
Нравится
*********
*********
********* 3 авг 2018 в 21:06
2. Из таблицы workers достаньте записи со вторую, 3 штуки.

<?php
$query = "SELECT * FROM workers WHERE id > 0 LIMIT 2,3 ";
$getResult = mysql_query($query);
for($result = []; $str = mysql_fetch_assoc($getResult); $result[]=$str);
var_dump($result);
?>
Нравится
*********
*********
********* 3 авг 2018 в 21:06
На ORDER BY
Нравится
*********
*********
********* 3 авг 2018 в 21:10
3. Из таблицы workers достаньте всех работников и отсортируйте их по возрастанию зарплаты.

$query = "SELECT * FROM workers WHERE id > 0 ORDER BY salary";
Нравится
*********
*********
********* 3 авг 2018 в 21:11
4. Из таблицы workers достаньте всех работников и отсортируйте их по убыванию зарплаты

$query = "SELECT * FROM workers WHERE id > 0 ORDER BY salary DESC";
Нравится
*********
*********
********* 3 авг 2018 в 21:15
5. Из таблицы workers достаньте работников со второго по шестого и отсортируйте их по возрастанию возраста.

$query = "SELECT * FROM workers WHERE id >= 2 and id <= 4 ORDER BY age";
Нравится
*********
*********
********* 3 авг 2018 в 21:15
На COUNT
Нравится
*********
*********
********* 3 авг 2018 в 21:25
6. В таблице workers подсчитайте всех работников.

<?php
$query = "SELECT COUNT(*) as count FROM workers WHERE id>0";
$getResult = mysql_query($query);
for($result = []; $str = mysql_fetch_assoc($getResult); $result[]=$str);
var_dump($result);
?>
Нравится
*********
*********
********* 3 авг 2018 в 21:26
7. В таблице workers подсчитайте всех работников c зарплатой 300$.

<?php
$query = "SELECT COUNT(*) as count FROM workers WHERE salary=300";
$getResult = mysql_query($query);
for($result = []; $str = mysql_fetch_assoc($getResult); $result[]=$str);
var_dump($result);
?>
Нравится
*********
*********
********* 3 авг 2018 в 21:31
8. В таблице pages найти строки, в которых фамилия автора заканчивается на "ов".

$query = "SELECT * FROM pages WHERE athor LIKE '%ов'";
Нравится
*********
*********
********* 3 авг 2018 в 21:33
9. В таблице pages найти строки, в которых есть слово "элемент" (искать только по колонке article).

$query = "SELECT * FROM workers WHERE article LIKE 'элемент'";
Нравится
*********
*********
********* 3 авг 2018 в 21:35
10. В таблице workers найти строки, в которых возраст работника начинается с числа 3, а далее идет только одна цифра.

$query = "SELECT * FROM workers WHERE age LIKE '3_'";
Нравится
*********
*********
********* 3 авг 2018 в 21:38
11. В таблице workers найти строки, в которых имя работника заканчивается на "я".

$query = "SELECT * FROM workers WHERE name LIKE '%я'";
Нравится
*********
*********
********* 3 авг 2018 в 21:38
Практика PHP для новичков
Нравится
*********
*********
********* 3 авг 2018 в 22:04
1. Дана таблица с работниками. Реализуйте ее вывод на экран в следующем виде:

<?php require_once('db.php'); ?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>test</title>
<style>
td, th {
border: 1px solid black;
width: 100px;
height: 30px;
text-align: center;
}
</style>
</head>
<body>

<?php
$query = "SELECT * FROM workers WHERE id > 0";
$getResult = mysql_query($query);
for($result = []; $str = mysql_fetch_assoc($getResult); $result[]=$str);

function func($result) {
$str = '';
for($i=0; $i<count($result); $i++) {
$str .= '<tr><td>'.$result[$i][id].'</td><td>'.$result[$i][name].'</td><td>'.$result[$i][age].'</td><td>'.$result[$i][salary].'</td></tr>';
}
return $str;
}
?>

<table>
<tr><th>id</th><th>name</th><th>age</th><th>salary</th></tr>
<?php echo func($result); ?>
</table>

</body>
</html>
Нравится
*********
*********
********* 3 авг 2018 в 23:50
2. Сделайте в таблице всех работников ссылку 'удалить'. По нажатию на эту ссылку из БД должна удаляться запись с этим id (его следует передавать через GET-параметр del_id).

<?php require_once('db.php'); ?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>test</title>
<style>
td, th {
border: 1px solid black;
width: 100px;
height: 30px;
text-align: center;
}
a {
text-decoration: none;

}
</style>
</head>
<body>

<?php
$query = "SELECT * FROM workers WHERE id > 0";
$getResult = mysql_query($query);
for($result = []; $str = mysql_fetch_assoc($getResult); $result[]=$str);

function func($result) {
$str = '';
for($i=0; $i<count($result); $i++) {
$str .= '<tr><td>'.$result[$i][id].'</td><td>'.$result[$i][name].'</td><td>'.$result[$i][age].'</td><td>'.$result[$i][salary].'</td><td><a href="?del_id='.$result[$i]['id'].'">Удалить</a></td></tr>';
}
return $str;

}

$deleteId = $_GET['del_id'];
$query2 = "DELETE FROM workers WHERE id = $deleteId";
mysql_query($query2);

?>

<table>
<tr><th>id</th><th>name</th><th>age</th><th>salary</th><th>Удаление</th></tr>
<?php echo func($result); ?>
</table>

</body>
</html>
Нравится
*********
*********
********* 4 авг 2018 в 9:28
3. Сделайте форму добавления нового работника.

<?php require_once('db.php'); ?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>test</title>
<style>
td, th {
border: 1px solid black;
width: 100px;
height: 30px;
text-align: center;
}
a {
text-decoration: none;

}
</style>
</head>
<body>

<?php
$query = "SELECT * FROM workers WHERE id > 0";
$getResult = mysql_query($query);
for($result = []; $str = mysql_fetch_assoc($getResult); $result[]=$str);

function func($result) {
$str = '';
for($i=0; $i<count($result); $i++) {
$str .= '<tr><td>'.$result[$i][id].'</td><td>'.$result[$i][name].'</td><td>'.$result[$i][age].'</td><td>'.$result[$i][salary].'</td><td><a href="?del_id='.$result[$i]['id'].'">Удалить</a></td></tr>';
}
return $str;

}

$deleteId = $_GET['del_id'];
$query2 = "DELETE FROM workers WHERE id = $deleteId";
mysql_query($query2);

if(!empty($_GET['nameUser'])){
$nameUser=$_GET['nameUser'];
$ageUser=$_GET['ageUser'];
$salaryUser=$_GET['salaryUser'];
$query3 = "INSERT INTO workers (name, age, salary) VALUES('$nameUser', $ageUser, $salaryUser)";
mysql_query($query3);
}

?>

<table>
<tr><th>id</th><th>name</th><th>age</th><th>salary</th><th>Удаление</th></tr>
<?php echo func($result); ?>
</table>

<br>
<h2>Добавить нового сотрудника</h2>
<form>
<input name="nameUser" placeholder="Имя">
<input name="ageUser" placeholder="Возраст">
<input name="salaryUser" placeholder="Зарплата">
<input type="submit" value="Добавить в штат">
</form>

</body>
</html>
Нравится
*********
*********
********* 4 авг 2018 в 11:52
4. Сделайте колонку 'редактировать' для каждого работника. Там должна быть ссылка, по переходу на которую появится страница с формой редактирования работника.

<?php require_once('db.php'); ?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>test</title>
<style>
td, th {
border: 1px solid black;
width: 100px;
height: 30px;
text-align: center;
}
a {
text-decoration: none;

}
</style>
</head>
<body>

<?php
$query = "SELECT * FROM workers WHERE id > 0";
$getResult = mysql_query($query);
for($result = []; $str = mysql_fetch_assoc($getResult); $result[]=$str);

function func($result) {
$str = '';
for($i=0; $i<count($result); $i++) {
$str .= '<tr><td>'.$result[$i][id].'</td><td>'.$result[$i][name].'</td><td>'.$result[$i][age].'</td><td>'.$result[$i][salary].'</td><td><a href="?del_id='.$result[$i]['id'].'">Удалить</a></td><td><a href="test2.php?update_id='.$result[$i][id].'">Редактировать</a></td></tr>';
}
return $str;

}

$deleteId = $_GET['del_id'];
$query2 = "DELETE FROM workers WHERE id = $deleteId";
mysql_query($query2);

if(!empty($_GET['nameUser'])){
$nameUser=$_GET['nameUser'];
$ageUser=$_GET['ageUser'];
$salaryUser=$_GET['salaryUser'];
$query3 = "INSERT INTO workers (name, age, salary) VALUES('$nameUser', $ageUser, $salaryUser)";
mysql_query($query3);
}

?>

<table>
<tr><th>id</th><th>name</th><th>age</th><th>salary</th><th>Удаление</th><th>Редактировать</th></tr>
<?php echo func($result); ?>
</table>

<br>
<h2>Добавить нового сотрудника</h2>
<form>
<input name="nameUser" placeholder="Имя">
<input name="ageUser" placeholder="Возраст">
<input name="salaryUser" placeholder="Зарплата">
<input type="submit" value="Сохранить">
</form>

</body>
</html>
Нравится
*********
*********
********* 4 авг 2018 в 11:52
вторая страница для редактирования

<?php require_once('db.php'); ?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>test</title>
<style>
</style>
</head>
<body>

<?php

$idUser = $_GET['idUser'];
$nameUser=$_GET['nameUser'];
$ageUser=$_GET['ageUser'];
$salaryUser=$_GET['salaryUser'];

if(!empty($_GET['idUser'])){
$query = "UPDATE workers SET name='".$nameUser."', age=".$ageUser.", salary=".$salaryUser." WHERE id=".$idUser."";
mysql_query($query) ;

}

?>

<h2>Редактировать данные сотрудника</h2>

<form action="" method="GET">
<input name="idUser" placeholder="Введите идентификатор" value="<?php echo $idUser ?>">
<input name="nameUser" placeholder="Имя">
<input name="ageUser" placeholder="Возраст">
<input name="salaryUser" placeholder="Зарплата">
<input type="submit" value="Сохранить">
</form>

</body>
</html>
Нравится
*********
*********
********* 4 авг 2018 в 12:45
5. Над таблицей с работниками сделайте инпут, в который вводится зарплата. По нажатию на кнопку следует вывести таблицу работников с введенной зарплатой.

<?php require_once('db.php'); ?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>test</title>
<style>
td, th {
border: 1px solid black;
width: 100px;
height: 30px;
text-align: center;
}
a {
text-decoration: none;

}
</style>
</head>
<body>

<?php
$query = "SELECT * FROM workers WHERE id > 0";
$getResult = mysql_query($query);
for($result = []; $str = mysql_fetch_assoc($getResult); $result[]=$str);

function func($result) {
$str = '';
for($i=0; $i<count($result); $i++) {
$str .= '<tr><td>'.$result[$i][id].'</td><td>'.$result[$i][name].'</td><td>'.$result[$i][age].'</td><td>'.$result[$i][salary].'</td><td><a href="?del_id='.$result[$i]['id'].'">Удалить</a></td><td><a href="test2.php?update_id='.$result[$i][id].'">Редактировать</a></td></tr>';
}
return $str;

}

$deleteId = $_GET['del_id'];
$query2 = "DELETE FROM workers WHERE id = $deleteId";
mysql_query($query2);

if(!empty($_GET['nameUser'])){
$nameUser=$_GET['nameUser'];
$ageUser=$_GET['ageUser'];
$salaryUser=$_GET['salaryUser'];
$query3 = "INSERT INTO workers (name, age, salary) VALUES('$nameUser', $ageUser, $salaryUser)";
mysql_query($query3);
}

?>

<form action="" method="GET">
<p>Вывести работников с зарплатой <input name="getSalary" placeholder="зарплата"> <input type="submit" value="вывести"></p>
</form>

<?php
$salary = $_GET['getSalary'];
if(!empty($_GET['getSalary'])){
$query_1 = "SELECT * FROM workers WHERE salary=$salary";
$getSalaryUser = mysql_query($query_1);
for($result1 = []; $str1 = mysql_fetch_assoc($getSalaryUser); $result1[]=$str1);
?>

<table><tr><th>id</th><th>name</th><th>age</th><th>salary</th></tr>;
<?php echo func1($result1);?>
</table>;

<?php
}

function func1($result1) {
$str = '';
for($i=0; $i<count($result1); $i++) {
$str .= '<tr><td>'.$result1[$i][id].'</td><td>'.$result1[$i][name].'</td><td>'.$result1[$i][age].'</td><td>'.$result1[$i][salary].'</td></tr>';
}
return $str;

}

?>

<table>
<tr><th>id</th><th>name</th><th>age</th><th>salary</th><th>Удаление</th><th>Редактировать</th></tr>
<?php echo func($result); ?>
</table>

<br>
<h2>Добавить нового сотрудника</h2>
<form>
<input name="nameUser" placeholder="Имя">
<input name="ageUser" placeholder="Возраст">
<input name="salaryUser" placeholder="Зарплата">
<input type="submit" value="Сохранить">
</form>

</body>
Нравится
*********
*********
********* 4 авг 2018 в 12:46
6. ПОВТОРЯЕТСЯ ЗАДАЧА
Нравится
*********
*********
********* 4 авг 2018 в 14:23
7. Сделайте колонку 'удалить', в которой для каждого работника будет стоять чекбокс. Под таблицей сделайте кнопку, по нажатию на которую будут удалены те работники, для которых чекбокс был отмечен.

<?php require_once('db.php'); ?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>test</title>
<style>
td, th {
border: 1px solid black;
width: 100px;
height: 30px;
text-align: center;
}
a {
text-decoration: none;

}
</style>
</head>
<body>

<?php
$query = "SELECT * FROM workers WHERE id > 0";
$getResult = mysql_query($query);
for($result = []; $str = mysql_fetch_assoc($getResult); $result[]=$str);

function func($result) {
$str = '';
for($i=0; $i<count($result); $i++) {
$str .= '<tr><td>'.$result[$i][id].'</td><td>'.$result[$i][name].'</td><td>'.$result[$i][age].'</td><td>'.$result[$i][salary].'</td><td><input type="checkbox" name="checkbox[]" value="'.$result[$i][id].'"></td><td><a href="test2.php?update_id='.$result[$i][id].'">Редактировать</a></td></tr>';
}
return $str;

}

$deleteId = $_GET['del_id'];
$query2 = "DELETE FROM workers WHERE id = $deleteId";
mysql_query($query2);

if(!empty($_GET['nameUser'])){
$nameUser=$_GET['nameUser'];
$ageUser=$_GET['ageUser'];
$salaryUser=$_GET['salaryUser'];
$query3 = "INSERT INTO workers (name, age, salary) VALUES('$nameUser', $ageUser, $salaryUser)";
mysql_query($query3);
}

?>

<form action="" method="GET">
<p>Вывести работников с зарплатой <input name="getSalary" placeholder="зарплата"> <input type="submit" value="вывести"></p>
</form>

<?php
$salary = $_GET['getSalary'];
if(!empty($_GET['getSalary'])){
$query_1 = "SELECT * FROM workers WHERE salary=$salary";
$getSalaryUser = mysql_query($query_1);
for($result1 = []; $str1 = mysql_fetch_assoc($getSalaryUser); $result1[]=$str1);
?>

<table><tr><th>id</th><th>name</th><th>age</th><th>salary</th></tr>;
<?php echo func1($result1);?>
</table>;

<?php
}

function func1($result1) {
$str = '';
for($i=0; $i<count($result1); $i++) {
$str .= '<tr><td>'.$result1[$i][id].'</td><td>'.$result1[$i][name].'</td><td>'.$result1[$i][age].'</td><td>'.$result1[$i][salary].'</td></tr>';
}
return $str;

}

?>
Нравится
*********
*********
********* 4 авг 2018 в 14:24
<form action="" method="GET">
<table>
<tr><th>id</th><th>name</th><th>age</th><th>salary</th><th>Удаление</th><th>Редактировать</th></tr>
<?php echo func($result); ?>
</table><br><br>
<input type="submit" value="удалить отмечанных">
</form>

<?php

$arrCheckbox=$_GET['checkbox'];

if(!empty($arrCheckbox)){
for($i=0; $i<count($arrCheckbox); $i++) {
$query_2 = "DELETE FROM workers WHERE id=$arrCheckbox[$i]";
mysql_query($query_2);
}
}
?>

<br>
<h2>Добавить нового сотрудника</h2>
<form>
<input name="nameUser" placeholder="Имя">
<input name="ageUser" placeholder="Возраст">
<input name="salaryUser" placeholder="Зарплата">
<input type="submit" value="Сохранить">
</form>

</body>
</html>
Нравится
*********
*********
********* 4 авг 2018 в 14:25
Минипроекты PHP для новичков
Нравится
*********
*********
********* 4 авг 2018 в 14:25
Урок 1
Реализуйте гостевую книгу, как показано в следующем образце:
Урок 2
Реализуйте гостевую книгу с пагинацией, как показано в следующем образце:

http://www.anatolio87test.ru/recall/recall.php?page=0
index.php
3 КБ
Нравится
*********
*********
********* 5 авг 2018 в 23:11
Урок 4
Реализуйте органайзер, как показано в следующем образце:

http://www.anatolio87test.ru/organaz/organizer.php

Здесь проблемка, после сохранения записи и обновления страницы, всплывает окно "подтвердите повторную отправку формы" Я пока не знаю как с этим бороться...
index.php
3 КБ
Нравится
*********
Дмитрий Трепачёв
Дмитрий Трепачёв 6 авг 2018 в 17:40
Толя, +
Нравится
*********
Ответить
*********
********* 11 авг 2018 в 7:58
Урок 3. Реализуйте записную книгу

http://www.anatolio87test.ru/book/pop.php
notes_php.zip
4 КБ
Нравится
*********
*********
********* 11 авг 2018 в 8:00
Задачи на регулярные выражения PHP. Часть 1
Нравится
*********
*********
********* 11 авг 2018 в 14:21
На '.', символы

1. Дана строка 'ahb acb aeb aeeb adcb axeb'. Напишите регулярку, которая найдет строки ahb, acb, aeb по шаблону: буква 'a', любой символ, буква 'b'.

<?php

echo preg_replace('#a.b#', '!', 'ahb acb aeb aeeb adcb axeb');

?>
Нравится
*********
*********
********* 11 авг 2018 в 14:22
2. Дана строка 'aba aca aea abba adca abea'. Напишите регулярку, которая найдет строки abba adca abea по шаблону: буква 'a', 2 любых символа, буква 'a'.

<?php

echo preg_replace('#a..a#', '!', 'aba aca aea abba adca abea');

?>
Нравится
*********
*********
********* 11 авг 2018 в 14:25
3. Дана строка 'aba aca aea abba adca abea'. Напишите регулярку, которая найдет строки abba и abea, не захватив adca.

<?php

echo preg_replace('#ab.a#', '!', 'aba aca aea abba adca abea');

?>
Нравится
*********
*********
********* 11 авг 2018 в 14:28
На '+', '*', '?', ()

4. Дана строка 'aa aba abba abbba abca abea'. Напишите регулярку, которая найдет строки aba, abba, abbba по шаблону: буква 'a', буква 'b' любое количество раз, буква 'a'.

<?php

echo preg_replace('#ab+a#', '!', 'aa aba abba abbba abca abea');

?>
Нравится
*********
*********
********* 11 авг 2018 в 14:32
5. Дана строка 'aa aba abba abbba abca abea'. Напишите регулярку, которая найдет строки aa, aba, abba, abbba по шаблону: буква 'a', буква 'b' любое количество раз (в том числе ниодного раза), буква 'a'.

<?php

echo preg_replace('#ab*a#', '!', 'aa aba abba abbba abca abea');

?>
Нравится
*********
*********
********* 11 авг 2018 в 14:34
6. Дана строка 'aa aba abba abbba abca abea'. Напишите регулярку, которая найдет строки aa, aba по шаблону: буква 'a', буква 'b' один раз или ни одного, буква 'a'.

<?php

echo preg_replace('#ab?a#', '!', 'aa aba abba abbba abca abea');

?>
Нравится
*********
*********
********* 11 авг 2018 в 14:38
7. Дана строка 'ab abab abab abababab abea'. Напишите регулярку, которая найдет строки по шаблону: строка 'ab' повторяется 1 или более раз.

<?php

echo preg_replace('#(ab)+#', '!', 'ab abab abab abababab abea');

?>
Нравится
*********
*********
********* 11 авг 2018 в 14:40
На экранировку

8. Дана строка 'a.a aba aea'. Напишите регулярку, которая найдет строку a.a, не захватив остальные.

<?php

echo preg_replace('#(a\.a)+#', '!', 'a.a aba aea');

?>
Нравится
*********
*********
********* 11 авг 2018 в 14:41
9. Дана строка '2+3 223 2223'. Напишите регулярку, которая найдет строку 2+3, не захватив остальные.

<?php

echo preg_replace('#(2\+3)+#', '!', '2+3 223 2223');

?>
Нравится
*********
*********
********* 11 авг 2018 в 14:44
10. Дана строка '23 2+3 2++3 2+++3 345 567'. Напишите регулярку, которая найдет строки 2+3, 2++3, 2+++3, не захватив остальные (+ может быть любое количество).

<?php

echo preg_replace('#(2\++3)+#', '!', '23 2+3 2++3 2+++3 345 567');

?>
Нравится
*********
*********
********* 11 авг 2018 в 14:46
11. Дана строка '23 2+3 2++3 2+++3 445 677'. Напишите регулярку, которая найдет строки 23, 2+3, 2++3, 2+++3, не захватив остальные.

<?php

echo preg_replace('#(2\+*3)+#', '!', '23 2+3 2++3 2+++3 445 677');

?>
Нравится
*********
*********
********* 11 авг 2018 в 14:49
12. Дана строка '*+ *q+ *qq+ *qqq+ *qqq qqq+'. Напишите регулярку, которая найдет строки *q+, *qq+, *qqq+, не захватив остальные.

<?php

echo preg_replace('#\*q+\+#', '!', '*+ *q+ *qq+ *qqq+ *qqq qqq+');

?>
Нравится
*********
*********
********* 11 авг 2018 в 14:50
13. Дана строка '*+ *q+ *qq+ *qqq+ *qqq qqq+'. Напишите регулярку, которая найдет строки *+, *q+, *qq+, *qqq+, не захватив остальные.

<?php

echo preg_replace('#\*q*\+#', '!', '*+ *q+ *qq+ *qqq+ *qqq qqq+');

?>
Нравится
*********
*********
********* 11 авг 2018 в 14:53
На жадность

14. Дана строка 'aba accca azzza wwwwa'. Напишите регулярку, которая найдет все строки по краям которых стоят буквы 'a', и заменит каждую из них на '!'. Между буквами a может быть любой символ (кроме a).

<?php

echo preg_replace('#a.+?a#', '!', 'aba accca azzza wwwwa');

?>
Нравится
*********
*********
********* 11 авг 2018 в 14:53
Задачи на регулярные выражения PHP. Часть 2
Нравится
*********
*********
********* 11 авг 2018 в 16:17
На {}

1. Дана строка 'aa aba abba abbba abbbba abbbbba'. Напишите регулярку, которая найдет строки abba, abbba, abbbba и только их.

<?php

echo preg_replace('#ab{2,4}a#', '!', 'aa aba abba abbba abbbba abbbbba');

?>
Нравится
*********
*********
********* 11 авг 2018 в 16:19
2. Дана строка 'aa aba abba abbba abbbba abbbbba'. Напишите регулярку, которая найдет строки вида aba, в которых 'b' встречается менее 3-х раз (включительно).

<?php

echo preg_replace('#ab{0,3}a#', '!', 'aa aba abba abbba abbbba abbbbba');

?>
Нравится
*********
*********
********* 11 авг 2018 в 16:20
3. Дана строка 'aa aba abba abbba abbbba abbbbba'. Напишите регулярку, которая найдет строки вида aba, в которых 'b' встречается более 4-х раз (включительно).
<?php

echo preg_replace('#ab{4,}a#', '!', 'aa aba abba abbba abbbba abbbbba');

?>
Нравится
*********
*********
********* 11 авг 2018 в 16:22
На \s, \S, \w, \W, \d, \D
4. Дана строка 'a1a a2a a3a a4a a5a aba aca'. Напишите регулярку, которая найдет строки, в которых по краям стоят буквы 'a', а между ними одна цифра.

<?php

echo preg_replace('#a\da#', '!', 'a1a a2a a3a a4a a5a aba aca');

?>
Нравится
*********
*********
********* 11 авг 2018 в 16:23
5. Дана строка 'a1a a22a a333a a4444a a55555a aba aca'. Напишите регулярку, которая найдет строки, в которых по краям стоят буквы 'a', а между ними любое количество цифр.

<?php

echo preg_replace('#a\d+a#', '!', 'a1a a22a a333a a4444a a55555a aba aca');

?>
Нравится
*********
*********
********* 11 авг 2018 в 16:24
6. Дана строка 'aa a1a a22a a333a a4444a a55555a aba aca'. Напишите регулярку, которая найдет строки, в которых по краям стоят буквы 'a', а между ними любое количество цифр (в том числе и ноль цифр, то есть строка 'aa').

<?php

echo preg_replace('#a\d*a#', '!', 'aa a1a a22a a333a a4444a a55555a aba aca');

?>
Нравится
*********
*********
********* 11 авг 2018 в 16:25
7. Дана строка 'avb a1b a2b a3b a4b a5b abb acb'. Напишите регулярку, которая найдет строки следующего вида: по краям стоят буквы 'a' и 'b', а между ними - не число.

<?php

echo preg_replace('#a\Db#', '!', 'avb a1b a2b a3b a4b a5b abb acb');

?>
Нравится
*********
*********
********* 11 авг 2018 в 16:26
8. Дана строка 'ave a#b a2b a$b a4b a5b a-b acb'. Напишите регулярку, которая найдет строки следующего вида: по краям стоят буквы 'a' и 'b', а между ними - не буква и не цифра.

<?php

echo preg_replace('#a\Wb#', '!', 'ave a#b a2b a$b a4b a5b a-b acb');

?>
Нравится
*********
*********
********* 11 авг 2018 в 16:27
9. Дана строка 'ave a#a a2a a$a a4a a5a a-a aca'. Напишите регулярку, которая заменит все пробелы на '!'.

<?php

echo preg_replace('#\s#', '!', 'ave a#a a2a a$a a4a a5a a-a aca');

?>
Нравится
*********
*********
********* 11 авг 2018 в 16:30
На [], '^' - не, [a-zA-Z], кириллицу

10. Дана строка 'aba aea aca aza axa'. Напишите регулярку, которая найдет строки aba, aea, axa, не затронув остальных.

<?php

echo preg_replace('#a[bex]a#', '!', 'aba aea aca aza axa');

?>
Нравится
*********
*********
********* 11 авг 2018 в 17:05
11. Дана строка 'aba aea aca aza axa a.a a+a a*a'. Напишите регулярку, которая найдет строки aba, a.a, a+a, a*a, не затронув остальных.

<?php

echo preg_replace('#a[b\.\+\*]a#', '!', 'aba aea aca aza axa a.a a+a a*a');

?>
Нравится
*********
*********
********* 11 авг 2018 в 17:07
12. Напишите регулярку, которая найдет строки следующего вида: по краям стоят буквы 'a', а между ними - цифра от 3-х до 7-ми.

<?php

echo preg_replace('#a[3-7]a#', '!', 'aba a5a a8a aza a2a a.a a+a a*a');

?>
Нравится
*********
*********
********* 11 авг 2018 в 17:09
13. Напишите регулярку, которая найдет строки следующего вида: по краям стоят буквы 'a', а между ними - буква от a до g.

<?php

echo preg_replace('#a[a-g]a#', '!', 'aba aba aca ada aya aza asa a*a');

?>
Нравится
*********
*********
********* 11 авг 2018 в 17:10
14. Напишите регулярку, которая найдет строки следующего вида: по краям стоят буквы 'a', а между ними - буква от a до f и от j до z.

<?php

echo preg_replace('#a[a-fj-z]a#', '!', 'aba aba aca ada aya aza asa ama');

?>
Нравится
*********
*********
********* 11 авг 2018 в 17:12
15. Напишите регулярку, которая найдет строки следующего вида: по краям стоят буквы 'a', а между ними - буква от a до f и от A до Z.

<?php

echo preg_replace('#a[a-fA-Z]a#', '!', 'aba aZa aca ada aya aza aVa ama');

?>
Нравится
*********
*********
********* 11 авг 2018 в 17:19
16. Дана строка 'aba aea aca aza axa a-a a#a'. Напишите регулярку, которая найдет строки следующего вида: по краям стоят буквы 'a', а между ними - не 'e' и не 'x'.

<?php

echo preg_replace('#a([^ex\s])a#', '!', 'aba aea aca aza axa a-a a#a');

?>
Нравится
*********
*********
********* 11 авг 2018 в 17:23
17. Дана строка 'wйw wяw wёw wqw'. Напишите регулярку, которая найдет строки следующего вида: по краям стоят буквы 'w', а между ними - буква кириллицы.

<?php

echo preg_replace('#w[а-яё]w#u', '!', 'wйw wяw wёw wqw');

?>
Нравится
*********
*********
********* 11 авг 2018 в 17:25
На [a-zA-Z] и квантификаторы

18. Дана строка 'aAXa aeffa aGha aza ax23a a3sSa'. Напишите регулярку, которая найдет строки следующего вида: по краям стоят буквы 'a', а между ними - маленькие латинские буквы, не затронув остальных.

<?php

echo preg_replace('#a[a-z]+a#', '!', 'aAXa aeffa aGha aza ax23a a3sSa');

?>
Нравится
*********
*********
********* 11 авг 2018 в 17:26
19. Дана строка 'aAXa aeffa aGha aza ax23a a3sSa'. Напишите регулярку, которая найдет строки следующего вида: по краям стоят буквы 'a', а между ними - маленькие и большие латинские буквы, не затронув остальных.

<?php

echo preg_replace('#a[a-zA-Z]+a#', '!', 'aAXa aeffa aGha aza ax23a a3sSa');

?>
Нравится
*********
*********
********* 11 авг 2018 в 17:28
20. Дана строка 'aAXa aeffa aGha aza ax23a a3sSa'. Напишите регулярку, которая найдет строки следующего вида: по краям стоят буквы 'a', а между ними - маленькие латинские буквы и цифры, не затронув остальных.

<?php

echo preg_replace('#a[a-z\d]+a#', '!', 'aAXa aeffa aGha aza ax23a a3sSa');

?>
Нравится
*********
*********
********* 11 авг 2018 в 17:30
21. Дана строка 'ааа ббб ёёё ззз ййй ААА БББ ЁЁЁ ЗЗЗ ЙЙЙ'. Напишите регулярку, которая найдет все слова по шаблону: любая кириллическая буква любое количество раз.

<?php

echo preg_replace('#[а-яА-ЯЁё]+#u', '!', 'ааа ббб ёёё ззз ййй ААА БББ ЁЁЁ ЗЗЗ ЙЙЙ');

?>
Нравится
*********
*********
********* 11 авг 2018 в 17:50
На '^', '$'

22. Дана строка 'aaa aaa aaa'. Напишите регулярку, которая заменит первое 'aaa' на '!'.

<?php

echo preg_replace('#^aaa#u', '!', 'aaa aaa aaa');

?>
Нравится
*********
*********
********* 11 авг 2018 в 17:52
23. Дана строка 'aaa aaa aaa'. Напишите регулярку, которая заменит последнее 'aaa' на '!'.

<?php

echo preg_replace('#aaa$#', '!', 'aaa aaa aaa');

?>
Нравится
*********
*********
********* 11 авг 2018 в 17:54
На '|'

24. Дана строка 'aeeea aeea aea axa axxa axxxa'. Напишите регулярку, которая найдет строки следующего вида: по краям стоят буквы 'a', а между ними - или буква 'e' любое количество раз или по краям стоят буквы 'a', а между ними - буква 'x' любое количество раз

<?php

echo preg_replace('#ae+a|ax+a#', '!', 'aeeea aeea aea axa axxa axxxa');

?>
Нравится
*********
*********
********* 11 авг 2018 в 17:55
25. Дана строка 'aeeea aeea aea axa axxa axxxa'. Напишите регулярку, которая найдет строки следующего вида: по краям стоят буквы 'a', а между ними - или буква 'e' два раза или буква 'x' любое количество раз.

<?php

echo preg_replace('#aeea|ax+a#', '!', 'aeeea aeea aea axa axxa axxxa');

?>
Нравится
*********
*********
********* 11 авг 2018 в 18:04
На \b, \B

26. Дана строка 'xbx aca aea abba adca abea'. Напишите регулярку, которая вокруг каждого слова вставит '!' (получится '!xbx! !aca! !aea! !abba! !adca! !abea!').

<?php

echo preg_replace('#\b#', '!', 'xbx aca aea abba adca abea');

?>
Нравится
*********
*********
********* 11 авг 2018 в 18:07
27. На обратный слеш \

Дана строка 'a\a abc'. Напишите регулярку, которая заменит строку 'a\a' на '!'.

<?php

echo preg_replace('#a\\\\a#', '!', 'a\a abc');

?>
Нравится
*********
*********
********* 11 авг 2018 в 18:11
28. Дана строка 'a\a a\\a a\\\a'. Напишите регулярку, которая заменит строку 'a\\\a' на '!'.

<?php

echo preg_replace('#a(\\\\){2}?a#', '!', 'a\a a\\a a\\\a');

?>
Нравится
*********
*********
********* 11 авг 2018 в 18:20
29. На экранировку посложнее

Дана строка 'bbb /aaa\ bbb /ccc\'. Напишите регулярку, которая найдет содержимое всех конструкций /...\ и заменит их на '!'.

<?php

echo preg_replace('#\/\w+\\\\#', '!', 'bbb /aaa\ bbb /ccc\\');

?>
Нравится
*********
*********
********* 11 авг 2018 в 18:24
30. Дана строка 'bbb <b> hello </b>, <b> world </b> eee'. Напишите регулярку, которая найдет содержимое тегов <b> и заменит их на '!'.

<?php

echo preg_replace('#<b>.+?</b>#', '!', 'bbb <b> hello </b>, <b> world </b> eee');

?>
Нравится
*********
*********
********* 11 авг 2018 в 18:24
Задачи на регулярные выражения PHP. Часть 3
Нравится
*********
*********
********* 11 авг 2018 в 20:43
На карманы при замене

1. Дана строка 'aaa@bbb eee7@kkk'. Напишите регулярку, которая найдет строки по шаблону: любое количество букв и цифр, символ @, любое количество букв и цифр и поменяет местами то, что стоит до @ на то, что стоит после нее. Например, aaa@bbb должно превратиться в bbb@aaa.

<?php

echo preg_replace('#(\w+)@(\w+)#', '$2@$1', 'aaa@bbb eee7@kkk');

?>
Нравится
*********
*********
********* 11 авг 2018 в 20:46
2. Дана строка вида 'a1b2c3'. Напишите регулярку, которая найдет все цифры и удвоит их количество таким образом: 'a11b22c33' (то есть рядом с каждой цифрой напишет такую же).

<?php

echo preg_replace('#(\d)#', '$1$1', 'a1b2c3');

?>
Нравится
*********
*********
********* 11 авг 2018 в 20:50
На карманы в самой регулярке
3. Дана строка 'aae xxz 33a'. Найдите все места, где есть два одинаковых идущих подряд символа и замените их на '!'.

<?php

echo preg_replace('#(\w)\1#', '!', 'aae xxz 33a');

?>
Нравится
*********
*********
********* 11 авг 2018 в 20:51
4. Дана строка 'aaa bcd xxx efg'. Найдите строки, состоящие из одинаковых символов (это будет aaa xxx).

<?php

echo preg_replace('#(\w)+\1#', '!', 'aaa bcd xxx efg');

?>
Нравится
*********
*********
********* 11 авг 2018 в 21:00
5. С помощью preg_match определите, что переданная строка является емэйлом. Примеры емэйлов для тестирования mymail@mail.ru, my.mail@mail.ru, my-mail@mail.ru, my_mail@mail.ru, mail@mail.com, mail@mail.by, mail@yandex.ru.

<?php

echo preg_match('#^[a-z._-]+@[a-z]+\.[a-z]{2,3}$#', 'mymail@mail.ru');

?>
Нравится
*********
*********
********* 11 авг 2018 в 21:09
6. Дана строка с текстом, в котором могут быть емейлы. С помощью preg_match_all найдите все емэйлы.

<?php
$str = 'А я и не знал, mymail@mail.ru что любовь может быть, my.mail@mail.ru, жестокa, my-mail@mail.ru, my_mail@mail.ru, mail@mail.com, mail@mail.by, mail@yandex.ru, а сердце таким одиноким...';

echo preg_match_all('#[a-z._-]+@[a-z]+\.[a-z]{2,3}#', $str, $matches);

var_dump($matches);

?>
Нравится
*********
*********
********* 11 авг 2018 в 21:13
7. С помощью preg_match определите, что переданная строка является доменом. Примеры доменов: site.ru, site.com, my-site123.com.

<?php

echo preg_match_all('#^[\w-]+\.[a-z]{2,3}$#', 'my-site123.com');

?>
Нравится
*********
*********
********* 11 авг 2018 в 22:31
8. С помощью preg_match определите, что переданная строка является доменом 3-го уровня. Примеры доменов: hello.site.ru, hello.site.com, hello.my-site.com.

<?php

echo preg_match('#^[\w-]+\.[\w-]+\.[a-z]{2,3}$#', 'hello.site.com');

?>
Нравится
*********
*********
********* 11 авг 2018 в 22:33
9. С помощью preg_match определите, что переданная строка является доменом, название которого начинается с http. Примеры доменов: http://site.ru, http://site.com.

<?php

echo preg_match('#^http://[\w-]+\.[a-z]{2,3}$#', 'http://site.ru');

?>
Нравится
*********
*********
********* 11 авг 2018 в 22:36
10. С помощью preg_match определите, что переданная строка является доменом вида http://site.ru. Протокол может быть как http, так и https.

<?php

echo preg_match('#^http(s)?://[\w-]+\.[a-z]{2,3}$#', 'https://site.ru');

?>
Нравится
*********
*********
********* 11 авг 2018 в 22:37
11. С помощью preg_match определите, что переданная строка является доменом. Протокол может быть как http, так и https. Домен может быть со слешем в конце: http://site.ru, http://site.ru/, https://site.ru, https://site.ru/.

<?php

echo preg_match('#^http(s)?://[\w-]+\.[a-z]{2,3}(/)?$#', 'https://site.ru/');

?>
Нравится
*********
*********
********* 11 авг 2018 в 22:40
12. С помощью preg_match определите, что переданная строка начинается с http или с https

<?php

echo preg_match('#^http(s)?#', 'https://site.ru/');

?>
Нравится
*********
*********
********* 11 авг 2018 в 22:42
13. С помощью preg_match определите, что переданная строка заканчивается расширением txt, html или php.

<?php

echo preg_match('#html|php|txt$#', 'site.txt');

?>
Нравится
*********
*********
********* 11 авг 2018 в 22:42
14. С помощью preg_match определите, что переданная строка заканчивается расширением jpg или jpeg.

<?php

echo preg_match('#jpeg|jpg$#', 'site.jpg');

?>
Нравится
*********
*********
********* 11 авг 2018 в 22:44
15. С помощью preg_match узнайте является ли строка числом, длиной до 12 цифр.

<?php

echo preg_match('#^\d{0,12}$#', '1234567891234');

?>
Нравится
*********
*********
********* 11 авг 2018 в 22:57
16. Дана строка с буквами, пробелами и цифрами. Найдите сумму всех чисел из данной строки.

<?php

preg_match_all('#(\d)#', '1s2 d 3 45', $match);
echo array_sum($match[0]);

?>
Нравится
*********
*********
********* 11 авг 2018 в 23:02
Задачи на preg_replace

17. С помощью preg_replace преобразуйте дату в формате '31-12-2014' в '2014.12.31'.

<?php

echo preg_replace('#(\d+)-(\d+)-(\d+)#', '$3.$2.$1', '31-12-2014');

?>
Нравится
*********
*********
********* 11 авг 2018 в 23:10
18. С помощью preg_replace замените в строке домены вида http://site.ru, http://site.com на <a href="http://site.ru">site.ru</a>.

<?php

echo preg_replace('#(https?://[a-z-.]+\.[a-z]{2,3})#', '<i><a href="$1">site.ru</a></i>', 'https://vk.com');

?>
Нравится
*********
*********
********* 11 авг 2018 в 23:10
Задачи на регулярные выражения PHP. Часть 4
Нравится
*********
*********
********* 12 авг 2018 в 0:30
На позитивный и негативный просмотр

1. С помощью позитивного и негативного просмотра найдите все строки по шаблону буква b, затем 3 буквы a и поменяйте 3 буквы a на знак '!'. То есть из 'baaa' нужно сделать 'b!'.

<?php

echo preg_replace('#(?<=b)aaa#', '!', 'baaa caaa kaaa');

?>
Нравится
*********
*********
********* 12 авг 2018 в 0:33
2. С помощью позитивного и негативного просмотра найдите все строки по шаблону любая буква, но не b, затем 3 буквы a и поменяйте 3 буквы a на знак '!'. То есть из, к примеру, 'waaa' нужно сделать 'w!', а 'baaa' не поменяется.

<?php

echo preg_replace('#(?<!b)aaa#', '!', 'baaa caaa kaaa');

?>
Нравится
*********
*********
********* 12 авг 2018 в 0:36
3. С помощью позитивного и негативного просмотра найдите все строки по шаблону 3 буквы a, затем буква b и поменяйте 3 буквы a на знак '!'. То есть из 'aaab' нужно сделать '!b'.

<?php

echo preg_replace('#aaa(?=b)#', '!', 'aaav aaab kaaa');

?>
Нравится
*********
*********
********* 12 авг 2018 в 0:38
4. С помощью позитивного и негативного просмотра найдите все строки по шаблону 3 буквы a, затем любая буква, но не b и поменяйте 3 буквы a на знак '!'. То есть из, к примеру, 'aaaw' нужно сделать '!w', а 'aaab' не поменяется.

<?php

echo preg_replace('#^aaa(?!b)#', '!', 'aaav aaab kaaa');

?>
Нравится
*********
*********
********* 12 авг 2018 в 0:43
5. Дана строка со звездочками 'aaa * bbb ** eee * **'. Замените на '!' только одиночные звездочки, но не двойные.

<?php

echo preg_replace('#\s\*(?=\s)#', '!', 'aaa * bbb ** eee * **');

?>
Нравится
*********
*********
********* 12 авг 2018 в 0:45
6. Дана строка со звездочками 'aaa * bbb ** eee *** kkk ****'. Замените на '!' только двойные звездочки, но не одиночные или тройные и более.

<?php

echo preg_replace('#(?<!\*)\*{2}(?!\*)#', '!', 'aaa * bbb ** eee *** kkk ****');

?>
Нравится
*********
*********
********* 12 авг 2018 в 0:48
7. С помощью позитивного и негативного просмотра найдите две одинаковые идущие подряд буквы и первую поменяйте на '!'.

<?php

echo preg_replace('#(\w)(?=\1)#', '!', 'aa a * bb b ** ee e *** k kk ****');

?>
Нравится
*********
*********
********* 12 авг 2018 в 0:52
8. С помощью позитивного и негативного просмотра найдите две одинаковые идущие подряд буквы и вторую поменяйте на '!'.

<?php

echo preg_replace('#(?<=([a-z]))\1#', '!', 'aa a * bb b ** ee e *** k kk ****');

?>
Нравится
*********
*********
********* 12 авг 2018 в 0:59
На preg_replace_callback

9. Дана строка с целыми числами. С помощью регулярки преобразуйте строку так, чтобы вместо этих чисел стояли их квадраты.

<?php

echo preg_replace_callback ('#(\d)#', 'func', '54548654');

function func($match) {
foreach($match as $elem) {
return $elem * $elem;
}
}

?>
Нравится
*********
*********
********* 12 авг 2018 в 1:15
10. Дана строка с целыми числами. Найдите числа, стоящие в кавычках и увеличьте их в два раза. Пример: из строки 2aaa'3'bbb'4' сделаем строку 2aaa'6'bbb'8'.

<?php

echo preg_replace_callback ("#(?<=\')(\d)(?=\')#", 'func', "2aaa'3'bbb'4'" );

function func($match) {
foreach($match as $elem) {
return $elem[0] * 2;
}
}

?>
Нравится
*********
*********
********* 12 авг 2018 в 21:58
Урок 5

Реализуйте форум, как показано ниже.

http://www.anatolio87test.ru/php-forum/main_forum.php

много недочетов, в том числе пролонгацию не сделал, а так в основном работает...
forum.zip
4 КБ
Нравится
*********
*********
********* 12 авг 2018 в 22:00
Задачи на сессии PHP
Нравится
*********
Дмитрий Трепачёв
Дмитрий Трепачёв 13 авг 2018 в 21:55
Толя,
много недочетов, в том числе пролонгацию не сделал, а так в основном работает...

пойдет)
Нравится
*********
Ответить
Дмитрий Трепачёв
Дмитрий Трепачёв 13 авг 2018 в 21:55
Толя, +
Нравится
*********
Ответить
*********
********* 25 авг 2018 в 19:47
Задачи на сессии PHP
Нравится
*********
*********
********* 25 авг 2018 в 19:48
1. Сделайте две страницы: index.php и test.php. При заходе на index.php спросите с помощью формы страну пользователя, запишите ее в сессию. При заходе на test.php выведите страну пользователя.

<?php

if(!empty($_GET['country'])){
session_start();
$_SESSION['country'] = $_GET['country'];
}

?>
.
.
.
.
.
.

<?php
session_start();
if(!empty($_SESSION['country'])){
echo $_SESSION['country'];
}

?>
Нравится
*********
*********
********* 25 авг 2018 в 20:28
2. Запишите в сессию время захода пользователя на сайт. При обновлении страницы выводите сколько секунд назад пользователь зашел на сайт.

<?php

session_start();

if(!empty($_SESSION['time'])) {
$result = time() - $_SESSION['time'];
}

else {
$_SESSION['time'] = time();
}

if(!empty($result)) {
echo 'Последний раз, вы заходили: '.$result.' секунд назад';
$_SESSION['time'] = time();
}

?>
Нравится
*********
*********
********* 25 авг 2018 в 20:51
3. Спросите у пользователя email с помощью формы. Затем сделайте так, чтобы в другой форме (поля: имя, фамилия, пароль, email) при ее открытии поле email было автоматически заполнено.

<?php require_once('db.php'); ?>
<?php

if(!empty($_GET['email'])) {
session_start();
$_SESSION['email'] = $_GET['email'];
}

?>

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">

<title>test1</title>
<style>

</style>
</head>
<body>

<form action="" method="GET">
<input type="text" name="email" placeholder="введите почту">
<input type="submit">
</form>


</body>
</html>
Нравится
*********
*********
********* 25 авг 2018 в 20:51
<?php require_once('db.php'); ?>
<?php
session_start();
if(!empty($_SESSION['email'])){
$result = $_SESSION['email'];
}

?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>test2</title>
<style>
</style>
</head>
<body>
<form action="" method="GET">
<input type="text" name="email" placeholder="введите почту" value="<?php echo $result ?>">
<input type="text" name="name" placeholder="Имя">
<input type="text" name="surname" placeholder="Фамилия">
<input type="submit">
</form>

</body>
</html>
Нравится
*********
*********
********* 25 авг 2018 в 21:15
4. Сделайте счетчик обновления страницы пользователем. Данные храните в сессии. Скрипт должен выводить на экран количество обновлений. При первом заходе на страницу он должен вывести сообщение о том, что вы еще не обновляли страницу.

<?php require_once('db.php'); ?>
<?php
session_start();
if(!empty($_SESSION['count'])) {
$_SESSION['count'] = $_SESSION['count']+1;
echo $_SESSION['count'];
}
else {
$_SESSION['count'] = 0;
echo 'вы еще не обновляли страницу';
}

?>
Нравится
*********
*********
********* 25 авг 2018 в 21:29
5. Сделайте две страницы: index.php и form.php. При заходе на index.php спросите с помощью формы город и возраст пользователя. На form.php сделайте форму с полями 'Имя', 'Возраст', 'Город'. При заходе на form.php сделайте так, чтобы поля 'Возраст' и 'Город' уже были заполнены.

<?php require_once('db.php'); ?>
<?php
session_start();
if(!empty($_GET['age'])){
$_SESSION['age'] = $_GET['age'];
$_SESSION['city'] = $_GET['city'];
}

?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>test2</title>
<style>
</style>
</head>
<body>
<form action="" method="GET">
<input type="text" name="city" placeholder="Город">
<input type="text" name="age" placeholder="Возраст">
<input type="submit">
</form>

</body>
</html>
Нравится
*********
*********
********* 25 авг 2018 в 21:29
<?php require_once('db.php'); ?>
<?php
session_start();
if(!empty($_SESSION['city']) and !empty($_SESSION['age'])) {
$age = $_SESSION['age'];
$city = $_SESSION['city'];
}
?>

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">

<title>test1</title>
<style>

</style>
</head>
<body>

<form action="" method="GET">
<input type="text" name="name" placeholder="Имя" >
<input type="text" name="age" placeholder="Возраст" value="<?php echo $age ?>">
<input type="text" name="city" placeholder="Город" value="<?php echo $city ?>">
<input type="submit">
</form>


</body>
</html>
Нравится
*********
*********
********* 25 авг 2018 в 21:40
6. Добавьте в предыдущую задачу страницу logout.php. При заходе на нее разрушайте сессию пользователя.

<?php require_once('db.php'); ?>
<?php
session_start();
session_destroy();
echo 'данные удалены';
?>
Нравится
*********
*********
********* 26 авг 2018 в 3:07
7. Реализуйте тест по принципу 'одна страница сайта - одна задача'. Запомните результаты ответов пользователя в сессию.

Страница test1

<?php
require_once('db.php');
session_start();
?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">

<title>test1</title>
<style>

</style>
</head>
<body>

<form action="" method="GET">
<input type="submit" value="Начать тест" name="click">

</form>
<?php
if(empty($_SESSION['answer1']) and !empty($_GET['click'])){
require_once('test1.php');
}

if(empty($_SESSION['answer2']) and !empty($_GET['click1'])){
require_once('test2.php');
}

if(empty($_SESSION['answer3']) and !empty($_GET['click2'])){
require_once('test3.php');
}

if(!empty($_GET['click3'])) {
require_once('test5.php');
}

?>

</body>
</html>
Нравится
*********
*********
********* 26 авг 2018 в 3:08
Страница test2

<h1>Столица России</h1>
<form action="" method="GET">
<input type="radio" name="answer1" value="Москва"><p>Москва</p>
<input type="radio" name="answer1" value="Санкт-Питербург"><p>Санкт-Питербург</p>
<input type="radio" name="answer1" value="Екатеринбург"><p>Екатеринбург</p>
<input type="submit" name="click1">
</form>
Нравится
*********
*********
********* 26 авг 2018 в 3:08
Страница test3

<?php
require_once('db.php');
if(!empty($_GET['answer1'])) {
session_start();
$_SESSION['answer1'] = $_GET['answer1'];
}
?>

<h1>Столица Китая</h1>
<form action="" method="GET">
<input type="radio" name="answer2" value="Пекин"><p>Пекин</p>
<input type="radio" name="answer2" value="Тайланд"><p>Тайланд</p>
<input type="radio" name="answer2" value="Банкок"><p>Банкок</p>
<input type="submit" name="click2">
</form>
Нравится
*********
*********
********* 26 авг 2018 в 3:08
Страница test4

<?php
if(!empty($_GET['answer2'])) {
session_start();
$_SESSION['answer2'] = $_GET['answer2'];
}

?>

<h1>Столица Украины</h1>
<form action="" method="GET">
<input type="radio" name="answer3" value="Киев"><p>Киев</p>
<input type="radio" name="answer3" value="Львов"><p>Львов</p>
<input type="radio" name="answer3" value="Одесса"><p>Одесса</p>
<input type="submit" value="показать результаты" name="click3">
</form>
Нравится
*********
*********
********* 26 авг 2018 в 3:08
Страница test5

<?php
if(!empty($_GET['answer3'])) {
session_start();
$_SESSION['answer3'] = $_GET['answer3'];
}


echo '<h1 style="color: green">Ваши ответы</h1>';
echo 'Столица России: '.$_SESSION['answer1'];
echo '<br>';
echo 'Столица Китая: '.$_SESSION['answer2'];
echo '<br>';
echo 'Столица Украины: '.$_SESSION['answer3'];

?>
Нравится
*********
*********
********* 26 авг 2018 в 3:11
Задачи на cookie (куки) в PHP
Нравится
*********
*********
********* 26 авг 2018 в 3:42
1. Сделайте две страницы: index.php и test.php. При заходе на index.php спросите с помощью формы страну пользователя, запишите ее в куки с именем country. При заходе на test.php выведите страну пользователя.

<?php
require_once('db.php');
$country = $_GET['country'];
setcookie("country", $country);
?>

2 страница

<?php
require_once('db.php');
echo $_COOKIE['country'];
?>
Нравится
*********
*********
********* 26 авг 2018 в 3:50
2. Удалите куку с именем country.

<?php
require_once('db.php');
setcookie("country", "", time());
echo 'данные удалены';
?>
Нравится
*********
*********
********* 26 авг 2018 в 3:59
3. Установите куку с именем age. Запишите туда случайное число от 10 до 70 (с помощью mt_rand). Сделайте так, чтобы эта кука установилась на 1 час, на 3 часа, на 1 день, на год, на 10 лет, до конца текущего дня, до конца текущего года.

<?php
require_once('db.php');
$age = mt_rand(10, 70);
setcookie("age", $age, time() + 60*60);
echo $_COOKIE['age'];
?>
Нравится
*********
*********
********* 26 авг 2018 в 6:01
4. Напишите оболочку над cookie. Оболочка должна представлять собой набор функций: сохранение куки, удаление куки, редактирование куки.

<?php
require_once('db.php');

if(!empty($_GET['addC'])) {
if(!empty($_GET['nameCook']) and !empty($_GET['valueCook']) and !empty($_GET['timeCook'])) {
$nameAdd = $_GET['nameCook'];
$valueAdd = $_GET['valueCook'];
$timeAdd = $_GET['timeCook'];
addCookie($nameAdd, $valueAdd, $timeAdd);
}
else {
echo 'вы ввели не все поля';
}
}

if(!empty($_GET['changeC'])) {
if(!empty($_GET['nameCook']) and !empty($_GET['valueCook']) and !empty($_GET['timeCook'])) {
$nameChange = $_GET['nameCook'];
$valueChange = $_GET['valueCook'];
$timeChange = $_GET['timeCook'];
if($_COOKIE[$nameChange]) {
addCookie($nameChange, $valueChange, $timeChange);
}
else {
echo 'такого cookie не существует';
}
}
else {
echo 'вы ввели не все поля';
}
}

if(!empty($_GET['deleteC'])) {
if(!empty($_GET['nameCook'])) {
$nameDelete = $_GET['nameCook'];
if($_COOKIE[$nameDelete]) {
deleteCookie($nameC);
}
else {
echo 'такого cookie не существует';
}
}

else {
echo 'введите Имя cookie';
}

}

function addCookie($nameCook, $valueCook, $timeCook) {
setcookie($nameCook, $valueCook, time() + $timeCook);
}

function deleteCookie($nameCook) {
$nameCook = $_GET['nameCook'];
setcookie($nameCook, "", time());
}

?>

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">

<title>test1</title>
<style>

</style>
</head>
<body>
<form action="" method="GET">
<input name="nameCook" placeholder="введите имя cookie">
<input name="valueCook" placeholder="введите значение cookie">
<input name="timeCook" placeholder="введите время cookie">
<input type="submit" value="Добавить cookie" name="addC">
<input type="submit" value="Изменить cookie" name="changeC">
<input type="submit" value="Удалить cookie" name="deleteC">
</form>
</body>
</html>
Нравится
*********
*********
********* 26 авг 2018 в 6:03
5. Сделайте на сайте 5 картинок с товарами. Реализуйте корзину. Под каждой картинкой должна быть ссылка 'Положить в корзину'. По нажатию на эту ссылку этот товар должен занестись в корзину (сессия), также должна увеличиться общая сумма, которую должен заплатить пользователь (сумма также должна быть указана под картинками с товарами).

<?php
require_once('db.php');
session_start();

if(!empty($_GET['fruit'])){
$fruit = $_GET['fruit'];
$sum = $_GET['sum'];
if(!$_SESSION[$fruit]) {
$_SESSION['result'] = $_SESSION['result'] + $sum;
}
if(empty($_SESSION[$fruit])) {
$_SESSION[$fruit] = $sum;
}
}
if(!empty($_SESSION)) {
$result = count($_SESSION) - 1;
echo 'товаров в корзине: '.$result.'<br>';
echo 'на общую сумму: '.$_SESSION['result'].' рублей';
}
?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">

<title>test1</title>
<style>
#wrap {
min-width: 900px;
margin: 0 auto;
text-align: center;
}
.div {
display: inline-block;
}
</style>
</head>
<body>
<div id="wrap">
<h1>Наш асортимент</h1>
<div class="div"><img src="aplle.jpg"><p><a href="test1.php?fruit=aplle&sum=50">В корзину </a></p><p>50р.</p></div>

<div class="div"><img src="pear.jpg"><p><a href="test1.php?fruit=pear&sum=100">В корзину</a></p><p>100р.</p></div>

<div class="div"><img src="quince.jpg"><p><a href="test1.php?fruit=quince&sum=150">В корзину</a></p><p>150р.</p></div>
</div>
</body>
</html>
Нравится
*********
*********
********* 26 авг 2018 в 8:55
6. Сделайте счетчик посещения сайта посетителем. Каждый раз, заходя на сайт, он должен видеть надпись: 'Вы посетили наш сайт % раз!'.

<?php
if(!empty($_COOKIE['count'])) {
$result = $_COOKIE['count'] + 1;
setcookie("count", $result, time() + 3600);
echo 'Вы посетили наш сайт '.$result.' раз!';
}
else {
setcookie("count", 1, time() + 3600);
echo 'Добро пожаловать на наш сайт!';
}
?>
Нравится
*********
*********
********* 26 авг 2018 в 9:14
7. Покажите пользователю баннер с кнопкой 'Не показывать больше!'. Если он нажмет на эту кнопку - не показывайте ему баннер в течении месяца.

<?php
if(!empty($_GET['closed'])) {
setcookie("closed", "выкл", time() + 3600);
}
?>

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">

<title>test1</title>
<style>
#text {
padding: 15px;
width: 300px;
height: 400px;
font-size: 35px;
background: orange;
}
</style>
</head>
<body>
<?php if(empty($_COOKIE['closed'])) { ?>
<div id="wrap">
<div id="text">Потомственная гадалка, разберусь в чужом коде, избавлю от чужих куки, поставлю оберег от взлома тел. 8909-9-9-99 </div><br>
<form action="" method="GET">
<input type="submit" name="slosed" value="убрать рекламу">
</form>
</div>
<?php } ?>
</body>
</html>
Нравится
*********
*********
********* 26 авг 2018 в 9:50
8. Запомните дату последнего посещения сайта пользователем. При заходе на сайт напишите ему, сколько дней он не был на вашем сайте.

<?php
$time = time();
if(!empty($_COOKIE['time'])) {
$result = $time - $_COOKIE['time'];
echo 'Вы не заходили на сайт: '.floor($result/60/60/24 ).' дней';
}
else {
setcookie('time', $time, time() + 3600 * 24 * 30);
}
?>
Нравится
*********
*********
********* 26 авг 2018 в 10:40
9. Спросите дату рождения пользователя. При следующем заходе на сайт напишите сколько дней осталось до его дня рождения. Если сегодня день рождения пользователя - поздравьте его!

<?php require_once('db.php'); ?>
<?php
if(!empty($_GET['birth'])) {
$arrBirth = explode('.', $_GET['birth']);
$year = date('Y', time());
$time = mktime(0, 0, 0, $arrBirth[1], $arrBirth[0], $year);

setcookie('timer', $time, time() + 3600);
$result = $_COOKIE['timer'];
if($result < time()) {
$timer = mktime(0, 0, 0, $arrBirth[1], $arrBirth[0], $year + 1) - time();
}
if($result > time()) {
$timer = $result - time();
}
if(floor($result/60/60/24) == floor(time()/60/60/24)){
echo 'С днем рождения!';
}
else {
echo 'До вашего дня рождения, осталось: '. floor($timer/60/60/24) .' дней';
}
}

?>

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">

<title>test1</title>
<style>

</style>
</head>
<body>
<?php if(empty($_COOKIE['timer'])) { ?>
<form action="" method="GET">
<input type="text" name="birth" placeholder="dd.mm.yyyy">
<input type="submit">
</form>
<?php } ?>

</body>
</html>
Нравится
*********
*********
********* 26 авг 2018 в 11:54
10. Реализуйте выбор дизайна сайта пользователем. Сделайте несколько дизайнов сайта. Пользователь может выбрать один из дизайнов с помощью выпадающего списка. Этот выбор будет сохранен в куки и пользователь, заходя на сайт, всегда будет видеть один и тот же дизайн.

<?php require_once('db.php'); ?>
<?php
if(!empty($_GET['style'])) {
$style = $_GET['style'];
setcookie('style', $style, time() + 3600 * 60 * 31);
if($_COOKIE) {
$result = $_COOKIE['style'];
}

}
?>

<link rel="stylesheet" href="<?php echo $result; ?>.css">

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">

<title>test1</title>
<style>

</style>
</head>
<body>
<h1>Выберите тему оформления</h1>
<form action="" method="GET">
<select name="style">
<option value="gray">50 оттенков серого</option>
<option value="children">Детская неожиданность</option>
<option value="bigSize">Для слабовидящих</option>
</select>
<input type="submit" value="Применить стили" name="click">
</form>
<div>
<h1>Брат2</h1>
<p>Участвуя в программе на телевидении, Данила Багров встречает своих друзей по Чечне. Одного из них внезапно убивают. Данила знает, что у того были неприятности из-за брата-хоккеиста в Америке. Данила должен разобраться. Он вылетает в Америку и для компании берёт с собой брата. Теперь его фотография ходит по рукам русской и американской мафии. </p>
</div>
</body>
</html>
Нравится
*********
*********
********* 26 авг 2018 в 12:30
Задачи на авторизацию через файлы
Нравится
*********
*********
********* 27 авг 2018 в 5:36
1. Сделайте так, чтобы при авторизации нужно было вводить не только пароль, но и логин. Логин отличается от пароля тем, что показывается открыто (а не звездочками) и в файле также хранится открыто.

<?php require_once('db.php'); ?>
<?php
$loginUser = 'user';
$passwordUser = 'b59c67bf196a4758191e42f76670ceba';

if(!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser'])) {

if($_REQUEST['loginUser'] == $loginUser and $passwordUser == md5($_REQUEST['passwordUser'])) {
echo 'авторизация прошла успешно!';
}

else {
if($_REQUEST['loginUser'] != $loginUser or $passwordUser != md5($_REQUEST['passwordUser'])) {
echo 'неправильный логин или пароль!';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser"placeholder="введите пароль">
<input type="submit">
</form>
<?php
}
}

}
else {
if(!empty($_REQUEST['loginUser']) or !empty($_REQUEST['passwordUser'])) {
echo 'введите все поля'
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser"placeholder="введите пароль">
<input type="submit">
</form>
<?php
}
if(empty($_REQUEST['loginUser']) and empty($_REQUEST['passwordUser'])) {
echo 'ЗАПОЛНИТЕ ФОРМУ';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser"placeholder="введите пароль">
<input type="submit">
</form>
<?php
}
}

?>
Нравится
*********
*********
********* 27 авг 2018 в 5:47
2. Сделайте так, чтобы при авторизации нужно было вводить два пароля.

<?php require_once('db.php'); ?>
<?php
$loginUser = 'user';
$passwordUser = 'b59c67bf196a4758191e42f76670ceba';

if(!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser1']) and !empty($_REQUEST['passwordUser2'])) {

if($_REQUEST['loginUser'] == $loginUser and $passwordUser == md5($_REQUEST['passwordUser1']) and $passwordUser == md5($_REQUEST['passwordUser2'])) {
echo 'авторизация прошла успешно!';
}

else {
if($_REQUEST['loginUser'] != $loginUser or $passwordUser != md5($_REQUEST['passwordUser1']) or $passwordUser != md5($_REQUEST['passwordUser2'])) {
echo 'неправильный логин или пароль!';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="password" name="passwordUser2"placeholder="повторите пароль">
<input type="submit">
</form>
<?php
}
}

}
else {
if(!empty($_REQUEST['loginUser']) or !empty($_REQUEST['passwordUser1']) or !empty($_REQUEST['passwordUser2'])) {
echo 'введите все поля'
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="password" name="passwordUser2"placeholder="повторите пароль">
<input type="submit">
</form>
<?php
}
if(empty($_REQUEST['loginUser']) and empty($_REQUEST['passwordUser1']) and empty($_REQUEST['passwordUser2'])) {
echo 'ЗАПОЛНИТЕ ФОРМУ';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="password" name="passwordUser2"placeholder="повторите пароль">
<input type="submit">
</form>
<?php
}
}

?>
Нравится
*********
*********
********* 27 авг 2018 в 6:43
3. Придумайте и реализуйте свой алгоритм хеширования. У нас был просто md5 от пароля, но можно делать различные комбинации, например: md5($login.$password) или md5($login.md5($password)).

<?php
echo md5('*'.md5($password).md5($login).'*');
?>
Нравится
*********
*********
********* 27 авг 2018 в 6:54
4. Сделайте так, чтобы при авторизации нужно было вводить логин, пароль и длинную кодовую строку (осмысленный длинный текст).

<?php require_once('db.php'); ?>
<?php
$loginUser = 'user';
$passwordUser = 'b59c67bf196a4758191e42f76670ceba';
$codStr = 'ахтунг';

if(!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser1']) and !empty($_REQUEST['passwordUser2']) and !empty($_REQUEST['codStr'])) {

if($_REQUEST['loginUser'] == $loginUser and $passwordUser == md5($_REQUEST['passwordUser1']) and $passwordUser == md5($_REQUEST['passwordUser2']) and $codStr == $_REQUEST['codStr']) {
echo 'авторизация прошла успешно!';
}

else {
if($_REQUEST['loginUser'] != $loginUser or $passwordUser != md5($_REQUEST['passwordUser1']) or $passwordUser != md5($_REQUEST['passwordUser2']) or $codStr == $_REQUEST['codStr']) {
echo 'неправильный логин или пароль!';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="password" name="passwordUser2"placeholder="повторите пароль">
<input type="text" name="codStr"placeholder="Введите кодовое слово">
<input type="submit">
</form>
<?php
}
}

}
else {
if(!empty($_REQUEST['loginUser']) or !empty($_REQUEST['passwordUser1']) or !empty($_REQUEST['passwordUser2']) or !empty($_REQUEST['codStr'])) {
echo 'введите все поля'
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="password" name="passwordUser2"placeholder="повторите пароль">
<input type="text" name="codStr"placeholder="Введите кодовое слово">
<input type="submit">
</form>
<?php
}
if(empty($_REQUEST['loginUser']) and empty($_REQUEST['passwordUser1']) and empty($_REQUEST['passwordUser2']) and empty($_REQUEST['codStr'])) {
echo 'ЗАПОЛНИТЕ ФОРМУ';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="password" name="passwordUser2"placeholder="повторите пароль">
<input type="text" name="codStr"placeholder="Введите кодовое слово">
<input type="submit">
</form>
<?php
}
}

?>
Нравится
*********
*********
********* 27 авг 2018 в 8:49
5. Сделайте двойной тайный пароль. Конструкция должна работать так: при вводе правильного пароля сайт все равно пишет, что пароль неправильный, но ждет от вас второго пароля. То есть авторизация происходит при введении двух правильных паролей подряд. Если после первого пароля введен неправильный, а затем правильный - авторизации не происходит.

<?php require_once('db.php'); ?>
<?php

$loginUser = 'user';
$passwordUser = 'b59c67bf196a4758191e42f76670ceba';

if((!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser1'])) or (!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser2']))) {

if($_REQUEST['loginUser'] == $loginUser and $passwordUser == md5($_REQUEST['passwordUser1']) and empty($_REQUEST['passwordUser2'])) {
echo 'неправильный пароль, попробуйте ввести еще раз'
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser2" placeholder="введите пароль">
<input type="submit">
</form>
<?php
}
else {
if(!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser1'])){
if($_REQUEST['loginUser'] != $loginUser or $passwordUser != md5($_REQUEST['passwordUser1'])) {
echo 'неправильный логин или пароль!';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="submit">
</form>
<?php
}
}
}

if(!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser2']) and empty($_REQUEST['passwordUser1'])) {
if($_REQUEST['loginUser'] == $loginUser and md5($_REQUEST['passwordUser2']) == $passwordUser) {
echo 'авторизация прошла успешно!';
}

else {
if($_REQUEST['loginUser'] != $loginUser or $passwordUser != md5($_REQUEST['passwordUser2'])) {
echo 'неправильный логин или пароль!';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="submit">
</form>
<?php
}
}
}

}
else {
if(!empty($_REQUEST['loginUser']) or !empty($_REQUEST['passwordUser1'])) {
echo 'введите все поля'
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="submit">
</form>
<?php
}

}

if(empty($_REQUEST['loginUser']) and empty($_REQUEST['passwordUser1'])) {
echo 'ЗАПОЛНИТЕ ФОРМУ';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="submit">
</form>
<?php
}
?>
Нравится
*********
Дмитрий Трепачёв
Дмитрий Трепачёв 27 авг 2018 в 13:54
Толя, +
Нравится
*********
Ответить
*********
********* 27 авг 2018 в 20:57
6. Сделайте авторизацию по паролю, при условии определенного ip пользователя. Подсказка: ip пользователя лежит здесь $_SERVER['REMOTE_ADDR'].

<?php require_once('db.php'); ?>
<?php

$loginUser = 'user';
$passwordUser = 'b59c67bf196a4758191e42f76670ceba';
$ipUser = '195.91.216.73';

if((!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser1'])) or (!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser2']) )) {

if($_REQUEST['loginUser'] == $loginUser and $passwordUser == md5($_REQUEST['passwordUser1']) and $_SERVER['REMOTE_ADDR'] == $ipUser and empty($_REQUEST['passwordUser2'])) {
echo 'неправильный пароль, попробуйте ввести еще раз'
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser2" placeholder="введите пароль">
<input type="submit">
</form>
<?php
}
else {
if(!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser1'])){
if($_REQUEST['loginUser'] != $loginUser or $passwordUser != md5($_REQUEST['passwordUser1']) or $_SERVER['REMOTE_ADDR'] != $ipUser) {
echo 'неправильный логин или пароль!';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="submit">
</form>
<?php
}
}
}

if(!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser2']) and empty($_REQUEST['passwordUser1'])) {
if($_REQUEST['loginUser'] == $loginUser and md5($_REQUEST['passwordUser2']) == $passwordUser) {
echo 'авторизация прошла успешно!';
}

else {
if($_REQUEST['loginUser'] != $loginUser or $passwordUser != md5($_REQUEST['passwordUser2'])) {
echo 'неправильный логин или пароль!';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="submit">
</form>
<?php
}
}
}

}
else {
if(!empty($_REQUEST['loginUser']) or !empty($_REQUEST['passwordUser1'])) {
echo 'введите все поля'
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="submit">
</form>
<?php
}

}

if(empty($_REQUEST['loginUser']) and empty($_REQUEST['passwordUser1'])) {
echo 'ЗАПОЛНИТЕ ФОРМУ';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="submit">
</form>
<?php
}
?>
Нравится
*********
*********
********* 27 авг 2018 в 21:09
7. Сделайте авторизацию по паролю, при условии определенного браузера пользователя. Подсказка: браузер пользователя лежит здесь $_SERVER['HTTP_USER_AGENT'].

<?php require_once('db.php'); ?>
<?php

$loginUser = 'user';
$passwordUser = 'b59c67bf196a4758191e42f76670ceba';
$browser = 'Mozilla';
echo $_SERVER['HTTP_USER_AGENT'];

if((!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser1'])) or (!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser2']) )) {

if($_REQUEST['loginUser'] == $loginUser and $passwordUser == md5($_REQUEST['passwordUser1']) and substr($_SERVER['HTTP_USER_AGENT'], 0, 7) == $browser and empty($_REQUEST['passwordUser2'])) {
echo 'неправильный пароль, попробуйте ввести еще раз'
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser2" placeholder="введите пароль">
<input type="submit">
</form>
<?php
}
else {
if(!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser1'])){
if($_REQUEST['loginUser'] != $loginUser or $passwordUser != md5($_REQUEST['passwordUser1']) or substr($_SERVER['HTTP_USER_AGENT'], 0, 7) != $browser) {
echo 'неправильный логин или пароль!';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="submit">
</form>
<?php
}
}
}

if(!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser2']) and empty($_REQUEST['passwordUser1'])) {
if($_REQUEST['loginUser'] == $loginUser and md5($_REQUEST['passwordUser2']) == $passwordUser) {
echo 'авторизация прошла успешно!';
}

else {
if($_REQUEST['loginUser'] != $loginUser or $passwordUser != md5($_REQUEST['passwordUser2'])) {
echo 'неправильный логин или пароль!';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="submit">
</form>
<?php
}
}
}

}
else {
if(!empty($_REQUEST['loginUser']) or !empty($_REQUEST['passwordUser1'])) {
echo 'введите все поля'
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="submit">
</form>
<?php
}

}

if(empty($_REQUEST['loginUser']) and empty($_REQUEST['passwordUser1'])) {
echo 'ЗАПОЛНИТЕ ФОРМУ';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="submit">
</form>
<?php
}
?>
Нравится
*********
*********
********* 27 авг 2018 в 21:09
Задачи на авторизацию через базы данных
Нравится
*********
*********
********* 30 авг 2018 в 5:57
1. Сделайте авторизацию по таблице со следующими полями: имя, фамилия, email (+логин, пароль и другое, что нужно). Все задачи ниже относятся к данной таблице, если не сказано иное.

2. Сделайте так, чтобы все данные из таблицы хранились в сессии.

<?php require_once('db.php'); ?>
<?php
session_start();
if(!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser1']) and !empty($_REQUEST['passwordUser2']) and !empty($_REQUEST['codStr'])) {

$query = 'SELECT*FROM user WHERE id>0';
$result = mysql_query($query);
$user = mysql_fetch_assoc($result) or die(mysql_error());
$loginUser = $user['login'];
$passwordUser = $user['password'];
$codStr = $user['codStr'];

if($_REQUEST['loginUser'] == $loginUser and $passwordUser == md5($_REQUEST['passwordUser1']) and $passwordUser == md5($_REQUEST['passwordUser2']) and $codStr == $_REQUEST['codStr']) {
session_start();
$_SESSION['start'] = true;
$_SESSION['name'] = $user['name'];
$_SESSION['surname'] = $user['surname'];
$_SESSION['mail'] = $user['mail'];
echo 'авторизация прошла успешно!';
}

else {
if($_REQUEST['loginUser'] != $loginUser or $passwordUser != md5($_REQUEST['passwordUser1']) or $passwordUser != md5($_REQUEST['passwordUser2']) or $codStr != $_REQUEST['codStr']) {
echo 'неправильный логин или пароль!';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="password" name="passwordUser2"placeholder="повторите пароль">
<input type="text" name="codStr"placeholder="Введите кодовое слово">
<input type="submit">
</form>
<?php
}
}

}
Нравится
*********
*********
********* 30 авг 2018 в 5:57
else {
if(!empty($_REQUEST['loginUser']) or !empty($_REQUEST['passwordUser1']) or !empty($_REQUEST['passwordUser2']) or !empty($_REQUEST['codStr'])) {
echo 'введите все поля'
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="password" name="passwordUser2"placeholder="повторите пароль">
<input type="text" name="codStr"placeholder="Введите кодовое слово">
<input type="submit">
</form>
<?php
}
if(empty($_REQUEST['loginUser']) and empty($_REQUEST['passwordUser1']) and empty($_REQUEST['passwordUser2']) and empty($_REQUEST['codStr'])) {
echo 'ЗАПОЛНИТЕ ФОРМУ';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input type="password" name="passwordUser1"placeholder="введите пароль">
<input type="password" name="passwordUser2"placeholder="повторите пароль">
<input type="text" name="codStr"placeholder="Введите кодовое слово">
<input type="submit">
</form>
<?php
}
}

?>
Нравится
*********
*********
********* 30 авг 2018 в 6:44
3. Сделайте функцию user, с помощью которой можно получить доступ ко всей информации о пользователе. Информация берется из сессии. Примеры работы: user('id') – вернет id пользователя, user('login') - вернет логин и т.д.

4. Сделайте функцию isAuth, которая проверяет, авторизован ли пользователь. Если да - вернет true, если нет - false.

5. Сделайте аналогичную функцию isNotAuth, которая проверят, НЕ авторизован ли пользователь.

<?php
session_start();

function user($val) {
session_start();
echo $_SESSION[$val];
}

function isAuth($val) {
if($val) {
return true;
}
}

function notAuth($val) {
if(!$val) {
return true;
}
}

if(!empty($_POST['click'])) {
user($_POST['val']);
}
?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">

<title>test2</title>
<style>

</style>
</head>
<body>
<?php
if(isAuth($_SESSION['start'])) {
?>
<form action="" method="POST">
<input name="val" placeholder="введите имя запроса">
<input type="submit" value="получить значение" name="click">
</form>

<?php
}
if(notAuth($_SESSION['start'])) {
echo 'вам нужно авторизоваться!';
}
?>
</body>
</html>
Нравится
*********
*********
********* 31 авг 2018 в 15:01
7. Сделайте так, чтобы при авторизации в БД писалась дата последнего захода пользователя на сайт.

<?php require_once('db.php'); ?>
<?php
session_start();

function user($val) {
session_start();
echo $_SESSION[$val];
}

function isAuth($val) {
if($val) {
return true;
}
}

function notAuth($val) {
if(!$val) {
return true;
}
}

if(!empty($_POST['click'])) {
user($_POST['val']);
}
?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">

<title>test2</title>
<style>

</style>
</head>
<body>
<?php
if(isAuth($_SESSION['start'])) {
?>
<form action="" method="POST">
<input name="val" placeholder="введите имя запроса">
<input type="submit" value="получить значение" name="click">
</form>

<?php

$date = date('d.m.Y H:i:s', time());
$query = 'UPDATE user SET date="'.$date.'" WHERE id=1';
mysql_query($query);

}
if(notAuth($_SESSION['start'])) {
echo 'вам нужно авторизоваться!';
}
?>
</body>
</html>
Нравится
*********
*********
********* 31 авг 2018 в 15:03
Задачи на регистрацию пользователей на PHP
1. Сделайте регистрацию пользователя, которая запрашивает от него следующие поля: имя, фамилия, возраст, email, город, язык. Все задачи ниже относятся к данной регистрации, если не сказано иное.

2. Реализуйте проверку логина на незанятость.

3. Пусть при регистрации скрипт сохраняет дату регистрации (пользователь не вводит эти данные, дата определяется сама скриптом PHP).

4. Сделайте скрипт-генератор паролей. Пароль должен быть минимум 6 символов. Интегрируйте этот скрипт в нашу регистрацию - пусть пользователю будет предложено сгенерировать пароль.
Нравится
*********
*********
********* 1 сен 2018 в 12:53
<?php require_once('db.php'); ?>
<?php

if(!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser1']) and !empty($_REQUEST['passwordUser2']) and !empty($_REQUEST['codStr']) and !empty($_REQUEST['nameUser']) and !empty($_REQUEST['surnameUser']) and !empty($_REQUEST['mailUser'])) {

if($_REQUEST['passwordUser1'] == $_REQUEST['passwordUser2']) {
$newDate = date('d.m.Y', time());
$loginUser = $_REQUEST['loginUser'];
$passwordUser = md5($_REQUEST['passwordUser1']);
$codStr = $_REQUEST['codStr'];
$nameUser = $_REQUEST['nameUser'];
$surnameUser = $_REQUEST['surnameUser'];
$mailUser = $_REQUEST['mailUser'];
$dateOpen = $newDate;
if( mb_strlen($_REQUEST['passwordUser2'], '8bit') < 6) {
echo 'длина пароля минимум 6 символов';
echo '<br>';
$chars="qazxswedcvfrtgbnhyujmkiolp1234567890QAZXSWEDCVFRTGBNHYUJMKIOLP";
$max=10;
$size=mb_strlen($chars)-1;
$newPassword=null;
while($max--)
$newPassword.=$chars[rand(0,$size)];
echo 'Попробуйте этот пароль: '.$newPassword;
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input name="nameUser" placeholder="введите имя">
<input name="surnameUser" placeholder="введите фамилию">
<input name="mailUser" placeholder="введите электронный адрес">
<input type="password" name="passwordUser1" placeholder="введите пароль">
<input type="password" name="passwordUser2" placeholder="введите пароль">
<input name="codStr" placeholder="введите кодовое слово">
<input type="submit" name="clickUser">
</form>
<?php
}
Нравится
*********
*********
********* 1 сен 2018 в 12:53
else {
$query1 = "SELECT login FROM `user` WHERE login='".$loginUser."'";
$testLogin = mysql_query($query1) or die(mysql_error());
$userTest = mysql_fetch_assoc($testLogin);

if($userTest['login'] != $loginUser){
$query2 = "INSERT INTO `user`(`login`, `password`, `codStr`, `name`, `surname`, `mail`, `dateOpen`) VALUES ('".$loginUser."', '".$passwordUser."', '".$codStr."', '".$nameUser."', '".$surnameUser."', '".$mailUser."', '".$dateOpen."')";
mysql_query($query2) or die(mysql_error());
echo 'регистрация прошла успешно!';
}
else {
echo 'такой логин уже существует';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input name="nameUser" placeholder="введите имя">
<input name="surnameUser" placeholder="введите фамилию">
<input name="mailUser" placeholder="введите электронный адрес">
<input type="password" name="passwordUser1" placeholder="введите пароль">
<input type="password" name="passwordUser2" placeholder="введите пароль">
<input name="codStr" placeholder="введите кодовое слово">
<input type="submit" name="clickUser">
</form>
<?php
}
}
}
else {
echo 'пароли не совпадают';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input name="nameUser" placeholder="введите имя">
<input name="surnameUser" placeholder="введите фамилию">
<input name="mailUser" placeholder="введите электронный адрес">
<input type="password" name="passwordUser1" placeholder="введите пароль">
<input type="password" name="passwordUser2" placeholder="введите пароль">
<input name="codStr" placeholder="введите кодовое слово">
<input type="submit" name="clickUser">
</form>
<?php
}


}
Нравится
*********
*********
********* 1 сен 2018 в 15:56
else {
if(!empty($_REQUEST['clickUser']) and (empty($_REQUEST['loginUser']) or empty($_REQUEST['passwordUser1']) or empty($_REQUEST['passwordUser2']) or empty($_REQUEST['codStr']) or empty($_REQUEST['nameUser']) or empty($_REQUEST['surnameUser']) or empty($_REQUEST['mailUser']))) {
echo 'введите все поля'
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input name="nameUser" placeholder="введите имя">
<input name="surnameUser" placeholder="введите фамилию">
<input name="mailUser" placeholder="введите электронный адрес">
<input type="password" name="passwordUser1" placeholder="введите пароль">
<input type="password" name="passwordUser2" placeholder="введите пароль">
<input name="codStr" placeholder="введите кодовое слово">
<input type="submit" name="clickUser">
</form>
<?php
}
}

if(empty($_REQUEST['clickUser']) and (empty($_REQUEST['loginUser']) or empty($_REQUEST['passwordUser1']) or empty($_REQUEST['passwordUser2']) or empty($_REQUEST['codStr']) or empty($_REQUEST['nameUser']) or empty($_REQUEST['surnameUser']) or empty($_REQUEST['mailUser']))) {
echo '<h1>Регистрация</h2>';
echo 'ЗАПОЛНИТЕ ФОРМУ';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input name="nameUser" placeholder="введите имя">
<input name="surnameUser" placeholder="введите фамилию">
<input name="mailUser" placeholder="введите электронный адрес">
<input type="password" name="passwordUser1" placeholder="введите пароль">
<input type="password" name="passwordUser2" placeholder="введите пароль">
<input name="codStr" placeholder="введите кодовое слово">
<input type="submit" name="clickUser">
</form>
<?php
}
?>
Нравится
*********
*********
********* 2 сен 2018 в 10:16
1. Реализуйте валидацию полей этой регистрации (пароль должен быть от 6 до 10 символов, логин от 4 до 12 символов и так далее).

2. Добавьте хеширование и соль в нашу регистрацию.

3. Придумайте и реализуйте свой алгоритм соления.

4. Соление очень часто будет требоваться в дальнейшем в разных местах. Сделайте функцию, которая принимает логин, пароль и соль для этого пользователя, а возвращает соленый пароль.

5. Сделайте так, чтобы значения полей не стирались при ошибке заполнения полей. Отдельно обратите внимание на выпадающей список с языками.

6. Сделайте так, чтобы ошибочно заполненное поле обводилось красной границей и над ним писалась ошибка.
Нравится
*********
*********
********* 2 сен 2018 в 10:17
<?php require_once('db.php');
session_start();
?>
<?php
function generateSalt()
{
$salt = '';
$saltLength = 8; //длина соли
for($i=0; $i<$saltLength; $i++) {
$salt .= chr(mt_rand(33,126)); //символ из ASCII-table
}
return $salt;
}


function generatePasSalt($password, $salt) {
$strPassword = md5($password.$salt);
return $strPassword;
}

function newPage($link) {
header("Location: test2.php"); exit;
}

if(!empty($_REQUEST['loginUser']) and !empty($_REQUEST['passwordUser1']) and !empty($_REQUEST['passwordUser2']) and !empty($_REQUEST['codStr']) and !empty($_REQUEST['nameUser']) and !empty($_REQUEST['surnameUser']) and !empty($_REQUEST['mailUser'])) {
if( mb_strlen($_REQUEST['loginUser'], '8bit') < 4 or mb_strlen($_REQUEST['loginUser'], '8bit') > 12) {
echo '<p style="border-color: red">длина логина, минимум 4 символа, максимум 10 символов </p>';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин" style="border-color: red">
<input value="<?php echo $_POST['nameUser'] ?>" name="nameUser" placeholder="введите имя">
<input value="<?php echo $_POST['surnameUser'] ?>" name="surnameUser" placeholder="введите фамилию">
<input value="<?php echo $_POST['mailUser'] ?>" name="mailUser" placeholder="введите электронный адрес">
<input value="<?php echo $_POST['passwordUser1'] ?>" type="password" name="passwordUser1" placeholder="введите пароль">
<input value="<?php echo $_POST['passwordUser2'] ?>" type="password" name="passwordUser2" placeholder="введите пароль">
<input value="<?php echo $_POST['codStr'] ?>" name="codStr" placeholder="введите кодовое слово">
<input type="submit" name="clickUser">
</form>
<?php
}
Нравится
*********
*********
********* 2 сен 2018 в 10:17
else {
if($_REQUEST['passwordUser1'] == $_REQUEST['passwordUser2']) {
$newDate = date('d.m.Y', time());
$loginUser = $_REQUEST['loginUser'];
$salt = generateSalt();
$passwordUser = generatePasSalt($_REQUEST['passwordUser1'], $salt);
$codStr = $_REQUEST['codStr'];
$nameUser = $_REQUEST['nameUser'];
$surnameUser = $_REQUEST['surnameUser'];
$mailUser = $_REQUEST['mailUser'];
$dateOpen = $newDate;
if( mb_strlen($_REQUEST['passwordUser2'], '8bit') < 6 or mb_strlen($_REQUEST['passwordUser2'], '8bit') > 10) {
echo '<p style="border-color: red">длина пароля минимум 6 символов, максимум 10 символов </p>';
echo '<br>';
$chars="qazxswedcvfrtgbnhyujmkiolp1234567890QAZXSWEDCVFRTGBNHYUJMKIOLP";
$max=10;
$size=mb_strlen($chars)-1;
$newPassword=null;
while($max--)
$newPassword.=$chars[rand(0,$size)];
echo '<p style="border-color: green"> попробуйте этот пароль '.$newPassword.'</p>';
?>
<form action="" method="POST">
<input value="<?php echo $_POST['loginUser'] ?>" name="loginUser" placeholder="введите логин">
<input value="<?php echo $_POST['nameUser'] ?>" name="nameUser" placeholder="введите имя">
<input value="<?php echo $_POST['surnameUser'] ?>" name="surnameUser" placeholder="введите фамилию">
<input value="<?php echo $_POST['mailUser'] ?>" name="mailUser" placeholder="введите электронный адрес">
<input type="password" name="passwordUser1" placeholder="введите пароль" style="border-color: red">
<input type="password" name="passwordUser2" placeholder="введите пароль" style="border-color: red" >
<input value="<?php echo $_POST['codStr'] ?>" name="codStr" placeholder="введите кодовое слово">
<input type="submit" name="clickUser">
</form>
<?php
}
Нравится
*********
*********
********* 2 сен 2018 в 10:17
else {
$query1 = "SELECT login FROM `user` WHERE login='".$loginUser."'";
$testLogin = mysql_query($query1) or die(mysql_error());
$userTest = mysql_fetch_assoc($testLogin);

if($userTest['login'] != $loginUser){

$query2 = "INSERT INTO `user`(`login`, `password`, `salt`, `codStr`, `name`, `surname`, `mail`, `dateOpen`) VALUES ('".$loginUser."', '".$passwordUser."', '".$salt."', '".$codStr."', '".$nameUser."', '".$surnameUser."', '".$mailUser."', '".$dateOpen."')";
mysql_query($query2) or die(mysql_error());

$query3 = "SELECT * FROM user WHERE login='".$loginUser."'";
$resultUser = mysql_query($query3) or die(mysql_error());
$userTab = mysql_fetch_assoc($resultUser);

session_start();
$_SESSION['start'] = true;
$_SESSION['name'] = $userTab['name'];
$_SESSION['surname'] = $userTab['surname'];
$_SESSION['mail'] = $userTab['mail'];
$_SESSION['id'] = $userTab['id'];

newPage($link);
echo '<p style="border-color: red">регистрация прошла успешно!</p>';
}
else {
echo '<p style="border-color: red">такой логин уже существует </p>';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин" style="border-color: red">
<input value="<?php echo $_POST['nameUser'] ?>" name="nameUser" placeholder="введите имя">
<input value="<?php echo $_POST['surnameUser'] ?>" name="surnameUser" placeholder="введите фамилию">
<input value="<?php echo $_POST['mailUser'] ?>" name="mailUser" placeholder="введите электронный адрес">
<input value="<?php echo $_POST['passwordUser1'] ?>" type="password" name="passwordUser1" placeholder="введите пароль">
<input value="<?php echo $_POST['passwordUser2'] ?>" type="password" name="passwordUser2" placeholder="введите пароль">
<input value="<?php echo $_POST['codStr'] ?>" name="codStr" placeholder="введите кодовое слово">
<input type="submit" name="clickUser">
</form>
<?php
}
}
}
Нравится
*********
*********
********* 2 сен 2018 в 10:20
else {
echo ' <p style="border-color: red">пароли не совпадают</p>';
?>
<form action="" method="POST">
<input value="<?php echo $_POST['loginUser'] ?>" name="loginUser" placeholder="введите логин">
<input value="<?php echo $_POST['nameUser'] ?>" name="nameUser" placeholder="введите имя">
<input value="<?php echo $_POST['surnameUser'] ?>" name="surnameUser" placeholder="введите фамилию">
<input value="<?php echo $_POST['mailUser'] ?>" name="mailUser" placeholder="введите электронный адрес">
<input type="password" name="passwordUser1" placeholder="введите пароль" style="border-color: red">
<input type="password" name="passwordUser2" placeholder="введите пароль" style="border-color: red">
<input value="<?php echo $_POST['codStr'] ?>" name="codStr" placeholder="введите кодовое слово">
<input type="submit" name="clickUser">
</form>
<?php
}

}
}

else {
if(!empty($_REQUEST['clickUser']) and (empty($_REQUEST['loginUser']) or empty($_REQUEST['passwordUser1']) or empty($_REQUEST['passwordUser2']) or empty($_REQUEST['codStr']) or empty($_REQUEST['nameUser']) or empty($_REQUEST['surnameUser']) or empty($_REQUEST['mailUser']))) {
echo '<p style="border-color: red">введите все поля</p>'
?>
<form action="" method="POST">
<input value="<?php echo $_POST['loginUser'] ?>" name="loginUser" placeholder="введите логин" style="border-color: red">
<input value="<?php echo $_POST['nameUser'] ?>" name="nameUser" placeholder="введите имя" style="border-color: red">
<input value="<?php echo $_POST['surnameUser'] ?>" name="surnameUser" placeholder="введите фамилию" style="border-color: red">
<input value="<?php echo $_POST['mailUser'] ?>" name="mailUser" placeholder="введите электронный адрес" style="border-color: red">
<input value="<?php echo $_POST['passwordUser1'] ?>" type="password" name="passwordUser1" placeholder="введите пароль" style="border-color: red">
<input value="<?php echo $_POST['passwordUser2'] ?>" type="password" name="passwordUser2" placeholder="введите пароль" style="border-color: red">
<input value="<?php echo $_POST['codStr'] ?>" name="codStr" placeholder="введите кодовое слово" style="border-color: red">
<input type="submit" name="clickUser" style="border-color: red">
</form>
<?php
}
}
Нравится
*********
*********
********* 2 сен 2018 в 10:20
if(empty($_REQUEST['clickUser']) and (empty($_REQUEST['loginUser']) or empty($_REQUEST['passwordUser1']) or empty($_REQUEST['passwordUser2']) or empty($_REQUEST['codStr']) or empty($_REQUEST['nameUser']) or empty($_REQUEST['surnameUser']) or empty($_REQUEST['mailUser']))) {
echo '<h1>Регистрация</h2>';
echo 'ЗАПОЛНИТЕ ФОРМУ';
?>
<form action="" method="POST">
<input name="loginUser" placeholder="введите логин">
<input name="nameUser" placeholder="введите имя">
<input name="surnameUser" placeholder="введите фамилию">
<input name="mailUser" placeholder="введите электронный адрес">
<input type="password" name="passwordUser1" placeholder="введите пароль">
<input type="password" name="passwordUser2" placeholder="введите пароль">
<input name="codStr" placeholder="введите кодовое слово">
<input type="submit" name="clickUser">
</form>
<?php
}
?>
Нравится
*********
*********
********* 2 сен 2018 в 10:23
http://www.anatolio87test.ru/php/test3.php РЕГИСТРАЦИЯ

http://www.anatolio87test.ru/php/test1.php АВТОРИЗАЦИЯ
Нравится
*********
*********
********* 4 сен 2018 в 9:23
Реализуйте в авторизации галочку 'Запомнить меня'.

1. Сделайте так, чтобы в случае ошибочного ввода пары логин-пароль значение логина не стиралось и галочка 2. 'Запомнить меня' оставалась в том же состоянии.

3. Реализуйте логаут (выход пользователя из своего аккаунта).

4. Реализуйте запоминание даты последнего посещения через куки.
Нравится
*********
*********
********* 4 сен 2018 в 9:30
new 1.php
4 КБ
new 2.php
10 КБ
new 3.php
2 КБ
new 4.php
0 КБ
user.sql
2 КБ
Нравится
*********
*********
********* 4 сен 2018 в 9:32
http://www.anatolio87test.ru/php/test1.php АВТОРИЗАЦИЯ
http://www.anatolio87test.ru/php/test2.php СТРАНИЦА
http://www.anatolio87test.ru/php/test3.php РЕГИСТРАЦИЯ
http://www.anatolio87test.ru/php/test4.php ЛОГАУТ
Нравится
*********
*********
********* 4 сен 2018 в 9:40
в МОЗИЛЕ, в ОПЕРЕ, в IE РАБОТЕТ, В ГУГЛЕ НЕТ, Х.З.
Нравится
*********
Дмитрий Трепачёв
Дмитрий Трепачёв 6 сен 2018 в 19:39
Толя, +
Нравится
*********
Ответить
*********
********* 8 сен 2018 в 3:06
Типичные задачи при авторизации и регистрации
Нравится
*********
*********
********* 8 сен 2018 в 3:06
1. Реализуйте просмотр пользователями своих и чужих профилей.

2. Сделайте так, чтобы авторизованный пользователь мог сменить свой пароль.

3. Реализуйте редактирования своего профиля пользователем. Он должен иметь возможность изменить свое имя, email и другую информацию (но не логин и пароль - для этого есть отдельное место).

4. Реализуйте возможность удаления своего аккаунта пользователем. Так как это важная операция, скрипт должен запросить пароль пользователя.

5. Реализуйте обмен личными сообщениями между пользователями.

6. Реализуйте просмотр списка сообщений в личном кабинете.

7. Реализуйте удаление сообщений в личном кабинете.

8. Реализуйте галочку 'Отметить прочитанным' для сообщения (подсказка: нужно ввести еще одно поле в таблице).
Нравится
*********
*********
********* 8 сен 2018 в 3:07
ЗДЕСЬ СКОРО БУДЕТ РЕШЕНИЕ...
Нравится
*********
*********
********* 8 сен 2018 в 3:08
Задачи на права доступа пользователей при авторизации и регистрации
Нравится
*********
*********
********* 8 сен 2018 в 3:08
Реализуйте 3 типа пользователей: администратор (статус 10), простой пользователь (1), модератор (2).

Реализуйте функцию isAdmin, которая определяет, является ли админом текущий пользователь (информация берется из сессии, конечно же).

Реализуйте функцию isAccess($status), которая принимает параметром статус, которому разршен доступ, а возвращает true, если текущему пользователю доступ разрешен и false — если запрещен.

Модифицируйте предыдущую функцию так, чтобы она могла принимать массив статусов. Например, isAccess(['2','10']) — проверяет является ли текущий пользователь модератором или администратором и дает ему доступ в этом случае.

Реализуйте админку на вашем сайте. Доступ туда должен иметь только администратор.

Сделайте так, чтобы в админке отображался список пользователей.

Реализуйте удаление и бан пользователей администратором.

Реализуйте бан на определенное время (час, день, неделя).

Реализуйте кнопку разбанивания пользователей.

Сделайте так, чтобы в админке отображалось количество пользователей и их статус. Пример: администраторов — 2, модераторов — 3, забаненных пользователей — 5, всего пользоватетей — 134.

Реализуйте редактирование пользователей администратором (это делается так: дается доступ администратору к профилю пользователя, а из админки просто ставятся ссылки).

Реализуйте изменение статуса пользователя администратором. Он может его сделать обычным пользователем, модератором, администратором.
Нравится
*********
*********
********* 8 сен 2018 в 3:08
ЗДЕСЬ СКОРО БУДЕТ РЕШЕНИЕ...
Нравится
*********
*********
********* 8 сен 2018 в 3:08
Задачи на ООП в PHP. Часть 1
Нравится
*********
*********
********* 8 сен 2018 в 3:09
Работа с классами и объектами
Нравится
*********
*********
********* 8 сен 2018 в 3:10
1. Сделайте класс Worker, в котором будут следующие public поля - name (имя), age (возраст), salary (зарплата).

Создайте объект этого класса, затем установите поля в следующие значения (не в __construct, а для созданного объекта) - имя 'Иван', возраст 25, зарплата 1000. Создайте второй объект этого класса, установите поля в следующие значения - имя 'Вася', возраст 26, зарплата 2000.

Выведите на экран сумму зарплат Ивана и Васи. Выведите на экран сумму возрастов Ивана и Васи. —>

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Шаблон PHP</title>
<style>

</style>
</head>
<body>


<script>

</script>

<?php

class Worker {

public $name;
public $age;
public $salary;

}

$worker1 = new Worker;

$worker1 -> name = 'Иван';
$worker1 -> age = 25;
$worker1 -> salary = 1000;


$worker2 = new Worker;

$worker2 -> name = 'Вася';
$worker2 -> age = 26;
$worker2 -> salary = 2000;

$sum1 = $worker1 -> age + $worker2 -> age;
$sum2 = $worker1 -> salary + $worker2 -> salary;

echo $sum1 . '<br>';
echo $sum2;

?>

</body>
</html>
Нравится
*********
*********
********* 8 сен 2018 в 3:11
Работа с классами и объектами
<!— Работа с классами и объектами —>
<!— 2. Сделайте класс Worker, в котором будут следующие private поля - name (имя), age (возраст), salary (зарплата) и следующие public методы setName, getName, setAge, getAge, setSalary, getSalary.

Создайте 2 объекта этого класса: 'Иван', возраст 25, зарплата 1000 и 'Вася', возраст 26, зарплата 2000.

Выведите на экран сумму зарплат Ивана и Васи. Выведите на экран сумму возрастов Ивана и Васи. —>

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Шаблон PHP</title>
<style>

</style>
</head>
<body>


<script>

</script>

<?php

class Worker {

public $name;
public $age;
public $salary;

public function setName($name) {
$this->name = $name;
}

public function getName() {
return $this->name;
}

public function setAge($age) {
$this->age = $age;
}

public function getAge() {
return $this->age;
}

public function setSalary($salary) {
$this->salary = $salary;
}

public function getSalary() {
return $this->salary;
}

}

$worker1 = new Worker;
$worker2 = new Worker;

$worker1 -> setName('Иван');
$worker2 -> setName('Вася');
$worker1 -> setAge(25);
$worker2 -> setAge(26);
$worker1 -> setSalary(1000);
$worker2 -> setSalary(2000);
$sum1 = $worker1 -> getAge() + $worker2 -> getAge();
$sum2 = $worker1 -> getSalary() + $worker2 -> getSalary();

echo $sum1 . '<br>';
echo $sum2;

?>

</body>
</html>
Нравится
*********
*********
********* 8 сен 2018 в 3:11
<!— Работа с классами и объектами —>
<!— 3. Дополните класс Worker из предыдущей задачи private методом checkAge, который будет проверять возраст на корректность (от 1 до 100 лет). Этот метод должен использовать метод setAge перед установкой нового возраста (если возраст не корректный - он не должен меняться). —>

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Шаблон PHP</title>
<style>

</style>
</head>
<body>


<script>

</script>

<?php

class Worker {

private $name;
private $age;
private $salary;

public function setName($name) {
$this->name = $name;
}

public function getName() {
return $this->name;
}

public function setAge($age) {
if($age >=1 and $age <= 100) {
$this->age = $age;
}
}

public function getAge() {
return $this->age;
}

public function setSalary($salary) {
$this->salary = $salary;
}

public function getSalary() {
return $this->salary;
}

}

$worker1 = new Worker;
$worker2 = new Worker;

$worker1 -> setName('Иван');
$worker2 -> setName('Вася');
$worker1 -> setAge(25);
$worker2 -> setAge(26);
$worker1 -> setSalary(1000);
$worker2 -> setSalary(2000);
$sum1 = $worker1 -> getAge() + $worker2 -> getAge();
$sum2 = $worker1 -> getSalary() + $worker2 -> getSalary();

echo $sum1 . '<br>';
echo $sum2;

?>

</body>
</html>
Нравится
*********
*********
********* 8 сен 2018 в 3:12
<!— 4. Сделайте класс Worker, в котором будут следующие private поля - name (имя), salary (зарплата). Сделайте так, чтобы эти свойства заполнялись в методе __construct при создании объекта (вот так: new Worker(имя, возраст) ). Сделайте также public методы getName, getSalary.

Создайте объект этого класса 'Дима', возраст 25, зарплата 1000. Выведите на экран произведение его возраста и зарплаты. —>

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Шаблон PHP</title>
<style>

</style>
</head>
<body>


<script>

</script>

<?php

class Worker {

private $name;
private $age;
private $salary;

public function __construct($name, $age, $salary) {
$this -> name = $name;
$this -> salary = $salary;
$this -> age = $age;
}

public function getName() {
return $this -> name;
}

public function getSalary() {
return $this->salary;
}

public function getAge() {
return $this->age;
}

}

$worker = new Worker('Дима', 25, 2000);

echo $worker -> getSalary() * $worker -> getAge();

?>

</body>
</html>
Нравится
*********
*********
********* 8 сен 2018 в 3:12
<!— Наследование —>
<!— 5. Сделайте класс User, в котором будут следующие protected поля - name (имя), age (возраст), public методы setName, getName, setAge, getAge.

Сделайте класс Worker, который наследует от класса User и вносит дополнительное private поле salary (зарплата), а также методы public getSalary и setSalary.

Создайте объект этого класса 'Иван', возраст 25, зарплата 1000. Создайте второй объект этого класса 'Вася', возраст 26, зарплата 2000. Найдите сумму зарплата Ивана и Васи.

Сделайте класс Student, который наследует от класса User и вносит дополнительные private поля стипендия, курс, а также геттеры и сеттеры для них.

6. Сделайте класс Driver (Водитель), который будет наследоваться от класса Worker из предыдущей задачи. Этот метод должен вносить следующие private поля: водительский стаж, категория вождения (A, B, C).-->

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Шаблон PHP</title>
<style>

</style>
</head>
<body>


<script>

</script>

<?php

class User {
protected $name;
protected $age;

public function setName($name) {
$this -> name = $name;
}

public function getName() {
return $this -> name;
}

public function setAge($age) {
$this -> age = $age;
}

public function getAge() {
return $this -> age;
}

}

class Worker extends User {
private $salary;
public function setSalary($salary) {
$this -> salary = $salary;
}

public function getSalary() {
return $this -> salary;
}
}

$worker1 = new Worker();
$worker2 = new Worker();

$worker1 -> setName('Иван');
$worker1 -> setAge(25);
$worker1 -> setSalary(1000);

$worker2 -> setName('Вася');
$worker2 -> setAge(26);
$worker2 -> setSalary(2000);

$result = $worker1 -> getSalary() + $worker2 -> getSalary();
echo $result;

class Student extends User {
private $grants;
private $course;

public function setGrants($grants) {
$this -> grants = $grants;
}

public function getGrants() {
return $this -> grants;
}

public function setCourse($course) {
$this -> course = $course;
}

public function getCourse() {
return $this -> course;
}

}

class Driver extends Worker{
private $experience;
private $category;
}

?>

</body>
</html>
Нравится
*********
*********
********* 8 сен 2018 в 3:13
<!— Практика
7. Создайте класс Form - оболочку для создания форм. Он должен иметь методы input, submit, password, textarea, open, close. Каждый метод принимает массив атрибутов. —>

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Шаблон PHP</title>
<style>

</style>
</head>
<body>


<script>

</script>

<?php

class Form {

private function getArray($arr1) {
$str = '';
foreach($arr1 as $key => $elem) {
$str .= $key . "=" . "'" . $elem . "'" . " ";
}
return $str;
}

public function input($arr) {
$attribute = $this -> getArray($arr);
return '<input ' . $attribute . '><br>';
}

public function submit($arr) {
$attribute = $this -> getArray($arr);
return '<input ' . $attribute . '><br>';
}

public function password($arr) {
$attribute = $this -> getArray($arr);
return '<input ' . $attribute . '><br>';
}

public function textarea($arr) {
$attribute = $this -> getArray($arr);
return '<textarea ' . $attribute . '>' . '</textarea><br>';
}

public function open($arr) {
$attribute = $this -> getArray($arr);
return '<form ' . $attribute . '><br>';
}

public function close() {
return '</form>';
}

}

$form = new Form();

echo $form->open(['action'=>'index.php', 'method'=>'POST']);
echo $form->input(['type'=>'text', 'placeholder'=>'Введите текст', 'class'=>'input']);
echo $form->submit(['type'=>'submit', 'value'=>'Проверить', 'class'=>'submit']);
echo $form->password(['type'=>'password', 'placeholder'=>'Введите пароль', 'class'=>'password']);
echo $form->textarea(['placeholder'=>'Введите текст', 'class'=>'placeholder']);
echo $form->close();


?>

</body>
</html>
Нравится
*********
*********
********* 8 сен 2018 в 3:15
8. Создайте класс SmartForm, который будет наследовать от Form из предыдущей задачи и сохранять значения инпутов и textarea после отправки.
То есть если мы сделали форму, нажали на кнопку отправки - то значения из инпутов не должны пропасть. Мало ли что-то пойдет не так, например, форма некорректно заполнена, а введенные данные из нее пропали и их следует вводить заново. Этого следует избегать.

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Шаблон PHP</title>
<style>

</style>
</head>
<body>


<script>

</script>

<?php

class Form {

protected function getArray($arr) {
$str = '';
foreach($arr as $key => $elem) {
$str .= $key . '=' . '"' . $elem . '"' ;
}
return $str;
}

public function input($arr) {
$attribute = $this -> getArray($arr);
return '<input ' . $attribute . '><br>';
}

public function submit($arr) {
$attribute = $this -> getArray($arr);
return '<input ' . $attribute . '><br>';
}

public function password($arr) {
$attribute = $this -> getArray($arr);
return '<input ' . $attribute . '><br>';
}

public function textarea($arr) {
$attribute = $this -> getArray($arr);
return '<textarea ' . $attribute . '>' . '</textarea><br>';
}

public function open($arr) {
$attribute = $this -> getArray($arr);
return '<form ' . $attribute . '><br>';
}

public function close() {
return '</form>';
}

}

class SmartForm extends Form {

function getArray($arr) {
$str = '';
$name = $arr['name'];
$val = $_POST[$name];
foreach($arr as $key => $elem) {
$str .= $key . '=' . '"' . $elem . '"' ;
}
if(!empty($_POST[$name])) {
$str .= ' value="'.$val.'" ';
}
return $str;
}

public function textarea($arr) {
$name = $arr['name'];
$attribute = $this -> getArray($arr);
return '<textarea ' . $attribute . '>' .$_POST[$name]. '</textarea><br>';
}

}

$form = new SmartForm();


echo $form->open(['action'=>'', 'method'=>'POST']);
echo $form->input(['type'=>'text', 'placeholder'=>'Введите текст', 'class'=>'input', 'name'=>'text1']);
echo $form->submit(['type'=>'submit', 'class'=>'submit', 'name'=>'click']);
echo $form->password(['type'=>'password', 'placeholder'=>'Введите пароль', 'class'=>'password', 'name'=>'pass']);
echo $form->textarea(['placeholder'=>'Введите текст', 'class'=>'placeholder', 'name'=>'text2']);
echo $form->close();

var_dump ($_POST);
?>

</body>
</html>
Нравится
*********
*********
********* 8 сен 2018 в 22:03
9. Создайте класс Cookie - оболочку над работой с куками. Класс должен иметь следующие методы: установка куки set(имя куки, ее значение), получение куки get(имя куки), удаление куки del(имя куки).

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Шаблон PHP</title>
<style>

</style>
</head>
<body>


<script>

</script>

<?php

class changeCookie {

public function addCookie($name, $val) {
return setcookie($name, $val, time() + 3600);
}
public function getCookie($name) {
return $_COOKIE[$name];
}
public function deleteCookie($name) {
setcookie($name, '', time());
}

}
$changeCookie = new changeCookie;
$changeCookie -> addCookie('test', 'test');
echo $changeCookie ->getCookie('test');

?>

</body>
</html>
Нравится
*********
*********
********* 9 сен 2018 в 0:09
10. Создайте класс Session - оболочку над сессиями. Он должен иметь следующие методы: создать переменную сессии, получить переменную, удалить переменную сессии, проверить наличие переменной сессии.

Сессия должна стартовать (session_start) в методе __construct.

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Шаблон PHP</title>
<style>

</style>
</head>
<body>


<script>

</script>

<?php

class Session {

private function addSession($name, $val) {
session_start();
$_SESSION[$name] = $val;
}
public function getSession($name) {
return $_SESSION[$name];
}
public function deleteSession($name) {
unset($_SESSION[$name]);
}

public function __construct($name, $val) {
$this -> addSession($name, $val);
}

}
$session = new session('test', 'test');

echo $session ->getSession('test');

?>

</body>
</html>
Нравится
*********
*********
********* 9 сен 2018 в 0:28
11. Реализуйте класс Flash, который будет использовать внутри себя класс Session из предыдущей задачи (именно использовать, а не наследовать).

Этот класс будет использоваться для сохранения сообщений в сессию и вывода их из сессии. Зачем это нужно: такой класс часто используется для форм. Например на одной странице пользователь отправляет форму, мы сохраняем в сессию сообщение об успешной отправке, редиректим пользователя на другую страницу и там показываем сообщение из сессии.

Класс должен иметь да метода - setMessage, который сохраняет сообщение в сессию и getMessage, который получает сообщение из сессии.

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Шаблон PHP</title>
<style>

</style>
</head>
<body>


<script>

</script>

<?php

class Session {

public function addSession($name, $val) {
session_start();
$_SESSION[$name] = $val;
}
public function getSession($name) {
return $_SESSION[$name];
}
public function deleteSession($name) {
unset($_SESSION[$name]);
}

public function __construct($name1, $val1) {
$this -> addSession($name, $val);
}

}

class Flash {

private $session;

public function __construct() {
$this -> session = new Session;
}

public function setMessage($name, $val) {
$this -> session -> addSession($name, $val);
}

public function getMessage($name) {
return $this -> session -> getSession($name);
}

}

$flash = new Flash;
$flash -> setMessage('test', 'test1');
echo $flash -> getMessage('test');

?>

</body>
</html>
Нравится
*********
*********
********* 9 сен 2018 в 1:47
12. Создайте класс-оболочку Db над базами данных. Класс должен иметь следующие методы: получение данных, удаление данных, редактирование данных, подсчет данных, очистка таблицы, очистка таблиц.

<?php header( 'Content-Type: text/html; charset=utf-8' ); ?>
<?php

class Db {

private $host = 'localhost';
private $user = 'anatolio';
private $password = ;
private $db_name = 'anatolio_test';

public function __construct() {
mysql_connect($this->host, $this->user, $this->password);
mysql_select_db($this->db_name);
mysql_query("SET NAMES UTF8");
}

protected function createQuery($query) {
$result = mysql_query($query) or die(mysql_error());
return mysql_fetch_assoc($result);
}

public function getData($table, $id=0, $field='*') {
if($id == 0) {
$query = "SELECT * FROM $table WHERE id>0";
}
else {
$query = "SELECT $field FROM $table WHERE id=$id";
}
return $this->createQuery($query);
}

public function deleteData($table, $id=0) {
if($id == 0) {
$query = "DELETE FROM $table WHERE id>0";
}
else {
$query = "DELETE FROM $table WHERE id=$id";
}
$this->createQuery($query);
}

public function changeData($table, $id, $field, $val) {

$query = "UPDATE $table SET $field='".$val."' WHERE id=$id";
$this->createQuery($query);
}

}

$db = new Db;
$db -> changeData('user', 101, 'name', 'Федя');
var_dump($db -> getData('user'));
?>

</body>
</html>
Нравится
*********
*********
********* 9 сен 2018 в 5:09
13. Создайте класс Log для ведения логов. Этот класс должен иметь следующие методы: сохранить в лог, получить последние N записей, очистить таблицу с логами.

Класс Log должен использовать класс Db из предыдущей задачи (именно использовать, а не наследовать).
-----------------------------------------
тут не разобрался с условием, еще вернусь
Нравится
*********
*********
********* 9 сен 2018 в 5:13
Задачи на ООП в PHP. Часть 2
Нравится
*********
*********
********* 9 сен 2018 в 5:15
Продвинутые объекты
Нравится
*********
*********
********* 9 сен 2018 в 5:15
1. Создайте класс Tag.

to be continue
Нравится
*********
*********
********* 9 сен 2018 в 12:27
Задачи на работу с файлами и папками на PHP
Нравится
*********
*********
********* 9 сен 2018 в 12:41
1. Создайте файл 'test.txt' и запишите в него фразу 'Привет, мир!'.

<?php
$current = file_put_contents('text.php', 'привет мир!');
echo $current;
?>

Пусть в корне вашего сайта лежит файл test.txt. Считайте данные из этого файла и выведите их на экран.

<?php

$str = file_get_contents('test3.php');
var_dump($str);

?>

массив

<?php

$str = file('test3.php');
var_dump($str);

?>
Нравится
*********
*********
********* 9 сен 2018 в 12:42
2. Считайте данные из файла 'test.txt' и выведите их на экран.

<?php
$current = file_get_contents('text.php');
echo $current;
?>

Пусть в корне вашего сайта лежит файл test.txt. Запишите в него текст '12345'.

<?php
$str = "Привет как дела? А?";
$status = file_put_contents('test.txt', $str);
echo $status;

?>

если добавить флаг FILE_APPEND то новые данные будут добавляться к уже существующей строке, а не перезаписываться

<?php
$str = "Привет как дела? А?";
//$status = file_put_contents('test.txt', $str, FILE_APPEND);
$status = file_get_contents('test.txt');
echo $status;

?>

<?php
error_reporting(E_ALL);
?>

<?php
$str = "Твои батоны, они же булки...";
$file = fopen('test1.txt', 'w');
fwrite($file, $str);
fclose($file);
//$result = file_get_contents('test1.txt');
//var_dump( $result);
?>

проверяю файл возможность записи
<?php
if(is_writable('test3.txt')) {
echo 'файл доступен для записи';
}
?>

Прочитать файл, еще один вариант, замудренный..
<?php
$file = 'test3.txt';
$test = fopen($file, 'r');
$text = fread($test, filesize($file));
fclose($test);
var_dump($text);
?>

вот так можно получить содержимое файла без тегов

<?php
$str = file_get_contents('https://people.com/');
//file_put_contents('test3.txt', $str);
$result = strip_tags($str);
echo $result;
?>
Нравится
*********
*********
********* 9 сен 2018 в 12:45
3. Переименуйте файл 'test.txt' в 'mir.txt'

<?php
echo rename('text.php', 'mir.php');
?>

Создайте файл test.txt и запишите в него текст '12345'. Пусть изначально файла с таким именем не существует.

<?php
$str = file_put_contents('new_file.txt', '12345');
?>
Нравится
*********
*********
********* 9 сен 2018 в 12:57
4. Сделайте папку 'folder'. 'test.txt' в 'mir.txt'.
<?php
mkdir('folder');
?>
Нравится
*********
*********
********* 9 сен 2018 в 13:02
5. Создайте копию файла 'mir.txt' и назовите ее 'world.txt'.

<?php
echo copy('mir.php', 'world.txt');
?>

Дан массив с именами файлов ['1.txt', '2.txt', '3.txt']. Переберите его циклом и создайте файлы с такими именами и пустым текстом.

<?php
$arr = ['f1.txt', 'f2.txt', 'f3.txt'];
foreach($arr as $elem){
file_put_contents($elem, '');
}
?>
Нравится
*********
*********
********* 9 сен 2018 в 13:40
6. Пусть в корне вашего сайта лежит файл test.txt, в котором записан текст '12345'. Откройте этот файл, запишите в конец текста восклицательный знак и сохраните новый текст обратно в файл.

<?php
$str = 'эх, раз, да еще раз, да еще много, много раз...';
file_put_contents('f1.txt', $str, FILE_APPEND);
?>
Нравится
*********
*********
********* 9 сен 2018 в 13:43
7. Удалите файл 'world.txt'.

<?php
echo unlink('world.txt');
?>

Пусть в корне вашего сайта лежит файл test.txt, в котором записано некоторое число. Откройте этот файл, возведите число в квадрат и запишите обратно в файл.
<?php
$num = pow((int) trim(file_get_contents('f2.txt')), 2);
echo $num;
file_put_contents('f2.txt', $num);
?>
Нравится
*********
*********
********* 9 сен 2018 в 13:48
8. Проверьте существование файлов 'world.txt' и 'mir.txt'.

<?php
$filename = 'test0.php';
if (file_exists($filename)) {
echo "Файл $filename существует";
} else {
echo "Файл $filename не существует";
}
?>

Пусть в корне вашего сайта лежит файл count.txt. Изначально в нем записано число 0. Сделайте так, чтобы при обновлении страницы наш скрипт каждый раз увеличивал это число на 1. То есть у нас получится счетчик обновления страницы в виде файла.

<?php
$num = (int) trim(file_get_contents('f2.txt')) + 1;
echo $num;
file_put_contents('f2.txt', $num);
?>
Нравится
*********
*********
********* 9 сен 2018 в 13:48
Работа с папками, mkdir, rmdir
Нравится
*********
*********
********* 9 сен 2018 в 14:12
9. Создайте папку 'test'

<?php
mkdir('test');
?>

Пусть в корне вашего сайта лежат файлы 1.txt, 2.txt и 3.txt. Вручную сделайте массив с именами этих файлов. Переберите его циклом, прочитайте содержимое каждого из файлов, слейте его в одну строку и запишите в новый файл new.txt. Изначально этого файла не должно быть.

<?php
$fileArr = ['f1.txt', 'f2.txt', 'f3.txt'];
$str = '';
foreach($fileArr as $elem) {
$str .= file_get_contents($elem);
}
file_put_contents('new.txt', $str);

?>
Нравится
*********
*********
********* 9 сен 2018 в 14:19
10. Переименуйте папку 'test' на 'www'.

<?php
echo rename('test7.php', 'test6.php');
?>

Пусть в корне вашего сайта лежат файлы 1.txt, 2.txt и 3.txt. Вручную сделайте массив с именами этих файлов. Переберите его циклом и в текст каждого файла в конец запишите восклицательный знак.

<?php

$fileArr = ['f1.txt', 'f2.txt', 'f3.txt'];
$str = '';
foreach($fileArr as $elem) {
file_put_contents($elem, '!', FILE_APPEND);
}

?>
Нравится
*********
*********
********* 9 сен 2018 в 14:46
11. Удалите папку 'www'.

<?php
rmdir('www');
?>

Пусть в корне вашего сайта лежит файл old.txt. Переименуйте его на new.txt.

Пусть в корне вашего сайта лежит файл old.txt. Переименуйте его на new.txt.
Нравится
*********
*********
********* 9 сен 2018 в 15:02
12. Дан массив со строками. Создайте в папке 'test' папки, названиями которых служат элементы этого массива.
<?php
$arr = ['www', 'zzz', 'xxx'];
foreach($arr as $elem) {
echo mkdir('test/'.$elem);
}

Пусть в корне вашего сайта лежит файл test.txt. Пусть также в корне вашего сайта лежит папка dir. Переместите файл в эту папку.

rename('new1.txt', 'folder/new1.txt');
Нравится
*********
*********
********* 9 сен 2018 в 15:02
На scandir, is_dir, is_file, PHP_EOL
Нравится
*********
*********
********* 9 сен 2018 в 15:04
13. Выведите на экран название всех файлов и подпапок из папки 'test'.
<?php
var_dump( scandir('test'));
?>

Пусть в корне вашего сайта лежит папка dir1, а в ней файл test.txt. Пусть также в корне вашего сайта лежит папка dir2. Переместите файл в эту папку.

rename('folder/new1.txt', 'test/new1.txt');
Нравится
*********
*********
********* 9 сен 2018 в 15:21
14. Выведите на экран название всех файлов, но не подпапок из папки 'test'.

<?php
$file = scandir('test');
foreach($file as $elem) {
if(is_file('test/'.$elem)) {
echo $elem;
}
}
?>

Пусть в корне вашего сайта лежит файл test.txt. Скопируйте его в файл copy.txt.

copy('new_file.txt', 'new_copy.txt');
Нравится
*********
*********
********* 9 сен 2018 в 15:36
15. В папке 'test' есть файлы и подпапки. Выведите на экран содержимое всех файлов, которые лежат непосредственно в папке 'test'.

<?php
$newArr = [];
$file = scandir('test');
foreach($file as $elem) {
if(is_file('test/'.$elem)) {
array_push($newArr, $elem);
}
}
foreach($newArr as $elem) {
echo file_get_contents('test/'.$elem);
}

?>

Пусть в корне вашего сайта лежит файл test.txt. Пусть также в корне вашего сайта лежит папка dir. Скопируйте файл test.txt в папку dir. Копию файла также назовите test.txt.

copy('new_file.txt', 'folder/new_copy.txt');
Нравится
*********
*********
********* 9 сен 2018 в 16:06
16. Выведите на экран название всех файлов с расширением txt из папки 'test'.

<?php header( 'Content-Type: text/html; charset=utf-8' ); ?>

<?php
$newArr = [];
$file = scandir('test');
foreach($file as $elem) {
if(is_file('test/'.$elem) and preg_match('#.txt$#',$elem)) {
array_push($newArr, $elem);
}
}
foreach($newArr as $elem) {
echo file_get_contents('test/'.$elem);
}

?>

Пусть в корне вашего сайта лежит файл test.txt. Удалите его...

Гавно вопрос...

unlink('userStyle.css');
unlink('mir.php')
Нравится
*********
*********
********* 9 сен 2018 в 16:27
17. Найдите все файлы из папки 'test' и вставьте в начало каждого файла полный путь к нему (текст файла должен остаться в нем и начинаться с новой строки после пути).

<?php header( 'Content-Type: text/html; charset=utf-8' ); ?>

<?php
$newArr = [];
$file = scandir('test');
foreach($file as $elem) {
if(is_file('test/'.$elem)) {
array_push($newArr, $elem);
}
}
foreach($newArr as $elem) {
$val = file_get_contents('test/'.$elem);
echo file_put_contents('test/'.$elem, 'путь: '. realpath('test/'.$elem).PHP_EOL.$val);
}

?>

Пусть в корне вашего сайта лежат файлы 1.txt, 2.txt и 3.txt. Вручную сделайте массив с именами этих файлов. Переберите его циклом и удалите все эти файлы...

Сказано, сделано...

<?php
$arr = ['f1.txt', 'f2.txt', 'f3.txt'];
foreach($arr as $elem) {
unlink($elem);
}
Нравится
*********
*********
********* 9 сен 2018 в 16:42
18. Выведите на экран имена всех папок из папки 'test' и их подпапок (может быть любой уровень вложенности).

<?php

function show_dir($dir) {
$arrDir = [];
$dirAll = scandir($dir);
foreach($dirAll as $elem) {
if(!is_file($dir.'/'.$elem)) {
array_push($arrDir, $elem);
}
}
return $arrDir;
}
var_dump(show_dir('test'));
?>

Проверьте, лежит ли в корне вашего сайта файл test.txt...
Ой, ну надо так надо..

var_dump(file_exists('new.txt'));
var_dump(file_exists('test2.txt'));
Нравится
*********
*********
********* 9 сен 2018 в 19:53
20. Дан массив с именами файлов ['1.txt', '2.txt', '3.txt']. Переберите его циклом и проверьте каждый файл на существование. Выведите на экран имя каждого файла и рядом текст "существует" или "не существует".

<?php
$arr = ['1.txt', '2.txt', '3.txt', 'test1.txt'];
foreach($arr as $elem) {
if(file_exists($elem)) {
echo $elem . ' существует<br>';
}
else {
echo $elem . ' не существует<br>';
}
}

?>

21. Пусть в корне вашего сайта лежит файл test.txt. Узнайте его размер, выведите на экран.
22. Модифицируйте предыдущую задачу так, чтобы размер файла выводился в килобайтах.
23.Положите в корень вашего сайта какую-нибудь картинку размером более мегабайта. Узнайте размер этого файла и переведите его в мегабайты.
24. Положите в корень вашего сайта какой-нибудь фильм размером более гигабайта. Узнайте размер этого файла и переведите его в гигабайты.

Определите размер файла 'world.txt'. Выведите его на экран. Выведите его в байтах, мегабайтах, гигабайтах.

<?php
echo filesize('test3.php').' байт';
echo '<br>';
echo filesize('test3.php')/1024 .' килобайт';
echo '<br>';
echo filesize('test3.php')/(1024*1024).' мегабайт';
echo '<br>';
echo filesize('test3.php')/(1024*1024*1024).' гигабайт';
?>
Нравится
*********
*********
********* 9 сен 2018 в 19:53
25. Дан файл test.txt. Прочитайте его текст, получите массив его строк.

<?php

$str = file('test1.txt');
var_dump($str);

$str1 = file_get_contents('test1.txt');
var_dump(explode(PHP_EOL, $str1));
var_dump(explode("\n", $str1));

?>

26. Дан файл test.txt. В нем на каждой строке написано какое-то число. Найдите сумму этих чисел и запишите ее в файл sum.txt.

<?php

$arr = file('test1.txt');
$sum = 0;
foreach($arr as $elem) {
$sum += $elem;
}
echo $sum;

?>

27. Дан массив. Запишите элементы этого массива в файл test.txt так, чтобы каждый элемент начинался с новой строки.

<?php

$arr = ['a', 'b', 'c'];
$str = '';
foreach($arr as $elem) {
//$str .= $elem . "\n" ;
$str .= $elem . PHP_EOL ;
file_put_contents('test1.txt', $str);
}

?>
Нравится
*********
*********
********* 9 сен 2018 в 19:53
28. Дан файл test.txt. В нем на каждой строке написано какое-то число. С помощью функции file найдите сумму этих чисел и выведете ее на экран.
<?php

$arr = file('test1.txt');
$sum = 0;
foreach($arr as $elem) {
$sum += $elem;
}
echo $sum;

file_put_contents('test1.txt', $sum, FILE_APPEND);
?>

29. Дан файл test.txt. В нем на каждой строке написано какое-то число. С помощью функции file найдите сумму этих чисел и запишите эту сумму обратно в конец файла, с новой строки.

<?php

$arr = file('test1.txt');
$sum = 0;
foreach($arr as $elem) {
$sum += $elem;
}

$str = file_get_contents('test1.txt');
file_put_contents('test1.txt', $str . PHP_EOL . $sum);

?>

30. Создайте в корне вашего сайта папку с названием dir.

mkdir('dir');

31 Дан массив со строками. Создайте в корне вашего сайта папки, названиями которых служат элементы этого массива

$arr = ['folder1', 'folder2'];
foreach ( $arr as $elem) {
mkdir($elem);
}

32. Создайте в корне вашего сайта папку с названием test. Затем создайте в этой папке 3 файла: 1.txt, 2.txt, 3.txt.

<?php

mkdir('test');
file_put_contents('test/1.txt', '');
file_put_contents('test/2.txt', '');
file_put_contents('test/3.txt', '');

?>
Нравится
*********
*********
********* 9 сен 2018 в 19:53
33. Удалите папку с названием dir.

<?php

rmdir('test');

?>

34. Пусть в корне вашего сайта лежит папка old. Переименуйте ее на new.

<?php

rename('test', 'test1');

?>
Нравится
*********
*********
********* 9 сен 2018 в 19:54
35. Пусть в корне вашего сайта лежит папка dir, а в ней какие-то текстовые файлы. Выведите на экран столбец имен этих файлов.

<?php

$dir = array_diff(scandir('test1'), ['.', '..']);
foreach($dir as $elem) {
echo $elem . '<br>';
}

?>

36. Пусть в корне вашего сайта лежит папка dir, а в ней какие-то текстовые файлы. Переберите эти файлы циклом, откройте каждый из них и запишите в конец восклицательный знак.

<?php

$dir = array_diff(scandir('test1'), ['.', '..']);
foreach($dir as $elem) {
file_put_contents('test1/'.$elem, '!', FILE_APPEND);
}

?>

37. Пусть в корне вашего сайта лежит папка dir, а в ней какие-то текстовые файлы. Переберите эти файлы циклом и выведите их тексты в браузер.

<?php

$dir = array_diff(scandir('test1'), ['.', '..']);
foreach($dir as $elem) {
echo file_get_contents('test1/'.$elem).'<br>';
}

?>
Нравится
*********
*********
********* 9 сен 2018 в 19:54
38. Пусть дан путь к файлу. Проверьте, файл это или папка.
<?php

var_dump( is_file('test1'));
var_dump( is_file('test1.txt'));
var_dump( is_dir('test1'));
var_dump( is_dir('test1.txt'));

?>
39. Пусть в корне вашего сайта лежит папка dir, а в ней какие-то файлы и подпапки. Выведите на экран столбец имен подпапок из папки dir.
??
40. Пусть в корне вашего сайта лежит папка dir, а в ней какие-то файлы и подпапки. Выведите на экран столбец имен файлов из папки dir.
??

41. Пусть в корне вашего сайта лежит папка dir, а в ней какие-то текстовые файлы и подпапки. В подпапках в свою очередь также могут быть текстовые файлы и подпапки. Рекурсивно пройдитесь по всем вложенным папкам и выведите в браузер пути ко всем текстовым файлам.

<?php
getDir('test1');
function getDir($dir) {
$openDir = array_diff(scandir($dir), ['.', '..']);
foreach($openDir as $elem) {
if(is_dir($dir . '/' . $elem)) {
getDir($dir . '/' . $elem);
}
else var_dump($dir . '/' . $elem);
}
}
?>
Нравится
*********
*********
********* 9 сен 2018 в 20:04
42. Пусть в корне вашего сайта лежит папка dir с текстовыми файлами и подпапками. Рекурсивно пройдитесь по всем вложенным папкам и в конец каждого текстового файла запишите восклицательный знак.

<?php
getDir('test1');
function getDir($dir) {
$openDir = array_diff(scandir($dir), ['.', '..']);
foreach($openDir as $elem) {
$path = $dir . '/' . $elem;
if(is_dir($path)) {
getDir($path);
}
else {
file_put_contents($path, '!', FILE_APPEND);
var_dump( file_get_contents($path));
}
}
}
?>

43. Пусть в корне вашего сайта лежит папка dir с текстовыми файлами и подпапками. Удалите папку dir вместе с ее содержимым.

<?php
removeDir('test1');
function removeDir($dir) {
$openDir = array_diff(scandir($dir), ['.', '..']);
foreach($openDir as $elem) {
$path = $dir . '/' . $elem;
if(is_dir($path)) {
removeDir($path);
}
else {
unlink($path);
}
}
rmdir($dir);
}
?>


