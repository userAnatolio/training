<?php
/*
Задача 1:
Не подсматривая в мой код реализуйте такой же класс Student, наследующий от User.

Задача 2:
Сделайте класс User, в котором будут следующие свойства только для чтения: name (имя), surname (фамилия), 
Начальные значения этих свойств должны устанавливаться в конструкторе. Сделайте также геттеры этих свойств.

Задача 3:
Сделайте так, чтобы третьим параметром в конструктор передавалась дата рождения работника в формате год-месяц-день 
Запишите ее в свойство birthday. Сделайте геттер для этого свойства.

Задача 4:
Сделайте приватный метод calculateAge, который параметром будет принимать дату рождения, а возвращать возраст с учетом того, 
был ли уже день рождения в этом году, или нет.

Задача 5:
Сделайте так, чтобы метод calculateAge вызывался в конструкторе объекта, рассчитывал возраст пользователя и записывал его в 
приватное свойство age. Сделайте геттер для этого свойства.

Задача 6:
Сделайте класс Employee, который будет наследовать от класса User. Пусть новый класс имеет свойство salary, в котором будет 
хранится зарплата работника. Зарплата должна передаваться четвертым параметром в конструктор объекта. Сделайте также геттер 
для этого свойства.
*/

require_once 'User.php';
require_once 'Employee.php';


	$Employee = new Employee('Коля', 'Куликов', '05.12.87', 19, 50000);
	
	echo $Employee->getName() . '<br>'; 
	echo $Employee->getSurname() . '<br>'; 
	echo $Employee->getBirthday() . '<br>'; 
	echo $Employee->getAge() . '<br>';
	echo $Employee->getSalary() . '<br>';

?>


<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Шаблон</title>
<style>
body {
background: #5d5d5d;
color: white;
}
div {
color: yellow;
background: black;
margin-right: 30px;
padding: 5px;
}
</style>
</head>
<body>
</body>
</html>